{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "links": {"attachments": {"href": "data/repositories/osrf/subt/issues/245/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/subt/issues/245.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/issues/245/watch"}, "comments": {"href": "data/repositories/osrf/subt/issues/245/comments_page=1.json"}, "html": {"href": "#!/osrf/subt/issues/245/robot-to-robot-communication-problem"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/issues/245/vote"}}, "reporter": {"display_name": "Malcolm Stagg", "uuid": "{eee13832-fdd5-4196-aa05-6cfdb1118c65}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beee13832-fdd5-4196-aa05-6cfdb1118c65%7D"}, "html": {"href": "https://bitbucket.org/%7Beee13832-fdd5-4196-aa05-6cfdb1118c65%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8c08ab97dc600bddad36e4a58f8cc5afd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-3.png"}}, "nickname": "malcolmst7", "type": "user", "account_id": "557058:08ef8b07-1500-4917-989c-89f91ce4beac"}, "title": "Robot-to-robot communication problem", "component": null, "votes": 3, "watches": 11, "content": {"raw": "First off I\u2019m embarrassed to be posting this on the day of the submission deadline. I\u2019ve mostly been focusing development efforts on a single robot at a time, and am just now trying to put everything together.\r\n\r\nI\u2019ve been having issues receiving messages from other robots via the `subt_communication_client`. Running locally without the cloudsim infrastructure, I did a bunch of digging and found that the `subt_communication_broker` is now using an ign service call \\(not ros\\) to send the message to the destination:\r\n\r\n```\r\n          if (!this->node.Request(client.address, msg))\r\n          {\r\n            std::cerr << \"[CommsBrokerPlugin::DispatchMessages()]: Error \"\r\n                      << \"sending message to [\" << client.address << \"]\"\r\n                      << std::endl;\r\n          }\r\n```\r\n\r\nSo I was able to get communication working again, without the cloudsim infrastructure, by setting `_useIgnition=true `in the `subt_communication_client`. Note though that this is exactly what the documentation says not to do:\r\n\r\n```\r\n    /// \\param[in] _useIgnition Set to true if you are using Ignition\r\n    /// transport (i.e. not ROS). This is needed by the base station,\r\n    /// and tests. If you are a regular robot, then you really really do not\r\n    /// want to set this to true as your Commsclient will not work.\r\n```\r\n\r\nThis allows the robots to communicate without cloudsim, but then if I run the cloudsim docker-compose infrastructure locally, I\u2019m back to the robots not being able to communicate at all. I\u2019ve tried `_useIgnition=false`, `_useIgnition=true`, etc\u2026 but nothing so far has worked. I will try this on the cloudsim portal as well but was hoping to debug any remaining comm issues locally first.\r\n\r\nWhen the comms is not working, client->Neighbors\\(\\) always returns an empty list \\(despite client->StartBeaconInterval having been called\\) and sending a message to \u201cbroadcast\u201d has no effect \\(not received by itself or another robot, despite close proximity\\).\r\n\r\nDoes anyone have any thoughts on this? Thanks!", "markup": "markdown", "html": "<p>First off I\u2019m embarrassed to be posting this on the day of the submission deadline. I\u2019ve mostly been focusing development efforts on a single robot at a time, and am just now trying to put everything together.</p>\n<p>I\u2019ve been having issues receiving messages from other robots via the <code>subt_communication_client</code>. Running locally without the cloudsim infrastructure, I did a bunch of digging and found that the <code>subt_communication_broker</code> is now using an ign service call (not ros) to send the message to the destination:</p>\n<div class=\"codehilite\"><pre><span></span>          <span class=\"nt\">if</span> <span class=\"o\">(!</span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">node</span><span class=\"p\">.</span><span class=\"nc\">Request</span><span class=\"o\">(</span><span class=\"nt\">client</span><span class=\"p\">.</span><span class=\"nc\">address</span><span class=\"o\">,</span> <span class=\"nt\">msg</span><span class=\"o\">))</span>\n          <span class=\"p\">{</span>\n            <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">cerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;</span><span class=\"cp\">[</span><span class=\"nx\">CommsBrokerPlugin</span><span class=\"nl\">::DispatchMessages</span><span class=\"p\">()</span><span class=\"cp\">]</span><span class=\"s2\">: Error &quot;</span>\n                      <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;sending message to </span><span class=\"cp\">[</span><span class=\"s2\">&quot; &lt;&lt; client.address &lt;&lt; &quot;</span><span class=\"cp\">]</span><span class=\"s2\">&quot;</span>\n                      <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n          <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>So I was able to get communication working again, without the cloudsim infrastructure, by setting <code>_useIgnition=true</code>in the <code>subt_communication_client</code>. Note though that this is exactly what the documentation says not to do:</p>\n<div class=\"codehilite\"><pre><span></span>    /// \\param[in] _useIgnition Set to true if you are using Ignition\n    /// transport (i.e. not ROS). This is needed by the base station,\n    /// and tests. If you are a regular robot, then you really really do not\n    /// want to set this to true as your Commsclient will not work.\n</pre></div>\n\n\n<p>This allows the robots to communicate without cloudsim, but then if I run the cloudsim docker-compose infrastructure locally, I\u2019m back to the robots not being able to communicate at all. I\u2019ve tried <code>_useIgnition=false</code>, <code>_useIgnition=true</code>, etc\u2026 but nothing so far has worked. I will try this on the cloudsim portal as well but was hoping to debug any remaining comm issues locally first.</p>\n<p>When the comms is not working, client-&gt;Neighbors() always returns an empty list (despite client-&gt;StartBeaconInterval having been called) and sending a message to \u201cbroadcast\u201d has no effect (not received by itself or another robot, despite close proximity).</p>\n<p>Does anyone have any thoughts on this? Thanks!</p>", "type": "rendered"}, "assignee": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-09T16:13:21.416263+00:00", "milestone": null, "updated_on": "2020-03-27T18:13:14.979649+00:00", "type": "issue", "id": 245}