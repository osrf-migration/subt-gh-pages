{"links": {"self": {"href": "data/repositories/osrf/subt/issues/120/comments/53115854.json"}, "html": {"href": "#!/osrf/subt/issues/120#comment-53115854"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/120.json"}}, "type": "issue", "id": 120, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Transform from X2_1/base_link/imu_sensor to X2_1/base_link is unavailable"}, "content": {"raw": "> \\[ WARN\\] \\[[1563827173](#!/osrf/subt/commits/1563827173).[117525065](#!/osrf/subt/commits/117525065), 1066.[787000000](#!/osrf/subt/commits/787000000)\\]: Detected jump back in time of 1.56383e\\+09s. Clearing TF buffer.\n\nIs very different from\n\n> `ESC[33m[ WARN] [1563915818.785496980, 6.840000000]: Detected jump back in time of 0.004s. Clearing TF buffer.ESC[0m`\n\nIt looks like sim time is helping to me but you have another issue.\n\n> `ESC[33m[ WARN] [1563915818.859838999, 6.840000000]: Could not obtain transform from base_link to X2_1/base_link. Error was \"base_link\" passed to lookupTransform argument source_frame does not exist.`\n\nAre there multiple publishers for that tf? This is typically an error you get whenever the tf tree is being  broken by multiple tf publishers. l. You could also be using a legacy static transform \\(make sure all of your static transformers are tf2, not tf\\) and that could be causing some of the jumping back in time as the transform is on both tf and tf\\_static.\n\nAlso, judging from Addisu\u2019s comment that he cannot find that publisher in Gazebo 9, you might be publishing it in a launch file and Ignition Gazebo might be publishing it as well.", "markup": "markdown", "html": "<blockquote>\n<p>[ WARN] [<a data-is-external-link=\"true\" href=\"#!/osrf/subt/commits/1563827173\" rel=\"nofollow\">1563827173</a>.<a data-is-external-link=\"true\" href=\"#!/osrf/subt/commits/117525065\" rel=\"nofollow\">117525065</a>, 1066.<a data-is-external-link=\"true\" href=\"#!/osrf/subt/commits/787000000\" rel=\"nofollow\">787000000</a>]: Detected jump back in time of 1.56383e+09s. Clearing TF buffer.</p>\n</blockquote>\n<p>Is very different from</p>\n<blockquote>\n<p><code>ESC[33m[ WARN] [1563915818.785496980, 6.840000000]: Detected jump back in time of 0.004s. Clearing TF buffer.ESC[0m</code></p>\n</blockquote>\n<p>It looks like sim time is helping to me but you have another issue.</p>\n<blockquote>\n<p><code>ESC[33m[ WARN] [1563915818.859838999, 6.840000000]: Could not obtain transform from base_link to X2_1/base_link. Error was \"base_link\" passed to lookupTransform argument source_frame does not exist.</code></p>\n</blockquote>\n<p>Are there multiple publishers for that tf? This is typically an error you get whenever the tf tree is being  broken by multiple tf publishers. l. You could also be using a legacy static transform (make sure all of your static transformers are tf2, not tf) and that could be causing some of the jumping back in time as the transform is on both tf and tf_static.</p>\n<p>Also, judging from Addisu\u2019s comment that he cannot find that publisher in Gazebo 9, you might be publishing it in a launch file and Ignition Gazebo might be publishing it as well.</p>", "type": "rendered"}, "created_on": "2019-07-23T21:53:55.866591+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": "2019-07-23T21:56:55.590218+00:00", "type": "issue_comment", "id": 53115854}