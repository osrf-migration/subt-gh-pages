{"links": {"self": {"href": "data/repositories/osrf/subt/issues/79/comments/52806986.json"}, "html": {"href": "#!/osrf/subt/issues/79#comment-52806986"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/79.json"}}, "type": "issue", "id": 79, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Wheel Odometry in Ignition Gazebo"}, "content": {"raw": "Reopening this here, there is a mistake in the message source and child frame id which is keeping cartographer from working properly. Running with an \u201cX1\u201d, I get in the odometry message on ROS as well as in ignition,\n\nheader/frame\\_id = \u201cX1\u201d\n\nchild\\_frame\\_id := \u201cbase\\_link\u201d\n\n  \n\nThis should be:\n\nheader/frame\\_id = \u201cX1/odom\u201d\n\nchild\\_frame\\_id := \u201cX1/base\\_link\u201d\n\nThere is an additional critical flaw in that the tf\\_broadcaster node is pushing null transforms from \u201cX1\u201d \u2192 \u201cX1/base\\_link\u201d. I\u2019ll open a new issue with this one\n\n  \n\nWhat I did to fix it: \\(you might want to do something better to get the frame names from parameters\\)\n\nign-gazebo/src/systems/diff\\_drive/DiffDrive.cc\n\nline 294:   \n\nframe->add\\_value\\(this->[model.Name](http://model.Name)\\(\\_ecm\\) \\+ std::string\\(\"/odom\"\\)\\);   \n  \nline 301:  \n\nchildFrame->add\\_value\\(this->[model.Name](http://model.Name)\\(\\_ecm\\) \\+ std::string\\(\"/\"\\) \\+ \\*linkName\\);", "markup": "markdown", "html": "<p>Reopening this here, there is a mistake in the message source and child frame id which is keeping cartographer from working properly. Running with an \u201cX1\u201d, I get in the odometry message on ROS as well as in ignition,</p>\n<p>header/frame_id = \u201cX1\u201d</p>\n<p>child_frame_id := \u201cbase_link\u201d</p>\n<p>This should be:</p>\n<p>header/frame_id = \u201cX1/odom\u201d</p>\n<p>child_frame_id := \u201cX1/base_link\u201d</p>\n<p>There is an additional critical flaw in that the tf_broadcaster node is pushing null transforms from \u201cX1\u201d \u2192 \u201cX1/base_link\u201d. I\u2019ll open a new issue with this one</p>\n<p>What I did to fix it: (you might want to do something better to get the frame names from parameters)</p>\n<p>ign-gazebo/src/systems/diff_drive/DiffDrive.cc</p>\n<p>line 294:   </p>\n<p>frame-&gt;add_value(this-&gt;<a data-is-external-link=\"true\" href=\"http://model.Name\" rel=\"nofollow\">model.Name</a>(_ecm) + std::string(\"/odom\"));   </p>\n<p>line 301:  </p>\n<p>childFrame-&gt;add_value(this-&gt;<a data-is-external-link=\"true\" href=\"http://model.Name\" rel=\"nofollow\">model.Name</a>(_ecm) + std::string(\"/\") + *linkName);</p>", "type": "rendered"}, "created_on": "2019-07-01T18:00:08.327611+00:00", "user": {"display_name": "John Rogers", "uuid": "{650ff4d5-649f-4adf-8e52-c3988db6f383}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B650ff4d5-649f-4adf-8e52-c3988db6f383%7D"}, "html": {"href": "https://bitbucket.org/%7B650ff4d5-649f-4adf-8e52-c3988db6f383%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5a85c547ab17cb21ae00a55faff2e3bfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-6.png"}}, "nickname": "jgrogers", "type": "user", "account_id": "557058:4781f1b2-8fd1-4cc8-a0ca-2f2edb51de61"}, "updated_on": null, "type": "issue_comment", "id": 52806986}