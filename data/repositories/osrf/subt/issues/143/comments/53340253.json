{"links": {"self": {"href": "data/repositories/osrf/subt/issues/143/comments/53340253.json"}, "html": {"href": "#!/osrf/subt/issues/143#comment-53340253"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/143.json"}}, "type": "issue", "id": 143, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "SubT CommsClient Can't handle ros namespaces"}, "content": {"raw": "I don\u2019t think it\u2019s anything we are doing in particular other than our use of a group namespace tag in our launch file. The easiest way to replicate the problem is with the subt\\_seed example.\n\nChange the launch file so that it reads:\n\n```\n<?xml version=\"1.0\"?>\n<launch>\n  <!-- Arguments -->\n  <arg name=\"robot_1_name\" default=\"X1_1\" />\n\n  <!-- Other potential robot names -->\n  <!--\n  <arg name=\"robot_2_name\" default=\"X1_2\" />\n  -->\n\n  <!-- Launch your controller nodes -->\n  <group ns=\"$(arg robot_1_name)\">\n    <node name=\"$(arg robot_1_name)_control\" pkg=\"subt_seed\" type=\"subt_seed_node\" args=\"$(arg robot_1_name)\" output=\"screen\"/>\n  </group>\n\n  <!-- Other potential controllers -->\n  <!--\n  <node name=\"$(arg robot_2_name)_control\" pkg=\"subt_seed\" type=\"subt_seed_node\" args=\"$(arg robot_2_name)\" />\n  -->\n\n</launch>\n```\n\nAnd then run it \\(following exactly [#!/osrf/subt/wiki/tutorials/CustomControl](#!/osrf/subt/wiki/tutorials/CustomControl)\\)\n\nWithout the group tag, it runs fine, with the group tag, you immediately start seeing errors in the terminal:\n\n> \\[X1\\] CommsClient::Register: Problem registering with broker  \n> \\[CommsClient\\] Retrying register..\n\nI tried fixing the problem myself by diving into the subt comms code which is probably where I got confused on the role of the relay and broker \\(I wasn\u2019t aware the relay existed until opening this issue\\). The problem seems to be the use of relative paths when calling the various services used to register a robot and its communication channels. I changed them to absolute paths \\(eg \u201c/broker\u201d instead of \u201cbroker\u201d\\), which worked up to the point I can have print statements in the broker confirm it was receiving messages from the robot, but the robots never received any messages back. I assume I just missed something important related to registering everything correctly.", "markup": "markdown", "html": "<p>I don\u2019t think it\u2019s anything we are doing in particular other than our use of a group namespace tag in our launch file. The easiest way to replicate the problem is with the subt_seed example.</p>\n<p>Change the launch file so that it reads:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot;?&gt;</span>\n<span class=\"nt\">&lt;launch&gt;</span>\n  <span class=\"c\">&lt;!-- Arguments --&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;robot_1_name&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;X1_1&quot;</span> <span class=\"nt\">/&gt;</span>\n\n  <span class=\"c\">&lt;!-- Other potential robot names --&gt;</span>\n  <span class=\"c\">&lt;!--</span>\n<span class=\"c\">  &lt;arg name=&quot;robot_2_name&quot; default=&quot;X1_2&quot; /&gt;</span>\n<span class=\"c\">  --&gt;</span>\n\n  <span class=\"c\">&lt;!-- Launch your controller nodes --&gt;</span>\n  <span class=\"nt\">&lt;group</span> <span class=\"na\">ns=</span><span class=\"s\">&quot;$(arg robot_1_name)&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;node</span> <span class=\"na\">name=</span><span class=\"s\">&quot;$(arg robot_1_name)_control&quot;</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;subt_seed&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;subt_seed_node&quot;</span> <span class=\"na\">args=</span><span class=\"s\">&quot;$(arg robot_1_name)&quot;</span> <span class=\"na\">output=</span><span class=\"s\">&quot;screen&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/group&gt;</span>\n\n  <span class=\"c\">&lt;!-- Other potential controllers --&gt;</span>\n  <span class=\"c\">&lt;!--</span>\n<span class=\"c\">  &lt;node name=&quot;$(arg robot_2_name)_control&quot; pkg=&quot;subt_seed&quot; type=&quot;subt_seed_node&quot; args=&quot;$(arg robot_2_name)&quot; /&gt;</span>\n<span class=\"c\">  --&gt;</span>\n\n<span class=\"nt\">&lt;/launch&gt;</span>\n</pre></div>\n\n\n<p>And then run it (following exactly <a data-is-external-link=\"true\" href=\"#!/osrf/subt/wiki/tutorials/CustomControl\" rel=\"nofollow\">#!/osrf/subt/wiki/tutorials/CustomControl</a>)</p>\n<p>Without the group tag, it runs fine, with the group tag, you immediately start seeing errors in the terminal:</p>\n<blockquote>\n<p>[X1] CommsClient::Register: Problem registering with broker<br />\n[CommsClient] Retrying register..</p>\n</blockquote>\n<p>I tried fixing the problem myself by diving into the subt comms code which is probably where I got confused on the role of the relay and broker (I wasn\u2019t aware the relay existed until opening this issue). The problem seems to be the use of relative paths when calling the various services used to register a robot and its communication channels. I changed them to absolute paths (eg \u201c/broker\u201d instead of \u201cbroker\u201d), which worked up to the point I can have print statements in the broker confirm it was receiving messages from the robot, but the robots never received any messages back. I assume I just missed something important related to registering everything correctly.</p>", "type": "rendered"}, "created_on": "2019-08-08T19:26:25.121018+00:00", "user": {"display_name": "Reid Sawtell", "uuid": "{845ed98c-79aa-4771-ab0d-6d8424f27344}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B845ed98c-79aa-4771-ab0d-6d8424f27344%7D"}, "html": {"href": "https://bitbucket.org/%7B845ed98c-79aa-4771-ab0d-6d8424f27344%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8a592422a10cc54f020efbc4d867c556d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRS-6.png"}}, "nickname": "rsawtell", "type": "user", "account_id": "557058:ba6a5dd6-99be-45af-a802-687b3318965a"}, "updated_on": null, "type": "issue_comment", "id": 53340253}