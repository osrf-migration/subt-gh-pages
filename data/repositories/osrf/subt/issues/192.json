{"priority": "major", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "links": {"attachments": {"href": "data/repositories/osrf/subt/issues/192/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/subt/issues/192.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/issues/192/watch"}, "comments": {"href": "data/repositories/osrf/subt/issues/192/comments_page=1.json"}, "html": {"href": "#!/osrf/subt/issues/192/image-solution-runs-with-catkin-setup-but"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/issues/192/vote"}}, "reporter": {"display_name": "Hector Escobar", "uuid": "{1c140a49-f2c5-4727-abd9-eb427bfe4253}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1c140a49-f2c5-4727-abd9-eb427bfe4253%7D"}, "html": {"href": "https://bitbucket.org/%7B1c140a49-f2c5-4727-abd9-eb427bfe4253%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8da90eb0e9b47c9adfc2893e5190483fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHE-1.png"}}, "nickname": "hector_escobar", "type": "user", "account_id": "5b5b1c941394ae6a72c021df"}, "title": "Image Solution runs with catkin setup but not using docker compose", "component": null, "votes": 1, "watches": 3, "content": {"raw": "We are experiencing a problem where we have our solution image that runs fine using the [catkin method](#!/osrf/subt/wiki/tutorials/cloudsim) running both the cloudsim\\_sim and cloudsim\\_bridge and finally our image using ./run.bash our\\_image:latest. Like this all our system runs fine. We are using cuda for our solution, and when we replace our image on the docker-compose.yml and   ./run\\_docker\\_compose.sh as specified [here](#!/osrf/subt/wiki/tutorials/CloudsimDockerCompose), we get an error of not finding cuda. Are there any parameters that could be modified in the yml file as to allow cuda? I think we would have the same issue if we use the actual cloudsim. Our image was built FROM nvidia/cudagl:10.1-devel-ubuntu18.04 to account for it so we know our image has it. \r\n\r\nAny suggestions?", "markup": "markdown", "html": "<p>We are experiencing a problem where we have our solution image that runs fine using the <a data-is-external-link=\"true\" href=\"#!/osrf/subt/wiki/tutorials/cloudsim\" rel=\"nofollow\">catkin method</a> running both the cloudsim_sim and cloudsim_bridge and finally our image using ./run.bash our_image:latest. Like this all our system runs fine. We are using cuda for our solution, and when we replace our image on the docker-compose.yml and   ./run_docker_compose.sh as specified <a data-is-external-link=\"true\" href=\"#!/osrf/subt/wiki/tutorials/CloudsimDockerCompose\" rel=\"nofollow\">here</a>, we get an error of not finding cuda. Are there any parameters that could be modified in the yml file as to allow cuda? I think we would have the same issue if we use the actual cloudsim. Our image was built FROM nvidia/cudagl:10.1-devel-ubuntu18.04 to account for it so we know our image has it. </p>\n<p>Any suggestions?</p>", "type": "rendered"}, "assignee": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "state": "closed", "version": null, "edited_on": null, "created_on": "2019-09-19T21:44:35.765473+00:00", "milestone": null, "updated_on": "2019-10-31T05:52:53.316653+00:00", "type": "issue", "id": 192}