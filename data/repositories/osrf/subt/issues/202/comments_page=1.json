{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54077543.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54077543"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-09-25T17:42:02.313274+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54077543}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54077579.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54077579"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-09-25T17:46:39.541536+00:00", "user": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "updated_on": null, "type": "issue_comment", "id": 54077579}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54077812.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54077812"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "This is about the same as I experience when running on AWS.  Your allotted one-hour of simulation time starts whenever you call `/subt/start` or enter the environment though.", "markup": "markdown", "html": "<p>This is about the same as I experience when running on AWS.  Your allotted one-hour of simulation time starts whenever you call <code>/subt/start</code> or enter the environment though.</p>", "type": "rendered"}, "created_on": "2019-09-25T18:08:58.105313+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": null, "type": "issue_comment", "id": 54077812}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54077908.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54077908"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "OK, thank Arthur - my problem is not \u201cthe competition hour\u201d but that our code works fine locally and does not work at all on AWS \u2026 so I am looking for the root cause \u2026 and this could be another one, that it does not wait long enough. We have two \u201cnodes\u201d - one based on subt\\_seed example and another Python3  OSGAR code talking to ROS via \u201cROSProxy\u201d \u2026 and I have no indication that the Python3 \u201cnode\u201d actually started.", "markup": "markdown", "html": "<p>OK, thank Arthur - my problem is not \u201cthe competition hour\u201d but that our code works fine locally and does not work at all on AWS \u2026 so I am looking for the root cause \u2026 and this could be another one, that it does not wait long enough. We have two \u201cnodes\u201d - one based on subt_seed example and another Python3  OSGAR code talking to ROS via \u201cROSProxy\u201d \u2026 and I have no indication that the Python3 \u201cnode\u201d actually started.</p>", "type": "rendered"}, "created_on": "2019-09-25T18:18:35.550953+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54077908}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54079393.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54079393"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "The simulation container is started first, then the bridge+solution container is started. The whole process of starting a run can take multiple minutes.", "markup": "markdown", "html": "<p>The simulation container is started first, then the bridge+solution container is started. The whole process of starting a run can take multiple minutes.</p>", "type": "rendered"}, "created_on": "2019-09-25T20:35:00.188330+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 54079393}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54083298.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54083298"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "Is there something specific about the ROS nodes, like do they have to be all listed in launch file or something? I suppose that \u201cScientific Systems Company\u201d will not share info how they solved it \u2026 but even simple Python2 ROS code \\(subscribe and wait for sensors\\) is not listed in rosout \u2026 any hint is welcome. Thanks.\n\np.s. or do all nodes have to query \u201c/subt/start\u201d??", "markup": "markdown", "html": "<p>Is there something specific about the ROS nodes, like do they have to be all listed in launch file or something? I suppose that \u201cScientific Systems Company\u201d will not share info how they solved it \u2026 but even simple Python2 ROS code (subscribe and wait for sensors) is not listed in rosout \u2026 any hint is welcome. Thanks.</p>\n<p>p.s. or do all nodes have to query \u201c/subt/start\u201d??</p>", "type": "rendered"}, "created_on": "2019-09-26T05:16:27.395656+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54083298}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54093199.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54093199"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "Martin, can you please provide us the `ENTRYPOINT` \\(i.e. `subt_seed` has `ENTRYPOINT [\"./run_solution.bash\"]`\\) to your docker image and the associated bash scripts and launch file\\(s\\) so we can better investigate the issue.  Either provide them here or in a email to [**subt-help@googlegroups.com**](mailto:subt-help@googlegroups.com).  I\u2019m 100% I can solve and clarify what the issue in a very quick manner is if I can show you by-example using your files whereas it may take many more back-and-forth exchanges without being able to point out your specific issue.", "markup": "markdown", "html": "<p>Martin, can you please provide us the <code>ENTRYPOINT</code> (i.e. <code>subt_seed</code> has <code>ENTRYPOINT [\"./run_solution.bash\"]</code>) to your docker image and the associated bash scripts and launch file(s) so we can better investigate the issue.  Either provide them here or in a email to <a data-is-external-link=\"true\" href=\"mailto:subt-help@googlegroups.com\" rel=\"nofollow\"><strong>subt-help@googlegroups.com</strong></a>.  I\u2019m 100% I can solve and clarify what the issue in a very quick manner is if I can show you by-example using your files whereas it may take many more back-and-forth exchanges without being able to point out your specific issue.</p>", "type": "rendered"}, "created_on": "2019-09-26T15:37:59.363689+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": null, "type": "issue_comment", "id": 54093199}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54093346.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54093346"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "Nonetheless, here is a generic example answer from the [subt\\_helloworld development branch example](https://bitbucket.org/jgrogers/subt_hello_world/wiki/Home):\n\nEnsure you have an entrypoint set in your `Dockerfile` such as `ENTRYPOINT [\"./run_sim.sh\"]` from [here](https://bitbucket.org/jgrogers/subt_hello_world/src/development/docker/helloworld_submit/Dockerfile).  Also note that this script needs to be copied into the image whenever you\u2019re building the docker image.\n\nInside of the script you call as the entrypoint, ensure that you are sourcing your environment appropriately as `~/.bashrc` is not sourced when entering in this manner.  If you call multiple launch files or nodes inside of this script, ensure you start all but the last one you want to `hang` with an `&` to run the predecessor scripts/files/nodes in the background to ensure everything is launched up until your last line that will hang until the end of the run.  An example from `run_sim.sh` is [here](https://bitbucket.org/jgrogers/subt_hello_world/src/development/docker/helloworld_submit/run_sim.sh):\n\n\u200c\n\n```\n#!/usr/bin/env bash\n\n. /opt/ros/melodic/setup.bash\n. ~/subt_ws/install/setup.sh\n. ~/workspaces/catkin_build_ws/devel/setup.bash\n\nexec roslaunch helloworld_subt_launch robot.launch name:=alpha other_robot:=bravo perception:=true comms:=false control:=true fake_report:=false\n```\n\nwhile the launch file ran example is [here](https://bitbucket.org/jgrogers/subt_hello_world/src/development/catkin_build_ws/src/helloworld_subt_launch/launch/robot.launch):\n\n\u200c\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<launch>\n  <!-- The name/namespace of this robot -->\n  <arg name=\"name\"/>\n  <!-- The type of this robot (e.g. x1, x2, etc) -->\n  <arg name=\"type\" default=\"x1\"/>\n  <!-- Enable mapping subsystem -->\n  <arg name=\"mapping\" default=\"true\"/>\n  <!-- The mapping mode of this robot (e.g. 2d or 3d) -->\n  <arg name=\"mapping_mode\" default=\"3d\"/>\n  <!-- Enable control subsystem (wall-following behavior) -->\n  <arg name=\"control\" default=\"true\" />\n  <arg name=\"wall_follow\" default=\"false\"/>\n  <arg name=\"frontier_exploration\" default=\"true\"/>\n  <!-- Enable perception (object detection) -->\n  <arg name=\"perception\" default=\"true\"/>\n  <!-- Enable tensorflow object detector -->\n  <arg name=\"tensorflow_object_detector\" default=\"true\"/>\n  <!-- Enable Darknet (DNN object classifier) -->\n  <arg name=\"darknet\" default=\"false\"/>\n  <!-- Enable ground truth perception (logical camera) -->\n  <arg name=\"perception_ground_truth\" default=\"false\"/>\n  <!-- Enable object detection communication -->\n  <arg name=\"comms\" default=\"true\"/>\n  <arg name=\"other_robot\"/>\n\n  <!-- You'll want this if your odometry frame on <vehicle_name>/odom is <vehcle_name>->base_link without a prefix -->\n  <node pkg=\"tf2_ros\" type=\"static_transform_publisher\" name=\"static_base\" args=\" 0 0 0 0 0 0 $(arg name)/base_link base_link\"/>\n\n  <group ns=\"$(arg name)\">\n\n    <!-- Clear out IMU bias on startup -->\n    <node pkg=\"rosservice\" type=\"rosservice\" name=\"calib_imu\" args=\"call --wait imu/data/set_accel_bias 'bias: {x: 0.0, y: 0.0, z: 0.0}'\"/> \n    <node pkg=\"rosservice\" type=\"rosservice\" name=\"calib_gyro\" args=\"call --wait imu/data/set_rate_bias 'bias: {x: 0.0, y: 0.0, z: 0.0}'\"/> \n \n    <!-- Mapping setup -->\n    <group if=\"$(arg mapping)\">\n      <!-- Cartographer setup -->\n      <include file=\"$(find helloworld_subt_launch)/launch/cartographer.launch\">\n        <arg name=\"name\" value=\"$(arg name)\"/>\n        <arg name=\"mode\" value=\"$(arg mapping_mode)\"/>\n        <arg name=\"type\" value=\"$(arg type)\"/>\n      </include>\n\n      <node pkg=\"nodelet\" type=\"nodelet\" name=\"pcl_manager\" args=\"manager\" output=\"screen\" />\n\n      <!-- Run a passthrough filter to clean self returns -->\n      <node pkg=\"nodelet\" type=\"nodelet\" name=\"passthrough_x\" args=\"load pcl/PassThrough pcl_manager\" output=\"screen\">\n        <remap from=\"~input\" to=\"points\" />\n        <remap from=\"~output\" to=\"ptx\" />\n        <rosparam>\n          filter_field_name: x\n          filter_limit_min: -0.40\n          filter_limit_max:  0.40\n          filter_limit_negative: True\n        </rosparam>\n      </node>\n\n      <node pkg=\"nodelet\" type=\"nodelet\" name=\"passthrough_y\" args=\"load pcl/PassThrough pcl_manager\" output=\"screen\">\n        <remap from=\"~input\" to=\"ptx\" />\n        <remap from=\"~output\" to=\"points_filtered\" />\n        <rosparam>\n          filter_field_name: y\n          filter_limit_min: -0.40\n          filter_limit_max:  0.40\n          filter_limit_negative: True\n        </rosparam>\n      </node>\n\n      <!-- Octomap setup -->\n      <node pkg=\"octomap_server\" type=\"octomap_server_node\" name=\"octomap_server\">\n        <param name=\"resolution\" value=\"0.1\" />\n        <!-- fixed map frame (set to 'map' if SLAM or localization running) -->\n        <param name=\"frame_id\" type=\"string\" value=\"map\" />\n        <!-- maximum range to integrate (speedup!) -->\n        <param name=\"sensor_model/max_range\" value=\"10.0\" />\n        <!-- data source to integrate (PointCloud2) -->\n        <remap from=\"cloud_in\" to=\"points_filtered\"/>\n        <param name=\"filter_ground\" value=\"true\"/>\n        <param name=\"ground_filter/distance\" value=\"0.12\"/>\n        <param name=\"ground_filter/plane_distance\" value=\"0.2\"/>\n        <param name=\"base_frame_id\" value=\"$(arg name)/base_link\"/>\n        <param name=\"pointcloud_max_z\" value=\"1.8\"/>\n        <param name=\"occupancy_min_z\" value=\"0.2\"/>\n      </node>\n\n    </group>\n\n    <!-- Control setup -->\n    <group if=\"$(arg control)\">\n      <!-- Extract planar laser scan -->\n      <node pkg=\"pointcloud_to_laserscan\" type=\"pointcloud_to_laserscan_node\" name=\"ptcld_to_lsrscn\">\n        <param name=\"~min_height\" value=\"0.1\"/>\n        <param name=\"~max_height\" value=\"1.0\"/>\n        <param name=\"~range_max\" value=\"10.0\"/>\n        <remap from=\"cloud_in\" to=\"points\"/>\n      </node>\n\n      <!-- Controller -->\n      <!-- Wall Follower -->\n      <node if=\"$(arg wall_follow)\" pkg=\"wall_follow\" type=\"wall_follow_node\" name=\"wall_follow\" output=\"screen\">\n        <param name=\"name\" value=\"$(arg name)\"/>\n        <param name=\"base_link\" value=\"$(arg name)/base_link\"/>\n        <param name=\"start_delay\" value=\"0\"/>\n      </node>\n\n      <!-- Frontier Exploration http://wiki.ros.org/explore_lite -->\n      <node if=\"$(arg frontier_exploration)\" pkg=\"explore_lite\" type=\"explore\" respawn=\"false\" name=\"explore\" output=\"screen\">\n        <param name=\"robot_base_frame\" value=\"$(arg name)/base_link\"/>\n        <param name=\"costmap_topic\" value=\"move_base/global_costmap/costmap\"/>\n        <param name=\"costmap_updates_topic\" value=\"move_base/global_costmap/costmap_updates\"/>\n        <param name=\"visualize\" value=\"true\"/>\n        <param name=\"planner_frequency\" value=\"0.33\"/>\n        <param name=\"progress_timeout\" value=\"30.0\"/>\n        <param name=\"potential_scale\" value=\"3.0\"/>\n        <param name=\"orientation_scale\" value=\"0.0\"/>\n        <param name=\"gain_scale\" value=\"1.0\"/>\n        <param name=\"transform_tolerance\" value=\"0.3\"/>\n        <param name=\"min_frontier_size\" value=\"0.5\"/>\n      </node>\n\n      <!-- Required for both wall follow and frontier exploration http://wiki.ros.org/husky_navigation -->\n      <node pkg=\"move_base\" type=\"move_base\" respawn=\"false\" name=\"move_base\" output=\"screen\">\n        <param name=\"base_global_planner\" value=\"navfn/NavfnROS\"/>\n        <param name=\"base_local_planner\" value=\"dwa_local_planner/DWAPlannerROS\"/>\n        <rosparam file=\"$(find helloworld_subt_launch)/config/planner.yaml\" command=\"load\" />\n        \n        <rosparam file=\"$(find helloworld_subt_launch)/config/costmap_common_params.yaml\" command=\"load\" ns=\"global_costmap\" />\n        <rosparam file=\"$(find helloworld_subt_launch)/config/costmap_common_params.yaml\" command=\"load\" ns=\"local_costmap\" />\n        <rosparam file=\"$(find helloworld_subt_launch)/config/local_costmap_params.yaml\" command=\"load\" />\n        <rosparam file=\"$(find helloworld_subt_launch)/config/global_costmap_params.yaml\" command=\"load\" />\n        \n        <remap from=\"map\" to=\"projected_map\"/>\n        <!--<rosparam file=\"$(find helloworld_subt_launch)/config/base_local_planner_params.yaml\" command=\"load\" />-->\n      </node>\n      <!--<node pkg=\"move_base\" type=\"move_base\" respawn=\"false\" name=\"move_base\" output=\"screen\">\n        <param name=\"base_global_planner\" value=\"navfn/NavfnROS\"/>\n        <param name=\"base_local_planner\" value=\"dwa_local_planner/DWAPlannerROS\"/>\n        <rosparam file=\"$(find helloworld_subt_launch)/config/planner.yaml\" command=\"load\" />\n        \n        <rosparam file=\"$(find helloworld_subt_launch)/config/costmap_common.yaml\" command=\"load\" ns=\"global_costmap\" />\n        <rosparam file=\"$(find helloworld_subt_launch)/config/costmap_common.yaml\" command=\"load\" ns=\"local_costmap\" />\n        \n        <rosparam file=\"$(find helloworld_subt_launch)/config/costmap_local.yaml\" command=\"load\" />\n        <param name=\"local_costmap/width\" value=\"10.0\"/>\n        <param name=\"local_costmap/height\" value=\"10.0\"/>\n        \n        <rosparam file=\"$(find helloworld_subt_launch)/config/costmap_global_static.yaml\" command=\"load\" ns=\"global_costmap\" />\n        <remap from=\"map\" to=\"$(arg name)/projected_map\"/>\n      </node>-->\n      <!--<node pkg=\"move_base\" type=\"move_base\" respawn=\"false\" name=\"move_base\" output=\"screen\">\n        <rosparam file=\"$(find helloworld_subt_launch)/config/costmap_common_params.yaml\" command=\"load\" ns=\"global_costmap\" />\n        <rosparam file=\"$(find helloworld_subt_launch)/config/costmap_common_params.yaml\" command=\"load\" ns=\"local_costmap\" />\n        <rosparam file=\"$(find helloworld_subt_launch)/config/local_costmap_params.yaml\" command=\"load\" />\n        <rosparam file=\"$(find helloworld_subt_launch)/config/global_costmap_params.yaml\" command=\"load\" />\n        <rosparam file=\"$(find helloworld_subt_launch)/config/base_local_planner_params.yaml\" command=\"load\" />\n      </node>-->\n    \n    </group>\n\n    <!-- Perception setup -->\n    <group if=\"$(arg perception)\">\n      <!-- Use tensorflow object detector -->\n      <node if=\"$(arg tensorflow_object_detector)\" pkg=\"tensorflow_object_detector\" name=\"detect_ros\" type=\"detect_ros.py\" output=\"screen\"> \n        <remap from=\"image\" to=\"front/image_raw\"/>\n      </node>\n\n      <!-- Use logical camera if ground truth is on - Depreciated in Ignition - -->\n      <node if=\"$(arg perception_ground_truth)\" pkg=\"gazebo_logical_camera\" name=\"logical_camera_ros\" type=\"logical_camera_object_reporter_node\" output=\"screen\">\n        <param name=\"detection_frame_id\" value=\"$(arg name)/base_link\"/>\n        <param name=\"report_frame_id\" value=\"$(arg name)/map\"/>\n        <rosparam param=\"objects_to_recognize\">\n          backpack_1: 1\n          toolbox_1: 2\n          extinguisher_1: 3\n          valve_1: 4\n          radio_1: 5\n          Backpack: 7\n        </rosparam>\n      </node>\n\n      <!-- Image labeling for all forms of perception -->\n      <node pkg=\"camera_object_projector\" type=\"camera_object_projector_node\" name=\"camera_object_projector\" output=\"screen\">\n        <remap from=\"image\" to=\"front/image_raw\"/>\n        <remap from=\"camera_info\" to=\"front/camera_info\"/>\n        <remap from=\"object_detections\" to=\"objects\"/>\n      </node> \n       \n    </group>\n\n    <!-- A tf from map to ns/map is needed for each robot (this is not correct but it demonstrates functionality) - Allows map to be dynamic for move base on multiple vehicles -->\n    <node pkg=\"tf2_ros\" type=\"static_transform_publisher\" name=\"map_to_ns_map_stf\" args=\"0 0 0 0 0 0 map $(arg name)/map\" />\n\n    <!-- Communication setup -->\n    <group if=\"$(arg comms)\">\n      <!-- Communication package -->\n      <node pkg=\"comms_example\" name=\"object_detection_comms\" type=\"object_detection_node\" args=\"$(arg name) $(arg name) $(arg other_robot) $(arg other_robot)\" output=\"screen\" />\n    </group>\n\n  </group>\n\n</launch>\n```\n\n\u200c\n\nI hope the generic example is helpful for others.  Note: this has previously worked for me and there have been no changes to this structure since it was last tested.  I did not re-test it before posting this though so there _may_ be small differences/issues present from updates.", "markup": "markdown", "html": "<p>Nonetheless, here is a generic example answer from the <a data-is-external-link=\"true\" href=\"https://bitbucket.org/jgrogers/subt_hello_world/wiki/Home\" rel=\"nofollow\">subt_helloworld development branch example</a>:</p>\n<p>Ensure you have an entrypoint set in your <code>Dockerfile</code> such as <code>ENTRYPOINT [\"./run_sim.sh\"]</code> from <a data-is-external-link=\"true\" href=\"https://bitbucket.org/jgrogers/subt_hello_world/src/development/docker/helloworld_submit/Dockerfile\" rel=\"nofollow\">here</a>.  Also note that this script needs to be copied into the image whenever you\u2019re building the docker image.</p>\n<p>Inside of the script you call as the entrypoint, ensure that you are sourcing your environment appropriately as <code>~/.bashrc</code> is not sourced when entering in this manner.  If you call multiple launch files or nodes inside of this script, ensure you start all but the last one you want to <code>hang</code> with an <code>&amp;</code> to run the predecessor scripts/files/nodes in the background to ensure everything is launched up until your last line that will hang until the end of the run.  An example from <code>run_sim.sh</code> is <a data-is-external-link=\"true\" href=\"https://bitbucket.org/jgrogers/subt_hello_world/src/development/docker/helloworld_submit/run_sim.sh\" rel=\"nofollow\">here</a>:</p>\n<p>\u200c</p>\n<div class=\"codehilite language-bash\"><pre><span></span><span class=\"ch\">#!/usr/bin/env bash</span>\n\n. /opt/ros/melodic/setup.bash\n. ~/subt_ws/install/setup.sh\n. ~/workspaces/catkin_build_ws/devel/setup.bash\n\n<span class=\"nb\">exec</span> roslaunch helloworld_subt_launch robot.launch name:<span class=\"o\">=</span>alpha other_robot:<span class=\"o\">=</span>bravo perception:<span class=\"o\">=</span><span class=\"nb\">true</span> comms:<span class=\"o\">=</span><span class=\"nb\">false</span> control:<span class=\"o\">=</span><span class=\"nb\">true</span> fake_report:<span class=\"o\">=</span><span class=\"nb\">false</span>\n</pre></div>\n\n\n<p>while the launch file ran example is <a data-is-external-link=\"true\" href=\"https://bitbucket.org/jgrogers/subt_hello_world/src/development/catkin_build_ws/src/helloworld_subt_launch/launch/robot.launch\" rel=\"nofollow\">here</a>:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;</span>\n<span class=\"nt\">&lt;launch&gt;</span>\n  <span class=\"c\">&lt;!-- The name/namespace of this robot --&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;name&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"c\">&lt;!-- The type of this robot (e.g. x1, x2, etc) --&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;type&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;x1&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"c\">&lt;!-- Enable mapping subsystem --&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;mapping&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;true&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"c\">&lt;!-- The mapping mode of this robot (e.g. 2d or 3d) --&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;mapping_mode&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;3d&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"c\">&lt;!-- Enable control subsystem (wall-following behavior) --&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;control&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;true&quot;</span> <span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;wall_follow&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;false&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;frontier_exploration&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;true&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"c\">&lt;!-- Enable perception (object detection) --&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;perception&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;true&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"c\">&lt;!-- Enable tensorflow object detector --&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;tensorflow_object_detector&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;true&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"c\">&lt;!-- Enable Darknet (DNN object classifier) --&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;darknet&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;false&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"c\">&lt;!-- Enable ground truth perception (logical camera) --&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;perception_ground_truth&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;false&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"c\">&lt;!-- Enable object detection communication --&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;comms&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;true&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;other_robot&quot;</span><span class=\"nt\">/&gt;</span>\n\n  <span class=\"c\">&lt;!-- You&#39;ll want this if your odometry frame on &lt;vehicle_name&gt;/odom is &lt;vehcle_name&gt;-&gt;base_link without a prefix --&gt;</span>\n  <span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;tf2_ros&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;static_transform_publisher&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;static_base&quot;</span> <span class=\"na\">args=</span><span class=\"s\">&quot; 0 0 0 0 0 0 $(arg name)/base_link base_link&quot;</span><span class=\"nt\">/&gt;</span>\n\n  <span class=\"nt\">&lt;group</span> <span class=\"na\">ns=</span><span class=\"s\">&quot;$(arg name)&quot;</span><span class=\"nt\">&gt;</span>\n\n    <span class=\"c\">&lt;!-- Clear out IMU bias on startup --&gt;</span>\n    <span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;rosservice&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;rosservice&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;calib_imu&quot;</span> <span class=\"na\">args=</span><span class=\"s\">&quot;call --wait imu/data/set_accel_bias &#39;bias: {x: 0.0, y: 0.0, z: 0.0}&#39;&quot;</span><span class=\"nt\">/&gt;</span> \n    <span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;rosservice&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;rosservice&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;calib_gyro&quot;</span> <span class=\"na\">args=</span><span class=\"s\">&quot;call --wait imu/data/set_rate_bias &#39;bias: {x: 0.0, y: 0.0, z: 0.0}&#39;&quot;</span><span class=\"nt\">/&gt;</span> \n\n    <span class=\"c\">&lt;!-- Mapping setup --&gt;</span>\n    <span class=\"nt\">&lt;group</span> <span class=\"na\">if=</span><span class=\"s\">&quot;$(arg mapping)&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"c\">&lt;!-- Cartographer setup --&gt;</span>\n      <span class=\"nt\">&lt;include</span> <span class=\"na\">file=</span><span class=\"s\">&quot;$(find helloworld_subt_launch)/launch/cartographer.launch&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;name&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;$(arg name)&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;mode&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;$(arg mapping_mode)&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;type&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;$(arg type)&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/include&gt;</span>\n\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;nodelet&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;nodelet&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;pcl_manager&quot;</span> <span class=\"na\">args=</span><span class=\"s\">&quot;manager&quot;</span> <span class=\"na\">output=</span><span class=\"s\">&quot;screen&quot;</span> <span class=\"nt\">/&gt;</span>\n\n      <span class=\"c\">&lt;!-- Run a passthrough filter to clean self returns --&gt;</span>\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;nodelet&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;nodelet&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;passthrough_x&quot;</span> <span class=\"na\">args=</span><span class=\"s\">&quot;load pcl/PassThrough pcl_manager&quot;</span> <span class=\"na\">output=</span><span class=\"s\">&quot;screen&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;~input&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;points&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;~output&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;ptx&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;rosparam&gt;</span>\n          filter_field_name: x\n          filter_limit_min: -0.40\n          filter_limit_max:  0.40\n          filter_limit_negative: True\n        <span class=\"nt\">&lt;/rosparam&gt;</span>\n      <span class=\"nt\">&lt;/node&gt;</span>\n\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;nodelet&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;nodelet&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;passthrough_y&quot;</span> <span class=\"na\">args=</span><span class=\"s\">&quot;load pcl/PassThrough pcl_manager&quot;</span> <span class=\"na\">output=</span><span class=\"s\">&quot;screen&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;~input&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;ptx&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;~output&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;points_filtered&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;rosparam&gt;</span>\n          filter_field_name: y\n          filter_limit_min: -0.40\n          filter_limit_max:  0.40\n          filter_limit_negative: True\n        <span class=\"nt\">&lt;/rosparam&gt;</span>\n      <span class=\"nt\">&lt;/node&gt;</span>\n\n      <span class=\"c\">&lt;!-- Octomap setup --&gt;</span>\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;octomap_server&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;octomap_server_node&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;octomap_server&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;resolution&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.1&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"c\">&lt;!-- fixed map frame (set to &#39;map&#39; if SLAM or localization running) --&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;frame_id&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;string&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;map&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"c\">&lt;!-- maximum range to integrate (speedup!) --&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;sensor_model/max_range&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;10.0&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"c\">&lt;!-- data source to integrate (PointCloud2) --&gt;</span>\n        <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;cloud_in&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;points_filtered&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;filter_ground&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;true&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;ground_filter/distance&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.12&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;ground_filter/plane_distance&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.2&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;base_frame_id&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;$(arg name)/base_link&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;pointcloud_max_z&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;1.8&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;occupancy_min_z&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.2&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/node&gt;</span>\n\n    <span class=\"nt\">&lt;/group&gt;</span>\n\n    <span class=\"c\">&lt;!-- Control setup --&gt;</span>\n    <span class=\"nt\">&lt;group</span> <span class=\"na\">if=</span><span class=\"s\">&quot;$(arg control)&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"c\">&lt;!-- Extract planar laser scan --&gt;</span>\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;pointcloud_to_laserscan&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;pointcloud_to_laserscan_node&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;ptcld_to_lsrscn&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;~min_height&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.1&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;~max_height&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;1.0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;~range_max&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;10.0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;cloud_in&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;points&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/node&gt;</span>\n\n      <span class=\"c\">&lt;!-- Controller --&gt;</span>\n      <span class=\"c\">&lt;!-- Wall Follower --&gt;</span>\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">if=</span><span class=\"s\">&quot;$(arg wall_follow)&quot;</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;wall_follow&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;wall_follow_node&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;wall_follow&quot;</span> <span class=\"na\">output=</span><span class=\"s\">&quot;screen&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;name&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;$(arg name)&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;base_link&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;$(arg name)/base_link&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;start_delay&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/node&gt;</span>\n\n      <span class=\"c\">&lt;!-- Frontier Exploration http://wiki.ros.org/explore_lite --&gt;</span>\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">if=</span><span class=\"s\">&quot;$(arg frontier_exploration)&quot;</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;explore_lite&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;explore&quot;</span> <span class=\"na\">respawn=</span><span class=\"s\">&quot;false&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;explore&quot;</span> <span class=\"na\">output=</span><span class=\"s\">&quot;screen&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;robot_base_frame&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;$(arg name)/base_link&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;costmap_topic&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;move_base/global_costmap/costmap&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;costmap_updates_topic&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;move_base/global_costmap/costmap_updates&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visualize&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;true&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;planner_frequency&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.33&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;progress_timeout&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;30.0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;potential_scale&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;3.0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;orientation_scale&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;gain_scale&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;1.0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;transform_tolerance&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.3&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;min_frontier_size&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.5&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/node&gt;</span>\n\n      <span class=\"c\">&lt;!-- Required for both wall follow and frontier exploration http://wiki.ros.org/husky_navigation --&gt;</span>\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;move_base&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;move_base&quot;</span> <span class=\"na\">respawn=</span><span class=\"s\">&quot;false&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;move_base&quot;</span> <span class=\"na\">output=</span><span class=\"s\">&quot;screen&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;base_global_planner&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;navfn/NavfnROS&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;base_local_planner&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;dwa_local_planner/DWAPlannerROS&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;rosparam</span> <span class=\"na\">file=</span><span class=\"s\">&quot;$(find helloworld_subt_launch)/config/planner.yaml&quot;</span> <span class=\"na\">command=</span><span class=\"s\">&quot;load&quot;</span> <span class=\"nt\">/&gt;</span>\n\n        <span class=\"nt\">&lt;rosparam</span> <span class=\"na\">file=</span><span class=\"s\">&quot;$(find helloworld_subt_launch)/config/costmap_common_params.yaml&quot;</span> <span class=\"na\">command=</span><span class=\"s\">&quot;load&quot;</span> <span class=\"na\">ns=</span><span class=\"s\">&quot;global_costmap&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;rosparam</span> <span class=\"na\">file=</span><span class=\"s\">&quot;$(find helloworld_subt_launch)/config/costmap_common_params.yaml&quot;</span> <span class=\"na\">command=</span><span class=\"s\">&quot;load&quot;</span> <span class=\"na\">ns=</span><span class=\"s\">&quot;local_costmap&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;rosparam</span> <span class=\"na\">file=</span><span class=\"s\">&quot;$(find helloworld_subt_launch)/config/local_costmap_params.yaml&quot;</span> <span class=\"na\">command=</span><span class=\"s\">&quot;load&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;rosparam</span> <span class=\"na\">file=</span><span class=\"s\">&quot;$(find helloworld_subt_launch)/config/global_costmap_params.yaml&quot;</span> <span class=\"na\">command=</span><span class=\"s\">&quot;load&quot;</span> <span class=\"nt\">/&gt;</span>\n\n        <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;map&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;projected_map&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"c\">&lt;!--&lt;rosparam file=&quot;$(find helloworld_subt_launch)/config/base_local_planner_params.yaml&quot; command=&quot;load&quot; /&gt;--&gt;</span>\n      <span class=\"nt\">&lt;/node&gt;</span>\n      <span class=\"c\">&lt;!--&lt;node pkg=&quot;move_base&quot; type=&quot;move_base&quot; respawn=&quot;false&quot; name=&quot;move_base&quot; output=&quot;screen&quot;&gt;</span>\n<span class=\"c\">        &lt;param name=&quot;base_global_planner&quot; value=&quot;navfn/NavfnROS&quot;/&gt;</span>\n<span class=\"c\">        &lt;param name=&quot;base_local_planner&quot; value=&quot;dwa_local_planner/DWAPlannerROS&quot;/&gt;</span>\n<span class=\"c\">        &lt;rosparam file=&quot;$(find helloworld_subt_launch)/config/planner.yaml&quot; command=&quot;load&quot; /&gt;</span>\n\n<span class=\"c\">        &lt;rosparam file=&quot;$(find helloworld_subt_launch)/config/costmap_common.yaml&quot; command=&quot;load&quot; ns=&quot;global_costmap&quot; /&gt;</span>\n<span class=\"c\">        &lt;rosparam file=&quot;$(find helloworld_subt_launch)/config/costmap_common.yaml&quot; command=&quot;load&quot; ns=&quot;local_costmap&quot; /&gt;</span>\n\n<span class=\"c\">        &lt;rosparam file=&quot;$(find helloworld_subt_launch)/config/costmap_local.yaml&quot; command=&quot;load&quot; /&gt;</span>\n<span class=\"c\">        &lt;param name=&quot;local_costmap/width&quot; value=&quot;10.0&quot;/&gt;</span>\n<span class=\"c\">        &lt;param name=&quot;local_costmap/height&quot; value=&quot;10.0&quot;/&gt;</span>\n\n<span class=\"c\">        &lt;rosparam file=&quot;$(find helloworld_subt_launch)/config/costmap_global_static.yaml&quot; command=&quot;load&quot; ns=&quot;global_costmap&quot; /&gt;</span>\n<span class=\"c\">        &lt;remap from=&quot;map&quot; to=&quot;$(arg name)/projected_map&quot;/&gt;</span>\n<span class=\"c\">      &lt;/node&gt;--&gt;</span>\n      <span class=\"c\">&lt;!--&lt;node pkg=&quot;move_base&quot; type=&quot;move_base&quot; respawn=&quot;false&quot; name=&quot;move_base&quot; output=&quot;screen&quot;&gt;</span>\n<span class=\"c\">        &lt;rosparam file=&quot;$(find helloworld_subt_launch)/config/costmap_common_params.yaml&quot; command=&quot;load&quot; ns=&quot;global_costmap&quot; /&gt;</span>\n<span class=\"c\">        &lt;rosparam file=&quot;$(find helloworld_subt_launch)/config/costmap_common_params.yaml&quot; command=&quot;load&quot; ns=&quot;local_costmap&quot; /&gt;</span>\n<span class=\"c\">        &lt;rosparam file=&quot;$(find helloworld_subt_launch)/config/local_costmap_params.yaml&quot; command=&quot;load&quot; /&gt;</span>\n<span class=\"c\">        &lt;rosparam file=&quot;$(find helloworld_subt_launch)/config/global_costmap_params.yaml&quot; command=&quot;load&quot; /&gt;</span>\n<span class=\"c\">        &lt;rosparam file=&quot;$(find helloworld_subt_launch)/config/base_local_planner_params.yaml&quot; command=&quot;load&quot; /&gt;</span>\n<span class=\"c\">      &lt;/node&gt;--&gt;</span>\n\n    <span class=\"nt\">&lt;/group&gt;</span>\n\n    <span class=\"c\">&lt;!-- Perception setup --&gt;</span>\n    <span class=\"nt\">&lt;group</span> <span class=\"na\">if=</span><span class=\"s\">&quot;$(arg perception)&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"c\">&lt;!-- Use tensorflow object detector --&gt;</span>\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">if=</span><span class=\"s\">&quot;$(arg tensorflow_object_detector)&quot;</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;tensorflow_object_detector&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;detect_ros&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;detect_ros.py&quot;</span> <span class=\"na\">output=</span><span class=\"s\">&quot;screen&quot;</span><span class=\"nt\">&gt;</span> \n        <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;image&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;front/image_raw&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/node&gt;</span>\n\n      <span class=\"c\">&lt;!-- Use logical camera if ground truth is on - Depreciated in Ignition - --&gt;</span>\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">if=</span><span class=\"s\">&quot;$(arg perception_ground_truth)&quot;</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;gazebo_logical_camera&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;logical_camera_ros&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;logical_camera_object_reporter_node&quot;</span> <span class=\"na\">output=</span><span class=\"s\">&quot;screen&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;detection_frame_id&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;$(arg name)/base_link&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;report_frame_id&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;$(arg name)/map&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;rosparam</span> <span class=\"na\">param=</span><span class=\"s\">&quot;objects_to_recognize&quot;</span><span class=\"nt\">&gt;</span>\n          backpack_1: 1\n          toolbox_1: 2\n          extinguisher_1: 3\n          valve_1: 4\n          radio_1: 5\n          Backpack: 7\n        <span class=\"nt\">&lt;/rosparam&gt;</span>\n      <span class=\"nt\">&lt;/node&gt;</span>\n\n      <span class=\"c\">&lt;!-- Image labeling for all forms of perception --&gt;</span>\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;camera_object_projector&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;camera_object_projector_node&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;camera_object_projector&quot;</span> <span class=\"na\">output=</span><span class=\"s\">&quot;screen&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;image&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;front/image_raw&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;camera_info&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;front/camera_info&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;object_detections&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;objects&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/node&gt;</span> \n\n    <span class=\"nt\">&lt;/group&gt;</span>\n\n    <span class=\"c\">&lt;!-- A tf from map to ns/map is needed for each robot (this is not correct but it demonstrates functionality) - Allows map to be dynamic for move base on multiple vehicles --&gt;</span>\n    <span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;tf2_ros&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;static_transform_publisher&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;map_to_ns_map_stf&quot;</span> <span class=\"na\">args=</span><span class=\"s\">&quot;0 0 0 0 0 0 map $(arg name)/map&quot;</span> <span class=\"nt\">/&gt;</span>\n\n    <span class=\"c\">&lt;!-- Communication setup --&gt;</span>\n    <span class=\"nt\">&lt;group</span> <span class=\"na\">if=</span><span class=\"s\">&quot;$(arg comms)&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"c\">&lt;!-- Communication package --&gt;</span>\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;comms_example&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;object_detection_comms&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;object_detection_node&quot;</span> <span class=\"na\">args=</span><span class=\"s\">&quot;$(arg name) $(arg name) $(arg other_robot) $(arg other_robot)&quot;</span> <span class=\"na\">output=</span><span class=\"s\">&quot;screen&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/group&gt;</span>\n\n  <span class=\"nt\">&lt;/group&gt;</span>\n\n<span class=\"nt\">&lt;/launch&gt;</span>\n</pre></div>\n\n\n<p>\u200c</p>\n<p>I hope the generic example is helpful for others.  Note: this has previously worked for me and there have been no changes to this structure since it was last tested.  I did not re-test it before posting this though so there <em>may</em> be small differences/issues present from updates.</p>", "type": "rendered"}, "created_on": "2019-09-26T15:48:11.526625+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": null, "type": "issue_comment", "id": 54093346}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54094028.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54094028"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "Arthur, the docker image is based on subt\\_seed example:\n\n\u200c\n\n```\nFROM osrf/subt-virtual-testbed:subt_solution_latest\n\nRUN /usr/bin/python3 -m pip install --user --no-cache-dir msgpack pyserial \"opencv-python>3.4.2,<4\"\nRUN git clone https://github.com/robotika/osgar.git osgar \\\n  && cd osgar \\\n  && git checkout feature/virtual-ignition\n\nCOPY run_solution.bash ./\n\nCOPY subt_seed_node.cc ./src/subt_seed/src/subt_seed_node.cc\nRUN /bin/bash -c 'source /opt/ros/melodic/setup.bash && catkin_make install'\n\nENTRYPOINT [\"./run_solution.bash\"]\n```\n\nand `run_solution.bash` is currently\n\n\u200c\n\n```\n#!/usr/bin/env bash\n\n. /opt/ros/melodic/setup.bash\n. ~/subt_solution/install/setup.sh\n\n# Wait for the bridge\nsleep 30\n\n# Run your solution.\nroslaunch subt_seed x1.launch &\n\nsleep 10\n\ncd osgar\n\npython subt/wait_for_sensors.py\n\npython3 -m subt run subt/subt-x2.json --side left --walldist 0.75 --timeout 180 --note \"try to visit artifact and return home\" 2>&1 | python subt/std2ros.py\n\n```\n\nFor `ver5` I added `wait_for_sensors.py` and to get \u201cstdout\u201d I added also `std2ros.py`", "markup": "markdown", "html": "<p>Arthur, the docker image is based on subt_seed example:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>FROM osrf/subt-virtual-testbed:subt_solution_latest\n\nRUN /usr/bin/python3 -m pip install --user --no-cache-dir msgpack pyserial &quot;opencv-python&gt;3.4.2,&lt;4&quot;\nRUN git clone https://github.com/robotika/osgar.git osgar \\\n  &amp;&amp; cd osgar \\\n  &amp;&amp; git checkout feature/virtual-ignition\n\nCOPY run_solution.bash ./\n\nCOPY subt_seed_node.cc ./src/subt_seed/src/subt_seed_node.cc\nRUN /bin/bash -c &#39;source /opt/ros/melodic/setup.bash &amp;&amp; catkin_make install&#39;\n\nENTRYPOINT [&quot;./run_solution.bash&quot;]\n</pre></div>\n\n\n<p>and <code>run_solution.bash</code> is currently</p>\n<p>\u200c</p>\n<div class=\"codehilite language-bash\"><pre><span></span><span class=\"ch\">#!/usr/bin/env bash</span>\n\n. /opt/ros/melodic/setup.bash\n. ~/subt_solution/install/setup.sh\n\n<span class=\"c1\"># Wait for the bridge</span>\nsleep <span class=\"m\">30</span>\n\n<span class=\"c1\"># Run your solution.</span>\nroslaunch subt_seed x1.launch <span class=\"p\">&amp;</span>\n\nsleep <span class=\"m\">10</span>\n\n<span class=\"nb\">cd</span> osgar\n\npython subt/wait_for_sensors.py\n\npython3 -m subt run subt/subt-x2.json --side left --walldist <span class=\"m\">0</span>.75 --timeout <span class=\"m\">180</span> --note <span class=\"s2\">&quot;try to visit artifact and return home&quot;</span> <span class=\"m\">2</span>&gt;<span class=\"p\">&amp;</span><span class=\"m\">1</span> <span class=\"p\">|</span> python subt/std2ros.py\n</pre></div>\n\n\n<p>For <code>ver5</code> I added <code>wait_for_sensors.py</code> and to get \u201cstdout\u201d I added also <code>std2ros.py</code></p>", "type": "rendered"}, "created_on": "2019-09-26T16:35:39.651359+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54094028}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54094584.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54094584"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "The `subt_seed` is meant to be an example that you can use as a reference. There are numerous hardcoded values and behaviors in the `subt_seed`. For example, the `subt_seed` will automatically call `/subt/start` and you may not be ready to start the run.  The `subt_seed` will also send velocity commands to a robot, and periodic messages through the comms bridge.\n\nAt a minimum,  remove `roslaunch subt_seed x1.launch &` line in your `run_solution.bash`. I would strongly suggest creating your own solution that doesn't depend on the `subt_seed`.", "markup": "markdown", "html": "<p>The <code>subt_seed</code> is meant to be an example that you can use as a reference. There are numerous hardcoded values and behaviors in the <code>subt_seed</code>. For example, the <code>subt_seed</code> will automatically call <code>/subt/start</code> and you may not be ready to start the run.  The <code>subt_seed</code> will also send velocity commands to a robot, and periodic messages through the comms bridge.</p>\n<p>At a minimum,  remove <code>roslaunch subt_seed x1.launch &amp;</code> line in your <code>run_solution.bash</code>. I would strongly suggest creating your own solution that doesn't depend on the <code>subt_seed</code>.</p>", "type": "rendered"}, "created_on": "2019-09-26T17:19:52.532517+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 54094584}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54094759.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54094759"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "I modified the original example code and I use it in order to report artifacts - I was not able to do that with older code and at the end I gave up and modified working `subt_seed` \\(see 2 points in \u201cPractice Tunnel 01\u201d\\). I also removed all code related to sending commands - now it initializes communication, sends `/subt/start` and queries the initial robot pose.\n\nOr do you mean that even in the `wait_for_sensors.py` I should send `/subt/start`? It is optional so I suppose no?\n\nHere is the hacked `subt_seed` code: [https://github.com/robotika/osgar/blob/feature/virtual-ignition/subt/src/subt\\_seed\\_node.cc](https://github.com/robotika/osgar/blob/feature/virtual-ignition/subt/src/subt_seed_node.cc)", "markup": "markdown", "html": "<p>I modified the original example code and I use it in order to report artifacts - I was not able to do that with older code and at the end I gave up and modified working <code>subt_seed</code> (see 2 points in \u201cPractice Tunnel 01\u201d). I also removed all code related to sending commands - now it initializes communication, sends <code>/subt/start</code> and queries the initial robot pose.</p>\n<p>Or do you mean that even in the <code>wait_for_sensors.py</code> I should send <code>/subt/start</code>? It is optional so I suppose no?</p>\n<p>Here is the hacked <code>subt_seed</code> code: <a data-is-external-link=\"true\" href=\"https://github.com/robotika/osgar/blob/feature/virtual-ignition/subt/src/subt_seed_node.cc\" rel=\"nofollow\">https://github.com/robotika/osgar/blob/feature/virtual-ignition/subt/src/subt_seed_node.cc</a></p>", "type": "rendered"}, "created_on": "2019-09-26T17:38:36.687022+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54094759}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54094782.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54094782"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "p.s. `wait_for_sensors.py` is here [https://github.com/robotika/osgar/blob/feature/virtual-ignition/subt/wait\\_for\\_sensors.py](https://github.com/robotika/osgar/blob/feature/virtual-ignition/subt/wait_for_sensors.py)", "markup": "markdown", "html": "<p>p.s. <code>wait_for_sensors.py</code> is here <a data-is-external-link=\"true\" href=\"https://github.com/robotika/osgar/blob/feature/virtual-ignition/subt/wait_for_sensors.py\" rel=\"nofollow\">https://github.com/robotika/osgar/blob/feature/virtual-ignition/subt/wait_for_sensors.py</a></p>", "type": "rendered"}, "created_on": "2019-09-26T17:40:53.549307+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54094782}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54095342.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54095342"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "@{557058:490c665b-b69c-40f3-80ea-64f20747efc4} , \n\nWe use a main.launch file where we call all the required nodes \\(including python nodes\\) as shown in the example launch file above. Then our entry point looks like \n\n\u200c\n\n```\n#!/usr/bin/env bash\n\n. /opt/ros/melodic/setup.bash\n. ~/subt_solution/install/setup.sh\n\n# Wait for the bridge\nsleep 30\n\n# Run your solution.\nexec roslaunch ssci_nodes main.launch\n```\n\nMy suggestion would be you call all your python scripts inside the your x1.launch.  I am not sure your last line gets called as `python subt/wait_for_sensors.py` doesn\u2019t run in the background \\(maybe add &\\)", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:490c665b-b69c-40f3-80ea-64f20747efc4\">@Martin Dlouhy</span> , </p>\n<p>We use a main.launch file where we call all the required nodes (including python nodes) as shown in the example launch file above. Then our entry point looks like </p>\n<p>\u200c</p>\n<div class=\"codehilite language-bash\"><pre><span></span><span class=\"ch\">#!/usr/bin/env bash</span>\n\n. /opt/ros/melodic/setup.bash\n. ~/subt_solution/install/setup.sh\n\n<span class=\"c1\"># Wait for the bridge</span>\nsleep <span class=\"m\">30</span>\n\n<span class=\"c1\"># Run your solution.</span>\n<span class=\"nb\">exec</span> roslaunch ssci_nodes main.launch\n</pre></div>\n\n\n<p>My suggestion would be you call all your python scripts inside the your x1.launch.  I am not sure your last line gets called as <code>python subt/wait_for_sensors.py</code> doesn\u2019t run in the background (maybe add &amp;)</p>", "type": "rendered"}, "created_on": "2019-09-26T18:38:55.668753+00:00", "user": {"display_name": "Hector Escobar", "uuid": "{1c140a49-f2c5-4727-abd9-eb427bfe4253}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1c140a49-f2c5-4727-abd9-eb427bfe4253%7D"}, "html": {"href": "https://bitbucket.org/%7B1c140a49-f2c5-4727-abd9-eb427bfe4253%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8da90eb0e9b47c9adfc2893e5190483fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHE-1.png"}}, "nickname": "hector_escobar", "type": "user", "account_id": "5b5b1c941394ae6a72c021df"}, "updated_on": null, "type": "issue_comment", "id": 54095342}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54095431.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54095431"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "Hector, thank you :slight_smile: - the `wait_for_sensors.py` should finish as soon as it gets a message for each topic. I added it there to be sure that it is ready, but it did not help much. I will look into launch files, thank you.", "markup": "markdown", "html": "<p>Hector, thank you <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f642.png\" alt=\"\ud83d\ude42\" title=\":slight_smile:\" data-emoji-short-name=\":slight_smile:\" /> - the <code>wait_for_sensors.py</code> should finish as soon as it gets a message for each topic. I added it there to be sure that it is ready, but it did not help much. I will look into launch files, thank you.</p>", "type": "rendered"}, "created_on": "2019-09-26T18:48:01.161339+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54095431}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54096060.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54096060"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "It looks like everyone above has posted some great advice. I would remove `subt_seed` code as soon as you get your own code working as it may interfere \\(although it sounds like you\u2019ve modified it a good bit\\). I concur with Hector here, the recommended way to launch a large number of ROS nodes is by using launch files to launch all of your nodes together although having a script such as `python subt/wait_for_sensors.py` to listen for sensors then exit is a good idea and might remove the need for the sleep. Although, the bridge should be up so I don\u2019t believe you\u2019ll have to add those sleeps in for Cloudsim.\n\nIt sounds as if you\u2019re making progress though and you\u2019ve started to get everything working. Please keep pinging back on this issue with additional questions/issues.", "markup": "markdown", "html": "<p>It looks like everyone above has posted some great advice. I would remove <code>subt_seed</code> code as soon as you get your own code working as it may interfere (although it sounds like you\u2019ve modified it a good bit). I concur with Hector here, the recommended way to launch a large number of ROS nodes is by using launch files to launch all of your nodes together although having a script such as <code>python subt/wait_for_sensors.py</code> to listen for sensors then exit is a good idea and might remove the need for the sleep. Although, the bridge should be up so I don\u2019t believe you\u2019ll have to add those sleeps in for Cloudsim.</p>\n<p>It sounds as if you\u2019re making progress though and you\u2019ve started to get everything working. Please keep pinging back on this issue with additional questions/issues.</p>", "type": "rendered"}, "created_on": "2019-09-26T19:57:32.866788+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": "2019-09-27T01:02:44.367981+00:00", "type": "issue_comment", "id": 54096060}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54099363.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54099363"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "Arthur, thanks but I do not share your optimism any more :wink: \u2026 I would like to drop `subt_seed` completely, but then I have issue with reporting artifacts \\(I would almost day \u201cdamn artifacts\u201d\\). I suppose that the communication client should work without ROS - to use zeromq directly is probably another way to hell. One launch file sounds the way to go, but the rest is still unclear to me \u2026\n\nOT our desperate \u201cprogress report\u201d is here: [https://robotika.cz/competitions/subtchallenge/virtual-tunnel-circuit/en](https://robotika.cz/competitions/subtchallenge/virtual-tunnel-circuit/en#190925)", "markup": "markdown", "html": "<p>Arthur, thanks but I do not share your optimism any more <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f609.png\" alt=\"\ud83d\ude09\" title=\":wink:\" data-emoji-short-name=\":wink:\" /> \u2026 I would like to drop <code>subt_seed</code> completely, but then I have issue with reporting artifacts (I would almost day \u201cdamn artifacts\u201d). I suppose that the communication client should work without ROS - to use zeromq directly is probably another way to hell. One launch file sounds the way to go, but the rest is still unclear to me \u2026</p>\n<p>OT our desperate \u201cprogress report\u201d is here: <a data-is-external-link=\"true\" href=\"https://robotika.cz/competitions/subtchallenge/virtual-tunnel-circuit/en#190925\" rel=\"nofollow\">https://robotika.cz/competitions/subtchallenge/virtual-tunnel-circuit/en</a></p>", "type": "rendered"}, "created_on": "2019-09-27T04:42:17.899835+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54099363}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54099504.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54099504"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "p.s. I was very naive - even the communication broker needs ROS:\n\n\u200c\n\n```\ndeveloper@gpu-desktop:~/subt_solution/osgar/subt/src$ g++ report_artf.cc -I/home/developer/subt_solution/install/include/\nIn file included from report_artf.cc:26:0:\n/home/developer/subt_solution/install/include/subt_communication_broker/subt_communication_client.h:19:10: fatal error: ros/ros.h: No such file or directory\n #include <ros/ros.h>\n          ^~~~~~~~~~~\ncompilation terminated.\n```\n\n\u200c", "markup": "markdown", "html": "<p>p.s. I was very naive - even the communication broker needs ROS:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">developer</span><span class=\"err\">@</span><span class=\"n\">gpu</span><span class=\"o\">-</span><span class=\"nl\">desktop</span><span class=\"p\">:</span><span class=\"o\">~/</span><span class=\"n\">subt_solution</span><span class=\"o\">/</span><span class=\"n\">osgar</span><span class=\"o\">/</span><span class=\"n\">subt</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"err\">$</span> <span class=\"n\">g</span><span class=\"o\">++</span> <span class=\"n\">report_artf</span><span class=\"p\">.</span><span class=\"n\">cc</span> <span class=\"o\">-</span><span class=\"n\">I</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">developer</span><span class=\"o\">/</span><span class=\"n\">subt_solution</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span>\n<span class=\"n\">In</span> <span class=\"n\">file</span> <span class=\"n\">included</span> <span class=\"n\">from</span> <span class=\"n\">report_artf</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">26</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">developer</span><span class=\"o\">/</span><span class=\"n\">subt_solution</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">subt_communication_broker</span><span class=\"o\">/</span><span class=\"n\">subt_communication_client</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span> <span class=\"n\">fatal</span> <span class=\"nl\">error</span><span class=\"p\">:</span> <span class=\"n\">ros</span><span class=\"o\">/</span><span class=\"n\">ros</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n <span class=\"cp\">#include</span> <span class=\"cpf\">&lt;ros/ros.h&gt;</span><span class=\"cp\"></span>\n          <span class=\"o\">^~~~~~~~~~~</span>\n<span class=\"n\">compilation</span> <span class=\"n\">terminated</span><span class=\"p\">.</span>\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-09-27T05:01:11.550121+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54099504}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54100055.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54100055"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "p.s.2 Arthur, I decided to go \u201copposite direction\u201d i.e. to extend something, which is already working \\(subt\\_seed\\_node\\). I added four subsrcibers \\(odometry, imu, scan and image\\) and uncommented publisher cmdVel. As callback functions I added only ROS\\_INFO what message I received, OK? I just submitted \u201cver7\u201d to see what AWS will do, but locally I got \u201cstrange\u201d outpus\n\n\u200c\n\n```\n[ INFO] [1569563527.221367007, 160.032000000]: received Imu\n[ INFO] [1569563527.221439372, 160.032000000]: received Scan\n[ INFO] [1569563527.221498143, 160.032000000]: received Imu\n[ INFO] [1569563527.221542285, 160.032000000]: received Imu\n[ INFO] [1569563527.221575952, 160.032000000]: received Imu\n[ INFO] [1569563527.221634350, 160.032000000]: received Scan\n```\n\nno Image, no Odom \u2026 I will post AWS output as soon as it finishes.", "markup": "markdown", "html": "<p>p.s.2 Arthur, I decided to go \u201copposite direction\u201d i.e. to extend something, which is already working (subt_seed_node). I added four subsrcibers (odometry, imu, scan and image) and uncommented publisher cmdVel. As callback functions I added only ROS_INFO what message I received, OK? I just submitted \u201cver7\u201d to see what AWS will do, but locally I got \u201cstrange\u201d outpus</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>[ INFO] [1569563527.221367007, 160.032000000]: received Imu\n[ INFO] [1569563527.221439372, 160.032000000]: received Scan\n[ INFO] [1569563527.221498143, 160.032000000]: received Imu\n[ INFO] [1569563527.221542285, 160.032000000]: received Imu\n[ INFO] [1569563527.221575952, 160.032000000]: received Imu\n[ INFO] [1569563527.221634350, 160.032000000]: received Scan\n</pre></div>\n\n\n<p>no Image, no Odom \u2026 I will post AWS output as soon as it finishes.</p>", "type": "rendered"}, "created_on": "2019-09-27T06:06:40.310843+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54100055}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54100085.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54100085"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "\\(the hacked code is here [https://github.com/robotika/osgar/commit/0a3251d018efad03da0bb1a50938c100df78412b](https://github.com/robotika/osgar/commit/0a3251d018efad03da0bb1a50938c100df78412b)\\)", "markup": "markdown", "html": "<p>(the hacked code is here <a data-is-external-link=\"true\" href=\"https://github.com/robotika/osgar/commit/0a3251d018efad03da0bb1a50938c100df78412b\" rel=\"nofollow\">https://github.com/robotika/osgar/commit/0a3251d018efad03da0bb1a50938c100df78412b</a>)</p>", "type": "rendered"}, "created_on": "2019-09-27T06:09:10.224305+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54100085}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54100936.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54100936"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "\\(sure enough I have mixed topic name and type of Odometry, but we will se about Image\\)", "markup": "markdown", "html": "<p>(sure enough I have mixed topic name and type of Odometry, but we will se about Image)</p>", "type": "rendered"}, "created_on": "2019-09-27T07:19:35.861346+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54100936}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54101102.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54101102"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "\u200c\n\n```\n354.216000000 ERROR /X2/ros1_ign_image_camera [/tmp/binarydeb/ros-melodic-roscpp-1.14.3/src/libros/publication.cpp:498(Publication::validateHeader)] [topics: /rosout, /X2/front/image_raw/compressedDepth, /X2/front/image_raw/compressedDepth/parameter_descriptions, /X2/front/image_raw/compressedDepth/parameter_updates, /X2/front/image_raw/compressed, /X2/front/image_raw/compressed/parameter_descriptions, /X2/front/image_raw/compressed/parameter_updates, /X2/front/image_raw, /X2/front/image_raw/theora, /X2/front/image_raw/theora/parameter_descriptions, /X2/front/image_raw/theora/parameter_updates] Client [/subt_solution] wants topic /X2/front/image_raw/compressed to have datatype/md5sum [sensor_msgs/Image/060021388200f6f0f447d0fcd9c64743], but our version has [sensor_msgs/CompressedImage/8f7a12909da2c9d3332d540a0977563f]. Dropping connection. \r\n```\n\nso I mixed somehow also the image \u2026", "markup": "markdown", "html": "<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>354.216000000 ERROR /X2/ros1_ign_image_camera [/tmp/binarydeb/ros-melodic-roscpp-1.14.3/src/libros/publication.cpp:498(Publication::validateHeader)] [topics: /rosout, /X2/front/image_raw/compressedDepth, /X2/front/image_raw/compressedDepth/parameter_descriptions, /X2/front/image_raw/compressedDepth/parameter_updates, /X2/front/image_raw/compressed, /X2/front/image_raw/compressed/parameter_descriptions, /X2/front/image_raw/compressed/parameter_updates, /X2/front/image_raw, /X2/front/image_raw/theora, /X2/front/image_raw/theora/parameter_descriptions, /X2/front/image_raw/theora/parameter_updates] Client [/subt_solution] wants topic /X2/front/image_raw/compressed to have datatype/md5sum [sensor_msgs/Image/060021388200f6f0f447d0fcd9c64743], but our version has [sensor_msgs/CompressedImage/8f7a12909da2c9d3332d540a0977563f]. Dropping connection. \n</pre></div>\n\n\n<p>so I mixed somehow also the image \u2026</p>", "type": "rendered"}, "created_on": "2019-09-27T07:29:45.284243+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54101102}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54103681.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54103681"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "Arthur, I will probably return the `sleep 30` back to `run_simulation.bash` \u2026 the last run terminated with \u201cError: InitializationFailed\u201d \\(BTW it is pity, that I was not notified by e-mail :disappointed: \u2026 only successful run is reported\\). \\[robotika, simple\\_tunnel\\_02, ver8, 177c358b-535f-4686-85a7-e83e7923e5f0\\]", "markup": "markdown", "html": "<p>Arthur, I will probably return the <code>sleep 30</code> back to <code>run_simulation.bash</code> \u2026 the last run terminated with \u201cError: InitializationFailed\u201d (BTW it is pity, that I was not notified by e-mail <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f61e.png\" alt=\"\ud83d\ude1e\" title=\":disappointed:\" data-emoji-short-name=\":disappointed:\" /> \u2026 only successful run is reported). [robotika, simple_tunnel_02, ver8, <a href=\"#!/osrf/subt/commits/177c358b\" rel=\"nofollow\" class=\"ap-connect-link\">177c358b</a>-535f-4686-85a7-e83e7923e5f0]</p>", "type": "rendered"}, "created_on": "2019-09-27T10:21:28.525438+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54103681}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54104031.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54104031"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "\\(running `ver9` which differs only by this extra sleep at the beginning\\)", "markup": "markdown", "html": "<p>(running <code>ver9</code> which differs only by this extra sleep at the beginning)</p>", "type": "rendered"}, "created_on": "2019-09-27T10:43:54.868402+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54104031}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54105183.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54105183"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "I can confirm that this extra sleep at the beginning helped \\(`ver9`\\).", "markup": "markdown", "html": "<p>I can confirm that this extra sleep at the beginning helped (<code>ver9</code>).</p>", "type": "rendered"}, "created_on": "2019-09-27T12:04:46.573786+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54105183}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54105229.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54105229"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "I will switch to single node which waits at the beginning, thanks m.", "markup": "markdown", "html": "<p>I will switch to single node which waits at the beginning, thanks m.</p>", "type": "rendered"}, "created_on": "2019-09-27T12:07:30.910451+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54105229}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54105933.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54105933"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": "I\u2019m glad you were able to get consistent initialization figured out.  It looks like you are aware of why your subscribers didn\u2019t work as well \\(when defined, datatypes must match\\).  As far as building off the `subt_seed` example goes, hopefully it works for you!", "markup": "markdown", "html": "<p>I\u2019m glad you were able to get consistent initialization figured out.  It looks like you are aware of why your subscribers didn\u2019t work as well (when defined, datatypes must match).  As far as building off the <code>subt_seed</code> example goes, hopefully it works for you!</p>", "type": "rendered"}, "created_on": "2019-09-27T12:59:10.794733+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": null, "type": "issue_comment", "id": 54105933}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202/comments/54609781.json"}, "html": {"href": "#!/osrf/subt/issues/202#comment-54609781"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/202.json"}}, "type": "issue", "id": 202, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Slow AWS initialization?"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-10-31T05:52:14.783731+00:00", "user": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "updated_on": null, "type": "issue_comment", "id": 54609781}], "page": 1, "size": 27}