{"priority": "major", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "links": {"attachments": {"href": "data/repositories/osrf/subt/issues/186/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/subt/issues/186.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/issues/186/watch"}, "comments": {"href": "data/repositories/osrf/subt/issues/186/comments_page=1.json"}, "html": {"href": "#!/osrf/subt/issues/186/reporting-artifacts"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/issues/186/vote"}}, "reporter": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "title": "Reporting artifacts", "component": null, "votes": 0, "watches": 6, "content": {"raw": "I am reporting artifacts via this function:\r\n\r\n\u200c\r\n\r\n```c++\r\n  public: bool ReportArtifact(const uint32_t _type,\r\n                               const ignition::msgs::Pose &_pose)\r\n  {\r\n    subt::msgs::Artifact artifact;\r\n    artifact.set_type(_type);\r\n    artifact.mutable_pose()->CopyFrom(_pose);\r\n    return this->client->SendTo(artifact.SerializeAsString(), subt::kBaseStationName);\r\n  }\r\n```\r\n\r\nAnd so far I am permanently getting \u201cfalse\u201d and server does not see any report attempt - any suggestion what I am doing wrong? I call `start_scoring`:\r\n\r\n\u200c\r\n\r\n```c++\r\n  public: bool start_scoring()\r\n  {\r\n    ignition::msgs::Boolean req;\r\n    ignition::msgs::Boolean rep;\r\n    unsigned int timeout = 5000;\r\n    bool result;\r\n    req.set_data(true);\r\n    return this->node.Request(\"/subt/start\", req, timeout, rep, result); \r\n  }\r\n```\r\n\r\nbefore that and it works fine\r\n\r\n\u200c\r\n\r\n```\r\n[Msg] Scoring has Started\r\n```\r\n\r\nThanks in advance for any hit\r\n\r\nMartin", "markup": "markdown", "html": "<p>I am reporting artifacts via this function:</p>\n<p>\u200c</p>\n<div class=\"codehilite language-c++\"><pre><span></span>  <span class=\"k\">public</span><span class=\"o\">:</span> <span class=\"kt\">bool</span> <span class=\"n\">ReportArtifact</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"kt\">uint32_t</span> <span class=\"n\">_type</span><span class=\"p\">,</span>\n                               <span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Pose</span> <span class=\"o\">&amp;</span><span class=\"n\">_pose</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">subt</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Artifact</span> <span class=\"n\">artifact</span><span class=\"p\">;</span>\n    <span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">set_type</span><span class=\"p\">(</span><span class=\"n\">_type</span><span class=\"p\">);</span>\n    <span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">mutable_pose</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">CopyFrom</span><span class=\"p\">(</span><span class=\"n\">_pose</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">client</span><span class=\"o\">-&gt;</span><span class=\"n\">SendTo</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">SerializeAsString</span><span class=\"p\">(),</span> <span class=\"n\">subt</span><span class=\"o\">::</span><span class=\"n\">kBaseStationName</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>And so far I am permanently getting \u201cfalse\u201d and server does not see any report attempt - any suggestion what I am doing wrong? I call <code>start_scoring</code>:</p>\n<p>\u200c</p>\n<div class=\"codehilite language-c++\"><pre><span></span>  <span class=\"k\">public</span><span class=\"o\">:</span> <span class=\"kt\">bool</span> <span class=\"n\">start_scoring</span><span class=\"p\">()</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Boolean</span> <span class=\"n\">req</span><span class=\"p\">;</span>\n    <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Boolean</span> <span class=\"n\">rep</span><span class=\"p\">;</span>\n    <span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">timeout</span> <span class=\"o\">=</span> <span class=\"mi\">5000</span><span class=\"p\">;</span>\n    <span class=\"kt\">bool</span> <span class=\"n\">result</span><span class=\"p\">;</span>\n    <span class=\"n\">req</span><span class=\"p\">.</span><span class=\"n\">set_data</span><span class=\"p\">(</span><span class=\"nb\">true</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"s\">&quot;/subt/start&quot;</span><span class=\"p\">,</span> <span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"p\">,</span> <span class=\"n\">rep</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">);</span> \n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>before that and it works fine</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>[Msg] Scoring has Started\n</pre></div>\n\n\n<p>Thanks in advance for any hit</p>\n<p>Martin</p>", "type": "rendered"}, "assignee": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "state": "closed", "version": null, "edited_on": null, "created_on": "2019-09-14T05:02:38.635750+00:00", "milestone": null, "updated_on": "2019-09-25T15:45:33.081176+00:00", "type": "issue", "id": 186}