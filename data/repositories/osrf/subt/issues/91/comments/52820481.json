{"links": {"self": {"href": "data/repositories/osrf/subt/issues/91/comments/52820481.json"}, "html": {"href": "#!/osrf/subt/issues/91#comment-52820481"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/91.json"}}, "type": "issue", "id": 91, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "TF data from ignition does not follow REP 105"}, "content": {"raw": "Hmm, I\u2019m trying this fix out on the hello world Cartographer system and it isn\u2019t working as well as letting Cartographer make its own X1/odom \u2192 X1 TF. \n\nI think that we should provide the odometry message, but not broadcast TF on odometry frame from Ignition, as more sophisticated approaches would combine IMU and odometry data with a filter. \n\nSending it from Ignition provides another obstacle to overcome to switch to an integrated IMU/odometry frame since the \u201cX1\u201d frame is parented by ignition\u2019s odometry frame. \n\nThis means that if we want to send a new frame we have to deal with constant TF errors due to multiple parenting. \n\nIf we do want to provide an odometric frame, we could reverse the parent/child relationship so the \u201cX1/odom\u201d frame from ignition is a child of the X1 frame \\(and invert the transform\\) to give the user access to this frame but without blocking them from implementing their own.\n\nIn short, I propose to either comment out line 60 in subt\\_ros/src/pose\\_tf\\_broadcaster.cpp or switch lines 42 - 49 to invert the transform and flip the frames. It would also be nice to name the odom frame something like ignition\\_odom to allow the user to define their own frame and use the name \u201codom\u201d", "markup": "markdown", "html": "<p>Hmm, I\u2019m trying this fix out on the hello world Cartographer system and it isn\u2019t working as well as letting Cartographer make its own X1/odom \u2192 X1 TF. </p>\n<p>I think that we should provide the odometry message, but not broadcast TF on odometry frame from Ignition, as more sophisticated approaches would combine IMU and odometry data with a filter. </p>\n<p>Sending it from Ignition provides another obstacle to overcome to switch to an integrated IMU/odometry frame since the \u201cX1\u201d frame is parented by ignition\u2019s odometry frame. </p>\n<p>This means that if we want to send a new frame we have to deal with constant TF errors due to multiple parenting. </p>\n<p>If we do want to provide an odometric frame, we could reverse the parent/child relationship so the \u201cX1/odom\u201d frame from ignition is a child of the X1 frame (and invert the transform) to give the user access to this frame but without blocking them from implementing their own.</p>\n<p>In short, I propose to either comment out line 60 in subt_ros/src/pose_tf_broadcaster.cpp or switch lines 42 - 49 to invert the transform and flip the frames. It would also be nice to name the odom frame something like ignition_odom to allow the user to define their own frame and use the name \u201codom\u201d</p>", "type": "rendered"}, "created_on": "2019-07-02T13:41:21.523781+00:00", "user": {"display_name": "John Rogers", "uuid": "{650ff4d5-649f-4adf-8e52-c3988db6f383}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B650ff4d5-649f-4adf-8e52-c3988db6f383%7D"}, "html": {"href": "https://bitbucket.org/%7B650ff4d5-649f-4adf-8e52-c3988db6f383%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5a85c547ab17cb21ae00a55faff2e3bfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-6.png"}}, "nickname": "jgrogers", "type": "user", "account_id": "557058:4781f1b2-8fd1-4cc8-a0ca-2f2edb51de61"}, "updated_on": null, "type": "issue_comment", "id": 52820481}