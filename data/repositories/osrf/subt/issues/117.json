{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "links": {"attachments": {"href": "data/repositories/osrf/subt/issues/117/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/subt/issues/117.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/issues/117/watch"}, "comments": {"href": "data/repositories/osrf/subt/issues/117/comments_page=1.json"}, "html": {"href": "#!/osrf/subt/issues/117/reporting-an-artifact-location-to-the"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/issues/117/vote"}}, "reporter": {"display_name": "Adam Uccello", "uuid": "{3841e0e5-cf8c-44ef-aef8-e70708f00072}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3841e0e5-cf8c-44ef-aef8-e70708f00072%7D"}, "html": {"href": "https://bitbucket.org/%7B3841e0e5-cf8c-44ef-aef8-e70708f00072%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8775f19685cb26ebb811cfbd8e111ee6d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAU-6.png"}}, "nickname": "uccellap", "type": "user", "account_id": "5bad44781e426e5e9cd186de"}, "title": "Reporting an artifact location to the base_station causes an exception", "component": null, "votes": 2, "watches": 5, "content": {"raw": "Using the latest docker image \\([nkoenig / subt-virtual-testbed](https://cloud.docker.com/repository/registry-1.docker.io/nkoenig/subt-virtual-testbed)\\), attempting to report an artifact location to the base\\_station causes IGN to throw an exception:\r\n\r\n\\[Dbg\\] \\[[VisibilityRfModel.cc:80](http://VisibilityRfModel.cc:80)\\] Range: 13.0001, Exp: 2.5, TX: 20, RX: -47.8487  \r\nException occurred in a local callback on topic \\[/world/tunnel\\_qual\\_ign/pose/info\\] with message \\[header \\{  \r\nstamp \\{  \r\nsec: 529  \r\nnsec: 308000000  \r\n\\}  \r\n\\}  \r\npose \\{  \r\nname: \"staging\\_area\"  \r\nid: 16  \r\nposition \\{  \r\n\\}  \r\norientation \\{  \r\nw: 1  \r\n\\}  \r\n\\}\r\n\r\n\u2026.\r\n\r\nThis is done at startup, right after getting the artifact origin but before anything else using a dummy position of 0,0,0 with the provided sample code:\r\n\r\n// report object to scoring server  \r\nignition::msgs::Pose pose;  \r\npose.mutable\\_position\\(\\)->set\\_x\\(0\\);  \r\npose.mutable\\_position\\(\\)->set\\_y\\(0\\);  \r\npose.mutable\\_position\\(\\)->set\\_z\\(0\\);\r\n\r\n// fill the type and pose  \r\nsubt::msgs::Artifact artifact;\r\n\r\n// set type  \r\nartifact.set\\_type\\(static\\_cast<uint32\\_t>\\(\\(uint32\\_t\\)0\\)\\);\r\n\r\n// set pose  \r\nartifact.mutable\\_pose\\(\\)->CopyFrom\\(pose\\);\r\n\r\n// serialize the artifact  \r\nstd::string serializedData;  \r\nif \\(!artifact.SerializeToString\\(&serializedData\\)\\) \\{  \r\nstd::cerr << \"ReportArtifact\\(\\): Error serializing message\\\\n\" << artifact.DebugString\\(\\) << std::endl;  \r\n\\}\r\n\r\n// Report it.  \r\ncomms\\_client->SendTo\\(serializedData, kBaseStationName\\);", "markup": "markdown", "html": "<p>Using the latest docker image (<a data-is-external-link=\"true\" href=\"https://cloud.docker.com/repository/registry-1.docker.io/nkoenig/subt-virtual-testbed\" rel=\"nofollow\">nkoenig / subt-virtual-testbed</a>), attempting to report an artifact location to the base_station causes IGN to throw an exception:</p>\n<p>[Dbg] [<a data-is-external-link=\"true\" href=\"http://VisibilityRfModel.cc:80\" rel=\"nofollow\">VisibilityRfModel.cc:80</a>] Range: 13.0001, Exp: 2.5, TX: 20, RX: -47.8487<br />\nException occurred in a local callback on topic [/world/tunnel_qual_ign/pose/info] with message [header {<br />\nstamp {<br />\nsec: 529<br />\nnsec: <a href=\"#!/osrf/subt/commits/308000000\" rel=\"nofollow\" class=\"ap-connect-link\">308000000</a><br />\n}<br />\n}<br />\npose {<br />\nname: \"staging_area\"<br />\nid: 16<br />\nposition {<br />\n}<br />\norientation {<br />\nw: 1<br />\n}<br />\n}</p>\n<p>\u2026.</p>\n<p>This is done at startup, right after getting the artifact origin but before anything else using a dummy position of 0,0,0 with the provided sample code:</p>\n<p>// report object to scoring server<br />\nignition::msgs::Pose pose;<br />\npose.mutable_position()-&gt;set_x(0);<br />\npose.mutable_position()-&gt;set_y(0);<br />\npose.mutable_position()-&gt;set_z(0);</p>\n<p>// fill the type and pose<br />\nsubt::msgs::Artifact artifact;</p>\n<p>// set type<br />\nartifact.set_type(static_cast&lt;uint32_t&gt;((uint32_t)0));</p>\n<p>// set pose<br />\nartifact.mutable_pose()-&gt;CopyFrom(pose);</p>\n<p>// serialize the artifact<br />\nstd::string serializedData;<br />\nif (!artifact.SerializeToString(&amp;serializedData)) {<br />\nstd::cerr &lt;&lt; \"ReportArtifact(): Error serializing message\\n\" &lt;&lt; artifact.DebugString() &lt;&lt; std::endl;<br />\n}</p>\n<p>// Report it.<br />\ncomms_client-&gt;SendTo(serializedData, kBaseStationName);</p>", "type": "rendered"}, "assignee": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "state": "closed", "version": null, "edited_on": null, "created_on": "2019-07-20T01:07:46.725002+00:00", "milestone": null, "updated_on": "2019-10-31T05:59:19.689171+00:00", "type": "issue", "id": 117}