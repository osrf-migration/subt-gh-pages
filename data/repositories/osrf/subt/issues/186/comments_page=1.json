{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53902504.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53902504"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-09-14T05:08:37.343189+00:00", "user": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "updated_on": null, "type": "issue_comment", "id": 53902504}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53925427.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53925427"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "The comms model could be dropping your score attempt. What world are you running, and how are you launching simulation? When you report a score, how far from the base station is your robot?", "markup": "markdown", "html": "<p>The comms model could be dropping your score attempt. What world are you running, and how are you launching simulation? When you report a score, how far from the base station is your robot?</p>", "type": "rendered"}, "created_on": "2019-09-16T15:54:23.523244+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 53925427}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53928692.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53928692"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Hi Nate,\n\nthanks for coming back to this issue. I am running docker image \n\n\u200c\n\n```\n ./run.bash robotika tunnel_circuit_practice.ign worldName:=tunnel_circuit_practice_01 robotName1:=X2 robotConfig1:=X2_SENSOR_CONFIG_3\n```\n\nwhere `robotika` is based on downloaded `FROM osrf/subt-virtual-testbed`\n\nInside I am trying to run modified `e:\\hg\\subt\\subt_example\\src\\subt_example_node.cc`\n\n\\(extended for reporting artifact and communicating with our python3 code\\) \n\nand launched with `roslaunch subt_example example_robot.launch` where I changed name from X1 to X2.\n\nThe robot enters tunnel and returns back to the base, so it is reported in the base area \\(BTW does it have to enter the tunnel, as it used to be, or for test is enough to start scoring?\\) The position of the artifact could be wrong.", "markup": "markdown", "html": "<p>Hi Nate,</p>\n<p>thanks for coming back to this issue. I am running docker image </p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span> ./run.bash robotika tunnel_circuit_practice.ign worldName:=tunnel_circuit_practice_01 robotName1:=X2 robotConfig1:=X2_SENSOR_CONFIG_3\n</pre></div>\n\n\n<p>where <code>robotika</code> is based on downloaded <code>FROM osrf/subt-virtual-testbed</code></p>\n<p>Inside I am trying to run modified <code>e:\\hg\\subt\\subt_example\\src\\subt_example_node.cc</code></p>\n<p>(extended for reporting artifact and communicating with our python3 code) </p>\n<p>and launched with <code>roslaunch subt_example example_robot.launch</code> where I changed name from X1 to X2.</p>\n<p>The robot enters tunnel and returns back to the base, so it is reported in the base area (BTW does it have to enter the tunnel, as it used to be, or for test is enough to start scoring?) The position of the artifact could be wrong.</p>", "type": "rendered"}, "created_on": "2019-09-16T19:35:57.550257+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53928692}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53928825.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53928825"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Thanks for the info. The robot must get close enough to an artifact for it to be loaded before you can attempt to score with the artifact. You can see parts of the tunnel loading as a robot moves through the environment. Attempting to report an artifact that was never loaded will fail. An artifact only has to be loaded once.\n\nThe position of an artifact should be in the artifact origin frame. See the [Artifacts section on this page](#!/osrf/subt/wiki/api).", "markup": "markdown", "html": "<p>Thanks for the info. The robot must get close enough to an artifact for it to be loaded before you can attempt to score with the artifact. You can see parts of the tunnel loading as a robot moves through the environment. Attempting to report an artifact that was never loaded will fail. An artifact only has to be loaded once.</p>\n<p>The position of an artifact should be in the artifact origin frame. See the <a data-is-external-link=\"true\" href=\"#!/osrf/subt/wiki/api\" rel=\"nofollow\">Artifacts section on this page</a>.</p>", "type": "rendered"}, "created_on": "2019-09-16T19:50:19.345108+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 53928825}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53928860.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53928860"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "OK, thanks - that could be the case! I shorted the exploration cycle to just debug the reporting - OK, so if that particular tile is loaded than this code may work \u2026 OK, I will try it, thanks. :slight_smile:", "markup": "markdown", "html": "<p>OK, thanks - that could be the case! I shorted the exploration cycle to just debug the reporting - OK, so if that particular tile is loaded than this code may work \u2026 OK, I will try it, thanks. <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f642.png\" alt=\"\ud83d\ude42\" title=\":slight_smile:\" data-emoji-short-name=\":slight_smile:\" /></p>", "type": "rendered"}, "created_on": "2019-09-16T19:54:24.260132+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53928860}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53928883.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53928883"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "p.s. BTW isn\u2019t any of the unittest world with just an trivial artifact I could use? Even practice01 has it behind the heap of stones \u2026 \\(or in other words could you please create also description of unit test worlds? \\(to be honest I tried only the first simple 01\\)", "markup": "markdown", "html": "<p>p.s. BTW isn\u2019t any of the unittest world with just an trivial artifact I could use? Even practice01 has it behind the heap of stones \u2026 (or in other words could you please create also description of unit test worlds? (to be honest I tried only the first simple 01)</p>", "type": "rendered"}, "created_on": "2019-09-16T19:57:04.155144+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53928883}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53929182.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53929182"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Martin,\n\nYou can report a score any-time after you either enter the tunnel or call the rosservice `/subt/start` . As Nate said, you have to at least be near enough to an artifact for the level it is in to load for it to be a candidate for successful reporting. If you do notice any artifacts that are reasonably detectable but you are unable to score a point on despite reporting the location properly, please report that in a separate issue. I would verify that you are appropriately localizing the artifact by referencing the practice world\u2019s absolute artifact location as returning to the entrance and then reporting should result in a successful score if you are calling the communication API correctly and the object is localized within 5 meters.\n\nFor reference, I use tunnel\\_practice\\_02 for unit testing although some of the small worlds released recently might be better candidates if they contain artifacts \\(I have not checked if they do\\).\n\nGood luck!", "markup": "markdown", "html": "<p>Martin,</p>\n<p>You can report a score any-time after you either enter the tunnel or call the rosservice <code>/subt/start</code> . As Nate said, you have to at least be near enough to an artifact for the level it is in to load for it to be a candidate for successful reporting. If you do notice any artifacts that are reasonably detectable but you are unable to score a point on despite reporting the location properly, please report that in a separate issue. I would verify that you are appropriately localizing the artifact by referencing the practice world\u2019s absolute artifact location as returning to the entrance and then reporting should result in a successful score if you are calling the communication API correctly and the object is localized within 5 meters.</p>\n<p>For reference, I use tunnel_practice_02 for unit testing although some of the small worlds released recently might be better candidates if they contain artifacts (I have not checked if they do).</p>\n<p>Good luck!</p>", "type": "rendered"}, "created_on": "2019-09-16T20:28:07.636195+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": "2019-09-16T20:28:40.756342+00:00", "type": "issue_comment", "id": 53929182}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53929565.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53929565"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Hi Arthur,\n\nthanks for hint :slight_smile: \u2026 `tunnel_circuit_practice_02` is simpler so the simulation runs faster \\(but not as fast as for unit test world, when the control fails to catch\\). Hopefully soon I will confirm that this \u201cissue\u201d is solved. Thanks a lot both of you.", "markup": "markdown", "html": "<p>Hi Arthur,</p>\n<p>thanks for hint <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f642.png\" alt=\"\ud83d\ude42\" title=\":slight_smile:\" data-emoji-short-name=\":slight_smile:\" /> \u2026 <code>tunnel_circuit_practice_02</code> is simpler so the simulation runs faster (but not as fast as for unit test world, when the control fails to catch). Hopefully soon I will confirm that this \u201cissue\u201d is solved. Thanks a lot both of you.</p>", "type": "rendered"}, "created_on": "2019-09-16T20:57:42.857171+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53929565}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53936693.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53936693"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Hi Arthur and Nate,  \njust to be sure that I understand you correctly:\n\n1. if I send `/subt/start` then the robot can report say \"Backpack at \\(0, 0, 0\\)\" even without moving the robot and the report should return TRUE and the score should be still 0 and number of attempts should be reduced by 1, right?\n2. if robot is returning from the tunnels and tries to report artifact while approaching base station it will receive FALSE for both:\n\n* it is too far, so the signal is week and messages are not delivered\n* the position of artifact is in \"undiscovered area\"\n\nIn the case 2 is it not possible which one is which, so it is not good idea to try to re-send positions of artifacts because it could be due to \"prohibited position\", correct?", "markup": "markdown", "html": "<p>Hi Arthur and Nate,<br />\njust to be sure that I understand you correctly:</p>\n<ol>\n<li>if I send <code>/subt/start</code> then the robot can report say \"Backpack at (0, 0, 0)\" even without moving the robot and the report should return TRUE and the score should be still 0 and number of attempts should be reduced by 1, right?</li>\n<li>if robot is returning from the tunnels and tries to report artifact while approaching base station it will receive FALSE for both:</li>\n</ol>\n<ul>\n<li>it is too far, so the signal is week and messages are not delivered</li>\n<li>the position of artifact is in \"undiscovered area\"</li>\n</ul>\n<p>In the case 2 is it not possible which one is which, so it is not good idea to try to re-send positions of artifacts because it could be due to \"prohibited position\", correct?</p>", "type": "rendered"}, "created_on": "2019-09-17T08:53:59.813645+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53936693}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53940773.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53940773"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "well, it looks like even the first case fails, i.e. it is not visible on the server:\n\n\u200c\n\n```\n[Msg] Scoring has Started\r\n[Dbg] [LinearBatteryPlugin.cc:333] [Battery Plugin] Battery drain: 0 minutes passed.\r\n[Msg] Loaded level [95]\r\n[Dbg] [LinearBatteryPlugin.cc:333] [Battery Plugin] Battery drain: 1 minutes passed.\r\n```\n\nand no score report", "markup": "markdown", "html": "<p>well, it looks like even the first case fails, i.e. it is not visible on the server:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Scoring</span> <span class=\"n\">has</span> <span class=\"n\">Started</span>\n<span class=\"p\">[</span><span class=\"n\">Dbg</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">LinearBatteryPlugin</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">333</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Battery</span> <span class=\"n\">Plugin</span><span class=\"p\">]</span> <span class=\"n\">Battery</span> <span class=\"nl\">drain</span><span class=\"p\">:</span> <span class=\"mi\">0</span> <span class=\"n\">minutes</span> <span class=\"n\">passed</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Loaded</span> <span class=\"n\">level</span> <span class=\"p\">[</span><span class=\"mi\">95</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">Dbg</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">LinearBatteryPlugin</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">333</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Battery</span> <span class=\"n\">Plugin</span><span class=\"p\">]</span> <span class=\"n\">Battery</span> <span class=\"nl\">drain</span><span class=\"p\">:</span> <span class=\"mi\">1</span> <span class=\"n\">minutes</span> <span class=\"n\">passed</span><span class=\"p\">.</span>\n</pre></div>\n\n\n<p>and no score report</p>", "type": "rendered"}, "created_on": "2019-09-17T13:11:25.108001+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53940773}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53941103.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53941103"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Hi Martin,\n\nNate or AJ should get back to you soon.  In the meantime, isn\u2019t the [API documentation](#!/osrf/subt/wiki/api) \\(i.e. the Artifact section\\) providing the information you are looking for?  Otherwise, I wan\u2019t to make sure it gets updated so it clarifies this for others as well. Thanks!\n\n\u200c", "markup": "markdown", "html": "<p>Hi Martin,</p>\n<p>Nate or AJ should get back to you soon.  In the meantime, isn\u2019t the <a data-is-external-link=\"true\" href=\"#!/osrf/subt/wiki/api\" rel=\"nofollow\">API documentation</a> (i.e. the Artifact section) providing the information you are looking for?  Otherwise, I wan\u2019t to make sure it gets updated so it clarifies this for others as well. Thanks!</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-09-17T13:31:32.064249+00:00", "user": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "updated_on": null, "type": "issue_comment", "id": 53941103}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53941308.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53941308"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Hi Alfredo,\n\nthanks for pointing me to the documentation - it looks almost 1:1 to me except:\n\n\u200c\n\n```\nartifact.SerializeAsString()\n```\n\nvs.\n\n\u200c\n\n```\nstd::string serializedData;\r\nif (!artifact.SerializeToString(&serializedData))\r\n```\n\nbut I would guess it should create the same string?\n\nIt is also possible that I may not to see the result in the server output, and that I have to listen to confirmation via callback method?? Finally I should maybe focus on \u201ccomposed docker\u201d used on the cloud, but I would hope that this part would be the same, right?", "markup": "markdown", "html": "<p>Hi Alfredo,</p>\n<p>thanks for pointing me to the documentation - it looks almost 1:1 to me except:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>artifact.SerializeAsString()\n</pre></div>\n\n\n<p>vs.</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"nt\">serializedData</span><span class=\"o\">;</span>\n<span class=\"nt\">if</span> <span class=\"o\">(!</span><span class=\"nt\">artifact</span><span class=\"p\">.</span><span class=\"nc\">SerializeToString</span><span class=\"o\">(&amp;</span><span class=\"nt\">serializedData</span><span class=\"o\">))</span>\n</pre></div>\n\n\n<p>but I would guess it should create the same string?</p>\n<p>It is also possible that I may not to see the result in the server output, and that I have to listen to confirmation via callback method?? Finally I should maybe focus on \u201ccomposed docker\u201d used on the cloud, but I would hope that this part would be the same, right?</p>", "type": "rendered"}, "created_on": "2019-09-17T13:41:22.628762+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53941308}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53941349.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53941349"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "The API documentation page does not mention anything about the dependency on on-demand tile loading.", "markup": "markdown", "html": "<p>The API documentation page does not mention anything about the dependency on on-demand tile loading.</p>", "type": "rendered"}, "created_on": "2019-09-17T13:44:04.294481+00:00", "user": {"display_name": "Zbyn\u011bk Winkler", "uuid": "{d253a02a-aa23-4c28-9bf2-75863acb0ee0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd253a02a-aa23-4c28-9bf2-75863acb0ee0%7D"}, "html": {"href": "https://bitbucket.org/%7Bd253a02a-aa23-4c28-9bf2-75863acb0ee0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/326a12c819c60ee18418b5d01000d03fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsZW-1.png"}}, "nickname": "Zbyn\u011bk Winkler (robotika)", "type": "user", "account_id": "557058:a92b5a4f-5b91-4853-8dec-b918bd975e70"}, "updated_on": null, "type": "issue_comment", "id": 53941349}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53941375.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53941375"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "It also does not say what we should see in the console. Which scoring attempts are echoed to the console? It seems Martin has found a case when scoring attempt is not echoed. Is this expected?", "markup": "markdown", "html": "<p>It also does not say what we should see in the console. Which scoring attempts are echoed to the console? It seems Martin has found a case when scoring attempt is not echoed. Is this expected?</p>", "type": "rendered"}, "created_on": "2019-09-17T13:45:56.228842+00:00", "user": {"display_name": "Zbyn\u011bk Winkler", "uuid": "{d253a02a-aa23-4c28-9bf2-75863acb0ee0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd253a02a-aa23-4c28-9bf2-75863acb0ee0%7D"}, "html": {"href": "https://bitbucket.org/%7Bd253a02a-aa23-4c28-9bf2-75863acb0ee0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/326a12c819c60ee18418b5d01000d03fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsZW-1.png"}}, "nickname": "Zbyn\u011bk Winkler (robotika)", "type": "user", "account_id": "557058:a92b5a4f-5b91-4853-8dec-b918bd975e70"}, "updated_on": null, "type": "issue_comment", "id": 53941375}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53941416.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53941416"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Well, I am looking for some simple test case, which should surely work - I do not know if I successfully reported artifact \\(I guess not\\).", "markup": "markdown", "html": "<p>Well, I am looking for some simple test case, which should surely work - I do not know if I successfully reported artifact (I guess not).</p>", "type": "rendered"}, "created_on": "2019-09-17T13:48:53.302200+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53941416}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53941417.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53941417"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "It also says\n\n> Teams should not try to report the same artifact multiple times. By doing that, you will negatively impact your score, as your reported pose will be incorrectly associated with another artifact.\n\nbut repeated reports of the same thing are supported & ignored, right?\n\nIt also does not say you can just leave the starting area to enable scoring - you don\u2019t have to call \u201cstart\u201d.", "markup": "markdown", "html": "<p>It also says</p>\n<blockquote>\n<p>Teams should not try to report the same artifact multiple times. By doing that, you will negatively impact your score, as your reported pose will be incorrectly associated with another artifact.</p>\n</blockquote>\n<p>but repeated reports of the same thing are supported &amp; ignored, right?</p>\n<p>It also does not say you can just leave the starting area to enable scoring - you don\u2019t have to call \u201cstart\u201d.</p>", "type": "rendered"}, "created_on": "2019-09-17T13:48:53.487875+00:00", "user": {"display_name": "Zbyn\u011bk Winkler", "uuid": "{d253a02a-aa23-4c28-9bf2-75863acb0ee0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd253a02a-aa23-4c28-9bf2-75863acb0ee0%7D"}, "html": {"href": "https://bitbucket.org/%7Bd253a02a-aa23-4c28-9bf2-75863acb0ee0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/326a12c819c60ee18418b5d01000d03fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsZW-1.png"}}, "nickname": "Zbyn\u011bk Winkler (robotika)", "type": "user", "account_id": "557058:a92b5a4f-5b91-4853-8dec-b918bd975e70"}, "updated_on": null, "type": "issue_comment", "id": 53941417}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53941431.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53941431"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Martin,\n\nI\u2019ll go with the code in the doc.  Yes, it will best if you try it again using docker-compose.", "markup": "markdown", "html": "<p>Martin,</p>\n<p>I\u2019ll go with the code in the doc.  Yes, it will best if you try it again using docker-compose.</p>", "type": "rendered"}, "created_on": "2019-09-17T13:49:58.241259+00:00", "user": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "updated_on": null, "type": "issue_comment", "id": 53941431}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53941479.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53941479"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Martin,\n\n1. In short, **yes**.  You can send successfully send an artifact report as soon as you call the rosservice /subt/start or have any vehicle enter the environment \\(thus automatically triggering /subt/start\\).  Assuming you call the service from the starting area and immediately send some blatantly incorrect answer to the base station you\u2019ll get back a confirmation that it was received, no score increment \\(assuming it\u2019s blatantly incorrect\\), and the number of your attempts will be reduced by 1.\n2. I am currently in the process of experimenting with this, I had not tested with the new communication API so I\u2019m currently working on that.  I just tested with the old communication API and I received back \u201cTrue\u201d whether or not I was in range or the detection was correct.  The two instances where you should not get a score increment despite reporting the correct artifact location are when you are too far from the base station to communicate and whenever the artifact is in an \u201cundiscovered area\u201d although the latter _shouldn\u2019t_ happen under normal behavior \\(explore, identify, report\\).  **I will test further and post back here with some clarification on this.**\n\nIn the API linked by Alfredo, it is stated:\n\n> When a robot communicates with the base station, received artifact requests are acknowledged by sending back a message of type [ArtifactScore](#!/osrf/subt/src/default/subt_ign/src/protobuf/artifact.proto). Keep in mind that the ACK can also be lost as any other message sent. Repeated artifact requests \\(a request is considered repeated when contains the same artifact type and position as a previously sent request\\) do not count as new requests for scoring purposes. In other words, a team will not lose an extra token while retrying to send a previously reported artifact.\n\nso I believe you actually can spam the same pose/classification repeatedly and it is only counted as 1 inquiry whether it is correct, incorrect, or has already been successfully reported.\n\nWhenever I attempt to send score reports \\(or any communication over the communication protocol\\) I see the following debug message on my SubT Ignition Console:\n\n`[Dbg] [VisibilityRfModel.cc:80] Range: 120.633, Exp: 4.1, TX: 20, RX: -105.34` so the packet/registered name you are sending by may not be correctly configured.  Also, this debug message is from a failed message send, I also get the same debug messages when messages are successfully sent.", "markup": "markdown", "html": "<p>Martin,</p>\n<ol>\n<li>In short, <strong>yes</strong>.  You can send successfully send an artifact report as soon as you call the rosservice /subt/start or have any vehicle enter the environment (thus automatically triggering /subt/start).  Assuming you call the service from the starting area and immediately send some blatantly incorrect answer to the base station you\u2019ll get back a confirmation that it was received, no score increment (assuming it\u2019s blatantly incorrect), and the number of your attempts will be reduced by 1.</li>\n<li>I am currently in the process of experimenting with this, I had not tested with the new communication API so I\u2019m currently working on that.  I just tested with the old communication API and I received back \u201cTrue\u201d whether or not I was in range or the detection was correct.  The two instances where you should not get a score increment despite reporting the correct artifact location are when you are too far from the base station to communicate and whenever the artifact is in an \u201cundiscovered area\u201d although the latter <em>shouldn\u2019t</em> happen under normal behavior (explore, identify, report).  <strong>I will test further and post back here with some clarification on this.</strong></li>\n</ol>\n<p>In the API linked by Alfredo, it is stated:</p>\n<blockquote>\n<p>When a robot communicates with the base station, received artifact requests are acknowledged by sending back a message of type <a data-is-external-link=\"true\" href=\"#!/osrf/subt/src/default/subt_ign/src/protobuf/artifact.proto\" rel=\"nofollow\">ArtifactScore</a>. Keep in mind that the ACK can also be lost as any other message sent. Repeated artifact requests (a request is considered repeated when contains the same artifact type and position as a previously sent request) do not count as new requests for scoring purposes. In other words, a team will not lose an extra token while retrying to send a previously reported artifact.</p>\n</blockquote>\n<p>so I believe you actually can spam the same pose/classification repeatedly and it is only counted as 1 inquiry whether it is correct, incorrect, or has already been successfully reported.</p>\n<p>Whenever I attempt to send score reports (or any communication over the communication protocol) I see the following debug message on my SubT Ignition Console:</p>\n<p><code>[Dbg] [VisibilityRfModel.cc:80] Range: 120.633, Exp: 4.1, TX: 20, RX: -105.34</code> so the packet/registered name you are sending by may not be correctly configured.  Also, this debug message is from a failed message send, I also get the same debug messages when messages are successfully sent.</p>", "type": "rendered"}, "created_on": "2019-09-17T13:52:22.735889+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": null, "type": "issue_comment", "id": 53941479}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53943365.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53943365"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Ok, I just looked into the new `ACK` interface on for reporting artifacts and my clarified answer for your # 2 is:\n\nIf you report an artifact with a properly formed packet through the `CommsClient` you will always get back `TRUE` from the CommsClient on the call `this->client->SendTo(serializedData, \"base_station\")`. If you are using the new `ACK` system put in, you will be able to determine if the artifact report was valid with information in the `ArtifactScore` message. Due to the `ACK` being subject to the same communication restrictions and stochastic nature of communication, continually reporting the artifact report until you either get an `ACK` or enough radio silence to determine if the message is getting to the base station or not is a good idea while you can verify the accuracy of your report if/when you get that `ACK`. Whenever I sent a successful score report I received `score_change: 1` in the `ACK` to indicate the artifact report was valid.\n\nIn short, the boolean from `this->client->SendTo(serializedData, \"base_station\")` is insufficient in determining whether or not the message arrived at the base station or that the artifact was valid as it should always return `TRUE` if the message sent is valid.  The `FALSE` results you are receiving from the `CommsClient` may be due to faulty usage or a malformed message.  Additionally, monitoring `ACK` from the base station following a report is the correct method for V&V of the artifact report.", "markup": "markdown", "html": "<p>Ok, I just looked into the new <code>ACK</code> interface on for reporting artifacts and my clarified answer for your # 2 is:</p>\n<p>If you report an artifact with a properly formed packet through the <code>CommsClient</code> you will always get back <code>TRUE</code> from the CommsClient on the call <code>this-&gt;client-&gt;SendTo(serializedData, \"base_station\")</code>. If you are using the new <code>ACK</code> system put in, you will be able to determine if the artifact report was valid with information in the <code>ArtifactScore</code> message. Due to the <code>ACK</code> being subject to the same communication restrictions and stochastic nature of communication, continually reporting the artifact report until you either get an <code>ACK</code> or enough radio silence to determine if the message is getting to the base station or not is a good idea while you can verify the accuracy of your report if/when you get that <code>ACK</code>. Whenever I sent a successful score report I received <code>score_change: 1</code> in the <code>ACK</code> to indicate the artifact report was valid.</p>\n<p>In short, the boolean from <code>this-&gt;client-&gt;SendTo(serializedData, \"base_station\")</code> is insufficient in determining whether or not the message arrived at the base station or that the artifact was valid as it should always return <code>TRUE</code> if the message sent is valid.  The <code>FALSE</code> results you are receiving from the <code>CommsClient</code> may be due to faulty usage or a malformed message.  Additionally, monitoring <code>ACK</code> from the base station following a report is the correct method for V&amp;V of the artifact report.</p>", "type": "rendered"}, "created_on": "2019-09-17T15:54:14.558076+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": "2019-09-17T15:57:58.046921+00:00", "type": "issue_comment", "id": 53943365}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53951399.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53951399"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "OK thanks\n\nminor detail - link in API doc [#!/osrf/subt/raw/default/subt\\_gazebo/src/protobuf/artifact.proto](#!/osrf/subt/raw/default/subt_gazebo/src/protobuf/artifact.proto)  \nis obsolete and should be probably [#!/osrf/subt/raw/default/subt\\_ign/src/protobuf/artifact.proto](#!/osrf/subt/raw/default/subt_ign/src/protobuf/artifact.proto)", "markup": "markdown", "html": "<p>OK thanks</p>\n<p>minor detail - link in API doc <a data-is-external-link=\"true\" href=\"#!/osrf/subt/raw/default/subt_gazebo/src/protobuf/artifact.proto\" rel=\"nofollow\">#!/osrf/subt/raw/default/subt_gazebo/src/protobuf/artifact.proto</a><br />\nis obsolete and should be probably <a data-is-external-link=\"true\" href=\"#!/osrf/subt/raw/default/subt_ign/src/protobuf/artifact.proto\" rel=\"nofollow\">#!/osrf/subt/raw/default/subt_ign/src/protobuf/artifact.proto</a></p>", "type": "rendered"}, "created_on": "2019-09-17T21:00:20.746266+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53951399}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53951524.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53951524"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Thanks Martin.  I just updated the link in the API doc.  Can we now resolve this issue or do you still need to run more tests?", "markup": "markdown", "html": "<p>Thanks Martin.  I just updated the link in the API doc.  Can we now resolve this issue or do you still need to run more tests?</p>", "type": "rendered"}, "created_on": "2019-09-17T21:15:07.436317+00:00", "user": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "updated_on": null, "type": "issue_comment", "id": 53951524}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53951800.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53951800"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "At the moment I have no idea what is wrong - I guess that the CommsClient\\(\\) is not properly initialized?? Is there somewhere working example I could use? I do not see any messages in the console \\(I suppose that it is the same as were I see `[Dbg] [LinearBatteryPlugin.cc:433] voltage: 12.6591` etc??\\)", "markup": "markdown", "html": "<p>At the moment I have no idea what is wrong - I guess that the CommsClient() is not properly initialized?? Is there somewhere working example I could use? I do not see any messages in the console (I suppose that it is the same as were I see <code>[Dbg] [LinearBatteryPlugin.cc:433] voltage: 12.6591</code> etc??)</p>", "type": "rendered"}, "created_on": "2019-09-17T21:59:13.403750+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53951800}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53954482.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53954482"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Martin, I recommend you check out the [subt\\_helloworld](https://bitbucket.org/jgrogers/subt_hello_world/wiki/Home) repository\u2019s development branch.   There is a package named \u201ccomm\\_example\u201d that you might find beneficial.  That example is functional.\n\n\u200c", "markup": "markdown", "html": "<p>Martin, I recommend you check out the <a data-is-external-link=\"true\" href=\"https://bitbucket.org/jgrogers/subt_hello_world/wiki/Home\" rel=\"nofollow\">subt_helloworld</a> repository\u2019s development branch.   There is a package named \u201ccomm_example\u201d that you might find beneficial.  That example is functional.</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-09-17T22:47:15.948214+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": null, "type": "issue_comment", "id": 53954482}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53954647.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53954647"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Martin,\n\nAnother option since you mentioned that you were using Docker images, it\u2019s to run the follow:\n\n**Open terminal 1 and run cloudsim\\_sim**:\n\n```\n$ mkdir -p ~/subt_testbed && cd ~/subt_testbed\n$ wget #!/osrf/subt/raw/tunnel_circuit/docker/run.bash\n$ chmod +x run.bash\n$ ./run.bash osrf/subt-virtual-testbed:cloudsim_sim_latest cloudsim_sim.ign robotName1:=X1 robotConfig1:=X1_SENSOR_CONFIG1\n```\n\n**Open terminal 2 and run cloudsim\\_bridge**:\n\n```\n$ cd ~/subt_testbed/\n$ ./run.bash osrf/subt-virtual-testbed:cloudsim_bridge_latest robotName1:=X1 robotConfig1:=X1_SENSOR_CONFIG1\n```\n\n**Open terminal 3 and run the subt\\_solution**:\n\n```\n$ cd ~/subt_testbed/\n$ ./run.bash osrf/subt-virtual-testbed:subt_solution_latest\n```\n\nThe solution running inside`terminal 3` will take between 15-30 second to start \\(be patience\\). After that, you should see the `start` signal, the `report` message, and the `score`; as shown below:\n\n```\n[ INFO] [1568762243.991832697, 37.596000000]: Sent start signal.\n[ INFO] [1568762256.265146241, 48.992000000]: Arrived at entrance!\n[ INFO] [1568762256.368889859, 49.092000000]: Message from [base_station] to [X1] on port [4100]:\n [report_id: 1\nartifact {\n  type: 4\n  pose {\n    position {\n      x: -8.1\n      y: 37\n      z: 0.004\n    }\n  }\n}\nsubmitted_datetime {\n  sec: 95903\n  nsec: 363782255\n}\nsim_time {\n  sec: 49\n}\nrun: 1\nreport_status: \"scored\"\nscore_change: 1\n```\n\n![](data/bitbucket.org/repo/8ze6Mjd/images/2557665283-issue186.gif)\n\u200c", "markup": "markdown", "html": "<p>Martin,</p>\n<p>Another option since you mentioned that you were using Docker images, it\u2019s to run the follow:</p>\n<p><strong>Open terminal 1 and run cloudsim_sim</strong>:</p>\n<div class=\"codehilite\"><pre><span></span>$ mkdir -p ~/subt_testbed <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> ~/subt_testbed\n$ wget #!/osrf/subt/raw/tunnel_circuit/docker/run.bash\n$ chmod +x run.bash\n$ ./run.bash osrf/subt-virtual-testbed:cloudsim_sim_latest cloudsim_sim.ign robotName1:<span class=\"o\">=</span>X1 robotConfig1:<span class=\"o\">=</span>X1_SENSOR_CONFIG1\n</pre></div>\n\n\n<p><strong>Open terminal 2 and run cloudsim_bridge</strong>:</p>\n<div class=\"codehilite\"><pre><span></span>$ <span class=\"nb\">cd</span> ~/subt_testbed/\n$ ./run.bash osrf/subt-virtual-testbed:cloudsim_bridge_latest robotName1:<span class=\"o\">=</span>X1 robotConfig1:<span class=\"o\">=</span>X1_SENSOR_CONFIG1\n</pre></div>\n\n\n<p><strong>Open terminal 3 and run the subt_solution</strong>:</p>\n<div class=\"codehilite\"><pre><span></span>$ <span class=\"nb\">cd</span> ~/subt_testbed/\n$ ./run.bash osrf/subt-virtual-testbed:subt_solution_latest\n</pre></div>\n\n\n<p>The solution running inside<code>terminal 3</code> will take between 15-30 second to start (be patience). After that, you should see the <code>start</code> signal, the <code>report</code> message, and the <code>score</code>; as shown below:</p>\n<div class=\"codehilite\"><pre><span></span>[ INFO] [1568762243.991832697, 37.596000000]: Sent start signal.\n[ INFO] [1568762256.265146241, 48.992000000]: Arrived at entrance!\n[ INFO] [1568762256.368889859, 49.092000000]: Message from [base_station] to [X1] on port [4100]:\n [report_id: 1\nartifact {\n  type: 4\n  pose {\n    position {\n      x: -8.1\n      y: 37\n      z: 0.004\n    }\n  }\n}\nsubmitted_datetime {\n  sec: 95903\n  nsec: 363782255\n}\nsim_time {\n  sec: 49\n}\nrun: 1\nreport_status: &quot;scored&quot;\nscore_change: 1\n</pre></div>\n\n\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/8ze6Mjd/images/2557665283-issue186.gif\" />\n\u200c</p>", "type": "rendered"}, "created_on": "2019-09-17T23:23:42.440776+00:00", "user": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "updated_on": "2019-09-17T23:26:25.171985+00:00", "type": "issue_comment", "id": 53954647}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53956670.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53956670"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Thank you both - I will start from scratch. The example works in the sense, that I see the report there:\n\n\u200c\n\n```\n[Msg] Scoring has Started\n[Broker::DispatchMessages()]: Could not find endpoint X2:4100\n[Dbg] [LinearBatteryPlugin.cc:333] [Battery Plugin] Battery drain: 0 minutes passed.\n[Broker::DispatchMessages()]: Could not find endpoint X2:4100\n[Broker::DispatchMessages()]: Could not find endpoint X2:4100\n[Broker::DispatchMessages()]: Could not find endpoint X2:4100\n[Broker::DispatchMessages()]: Could not find endpoint X2:4100\n[Dbg] [VisibilityRfModel.cc:80] Range: 17.8337, Exp: 2.5, TX: 20, RX: -51.2811\n[Msg]   [Total]: 1\n[Msg] Total score: 1\n[Dbg] [VisibilityRfModel.cc:80] Range: 17.9024, Exp: 2.5, TX: 20, RX: -51.3228\n[Msg] Unloaded level [63]\n[Broker::DispatchMessages()]: Could not find endpoint X2:4100\n[Broker::DispatchMessages()]: Could not find endpoint X2:4100\n```\n\nI was thinking that I was making some stupid mistake like `roslaunch` vs. `ign launch`?!", "markup": "markdown", "html": "<p>Thank you both - I will start from scratch. The example works in the sense, that I see the report there:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Scoring</span> <span class=\"n\">has</span> <span class=\"n\">Started</span>\n<span class=\"p\">[</span><span class=\"n\">Broker</span><span class=\"o\">::</span><span class=\"n\">DispatchMessages</span><span class=\"p\">()]</span><span class=\"o\">:</span> <span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">find</span> <span class=\"n\">endpoint</span> <span class=\"nl\">X2</span><span class=\"p\">:</span><span class=\"mi\">4100</span>\n<span class=\"p\">[</span><span class=\"n\">Dbg</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">LinearBatteryPlugin</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">333</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Battery</span> <span class=\"n\">Plugin</span><span class=\"p\">]</span> <span class=\"n\">Battery</span> <span class=\"nl\">drain</span><span class=\"p\">:</span> <span class=\"mi\">0</span> <span class=\"n\">minutes</span> <span class=\"n\">passed</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">Broker</span><span class=\"o\">::</span><span class=\"n\">DispatchMessages</span><span class=\"p\">()]</span><span class=\"o\">:</span> <span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">find</span> <span class=\"n\">endpoint</span> <span class=\"nl\">X2</span><span class=\"p\">:</span><span class=\"mi\">4100</span>\n<span class=\"p\">[</span><span class=\"n\">Broker</span><span class=\"o\">::</span><span class=\"n\">DispatchMessages</span><span class=\"p\">()]</span><span class=\"o\">:</span> <span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">find</span> <span class=\"n\">endpoint</span> <span class=\"nl\">X2</span><span class=\"p\">:</span><span class=\"mi\">4100</span>\n<span class=\"p\">[</span><span class=\"n\">Broker</span><span class=\"o\">::</span><span class=\"n\">DispatchMessages</span><span class=\"p\">()]</span><span class=\"o\">:</span> <span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">find</span> <span class=\"n\">endpoint</span> <span class=\"nl\">X2</span><span class=\"p\">:</span><span class=\"mi\">4100</span>\n<span class=\"p\">[</span><span class=\"n\">Broker</span><span class=\"o\">::</span><span class=\"n\">DispatchMessages</span><span class=\"p\">()]</span><span class=\"o\">:</span> <span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">find</span> <span class=\"n\">endpoint</span> <span class=\"nl\">X2</span><span class=\"p\">:</span><span class=\"mi\">4100</span>\n<span class=\"p\">[</span><span class=\"n\">Dbg</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">VisibilityRfModel</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">80</span><span class=\"p\">]</span> <span class=\"nl\">Range</span><span class=\"p\">:</span> <span class=\"mf\">17.8337</span><span class=\"p\">,</span> <span class=\"nl\">Exp</span><span class=\"p\">:</span> <span class=\"mf\">2.5</span><span class=\"p\">,</span> <span class=\"nl\">TX</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"nl\">RX</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">51.2811</span>\n<span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span>   <span class=\"p\">[</span><span class=\"n\">Total</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"mi\">1</span>\n<span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Total</span> <span class=\"nl\">score</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n<span class=\"p\">[</span><span class=\"n\">Dbg</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">VisibilityRfModel</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">80</span><span class=\"p\">]</span> <span class=\"nl\">Range</span><span class=\"p\">:</span> <span class=\"mf\">17.9024</span><span class=\"p\">,</span> <span class=\"nl\">Exp</span><span class=\"p\">:</span> <span class=\"mf\">2.5</span><span class=\"p\">,</span> <span class=\"nl\">TX</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"nl\">RX</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">51.3228</span>\n<span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Unloaded</span> <span class=\"n\">level</span> <span class=\"p\">[</span><span class=\"mi\">63</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">Broker</span><span class=\"o\">::</span><span class=\"n\">DispatchMessages</span><span class=\"p\">()]</span><span class=\"o\">:</span> <span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">find</span> <span class=\"n\">endpoint</span> <span class=\"nl\">X2</span><span class=\"p\">:</span><span class=\"mi\">4100</span>\n<span class=\"p\">[</span><span class=\"n\">Broker</span><span class=\"o\">::</span><span class=\"n\">DispatchMessages</span><span class=\"p\">()]</span><span class=\"o\">:</span> <span class=\"n\">Could</span> <span class=\"n\">not</span> <span class=\"n\">find</span> <span class=\"n\">endpoint</span> <span class=\"nl\">X2</span><span class=\"p\">:</span><span class=\"mi\">4100</span>\n</pre></div>\n\n\n<p>I was thinking that I was making some stupid mistake like <code>roslaunch</code> vs. <code>ign launch</code>?!</p>", "type": "rendered"}, "created_on": "2019-09-18T04:59:16.761298+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53956670}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53956816.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53956816"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "I hope these examples can clarify things for you and be used as a reference.  Feel free to reopen it if you still need more assistance.  Cheers!", "markup": "markdown", "html": "<p>I hope these examples can clarify things for you and be used as a reference.  Feel free to reopen it if you still need more assistance.  Cheers!</p>", "type": "rendered"}, "created_on": "2019-09-18T05:13:54.320589+00:00", "user": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "updated_on": null, "type": "issue_comment", "id": 53956816}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53959941.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53959941"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "I am checking the \u201chello world\u201d example and this line is bit discouraging:  \n\n```\nbool report = this->client->SendTo(serializedData, \"BaseStation\"); //subt::kBaseStationName);\n```\n\n?!  \n`subt_hello_world\\catkin_build_ws\\src\\comms_example\\src\\object_detection_node.cc:134`", "markup": "markdown", "html": "<p>I am checking the \u201chello world\u201d example and this line is bit discouraging:  </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">bool</span> <span class=\"nt\">report</span> <span class=\"o\">=</span> <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">client-</span><span class=\"o\">&gt;</span><span class=\"nt\">SendTo</span><span class=\"o\">(</span><span class=\"nt\">serializedData</span><span class=\"o\">,</span> <span class=\"s2\">&quot;BaseStation&quot;</span><span class=\"o\">);</span> <span class=\"o\">//</span><span class=\"nt\">subt</span><span class=\"p\">::</span><span class=\"nd\">kBaseStationName</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>?!<br />\n<code>subt_hello_world\\catkin_build_ws\\src\\comms_example\\src\\object_detection_node.cc:134</code></p>", "type": "rendered"}, "created_on": "2019-09-18T08:59:10.881136+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53959941}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53965422.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53965422"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Martin, I don\u2019t quite follow.  What is the issue?", "markup": "markdown", "html": "<p>Martin, I don\u2019t quite follow.  What is the issue?</p>", "type": "rendered"}, "created_on": "2019-09-18T14:27:57.888657+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": null, "type": "issue_comment", "id": 53965422}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53966140.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53966140"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Well, I am not sure, but it looks suspicious \u2026 in the WiKi is `subt::kBaseStationName` which is mapped to string`base_station` and it probably did not work for hello world, so the author put there directly the old `BaseStation` string? Or it depends in which setup you run it? \\(I did quick check with my old code and `BaseStation` string but it was not the source of the problem, or not the only one\\)", "markup": "markdown", "html": "<p>Well, I am not sure, but it looks suspicious \u2026 in the WiKi is <code>subt::kBaseStationName</code> which is mapped to string<code>base_station</code> and it probably did not work for hello world, so the author put there directly the old <code>BaseStation</code> string? Or it depends in which setup you run it? (I did quick check with my old code and <code>BaseStation</code> string but it was not the source of the problem, or not the only one)</p>", "type": "rendered"}, "created_on": "2019-09-18T15:04:49.506116+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53966140}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53966941.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53966941"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "> \u2026 check out the [subt\\_helloworld](https://bitbucket.org/jgrogers/subt_hello_world/wiki/Home) repository\u2019s **development branch**\u2026\n\nJust checked on the development branch and saw that is correctly set as \u201cbase\\_station\u201d.  Also reference: [https://bitbucket.org/jgrogers/subt\\_hello\\_world/src/development/catkin\\_build\\_ws/src/comms\\_example/src/object\\_detection\\_node.cc](https://bitbucket.org/jgrogers/subt_hello_world/src/development/catkin_build_ws/src/comms_example/src/object_detection_node.cc) line 138.  So I suspect you pulled down and investigated the public branch by default. The public branch is currently outdated.  The current base station string name is \u201cbase\\_station\u201d as you noted. It is defined in `subt_ign/include/subt_ign/CommonTypes.hh` .\n\n\u200c\n\nNonetheless, if you are using `subt::kBaseStationName` and have linked/included properly or are using \u201cbase\\_station\u201d you should be good on this front.  Are you still having issues or did you get this resolved?  I notice the issue is now marked `Resolved`.", "markup": "markdown", "html": "<blockquote>\n<p>\u2026 check out the <a data-is-external-link=\"true\" href=\"https://bitbucket.org/jgrogers/subt_hello_world/wiki/Home\" rel=\"nofollow\">subt_helloworld</a> repository\u2019s <strong>development branch</strong>\u2026</p>\n</blockquote>\n<p>Just checked on the development branch and saw that is correctly set as \u201cbase_station\u201d.  Also reference: <a data-is-external-link=\"true\" href=\"https://bitbucket.org/jgrogers/subt_hello_world/src/development/catkin_build_ws/src/comms_example/src/object_detection_node.cc\" rel=\"nofollow\">https://bitbucket.org/jgrogers/subt_hello_world/src/development/catkin_build_ws/src/comms_example/src/object_detection_node.cc</a> line 138.  So I suspect you pulled down and investigated the public branch by default. The public branch is currently outdated.  The current base station string name is \u201cbase_station\u201d as you noted. It is defined in <code>subt_ign/include/subt_ign/CommonTypes.hh</code> .</p>\n<p>\u200c</p>\n<p>Nonetheless, if you are using <code>subt::kBaseStationName</code> and have linked/included properly or are using \u201cbase_station\u201d you should be good on this front.  Are you still having issues or did you get this resolved?  I notice the issue is now marked <code>Resolved</code>.</p>", "type": "rendered"}, "created_on": "2019-09-18T15:48:44.498751+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": "2019-09-18T15:50:57.170893+00:00", "type": "issue_comment", "id": 53966941}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53969307.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53969307"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Arthur, thanks a lot - yes I was looking at \u201cpublic\u201d \\(default\\) branch. Alfredo set this issue as resolved, but I cannot confirm that yet - if I will not be able to sort it out in 24hours I will reopen it, thanks.", "markup": "markdown", "html": "<p>Arthur, thanks a lot - yes I was looking at \u201cpublic\u201d (default) branch. Alfredo set this issue as resolved, but I cannot confirm that yet - if I will not be able to sort it out in 24hours I will reopen it, thanks.</p>", "type": "rendered"}, "created_on": "2019-09-18T18:40:00.520852+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53969307}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53969377.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53969377"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Take your time Martin, I\u2019ll keep checking back on this issue until you confirm you\u2019ve got it resolved.", "markup": "markdown", "html": "<p>Take your time Martin, I\u2019ll keep checking back on this issue until you confirm you\u2019ve got it resolved.</p>", "type": "rendered"}, "created_on": "2019-09-18T18:48:56.558200+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": null, "type": "issue_comment", "id": 53969377}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53970516.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53970516"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "I was looking what was the solution docker used in Alfredo example and it is subt\\_seed and the position of artifact is hardcoded there :slight_smile: \u2026 basically the same thing I was trying to get working:  \n[#!/osrf/subt\\_seed/src/e404ad6024ce706aec36dc40bc3f05df38b1f5d0/src/subt\\_seed\\_node.cc#lines-204:210](#!/osrf/subt_seed/src/e404ad6024ce706aec36dc40bc3f05df38b1f5d0/src/subt_seed_node.cc#lines-204:210)", "markup": "markdown", "html": "<p>I was looking what was the solution docker used in Alfredo example and it is subt_seed and the position of artifact is hardcoded there <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f642.png\" alt=\"\ud83d\ude42\" title=\":slight_smile:\" data-emoji-short-name=\":slight_smile:\" /> \u2026 basically the same thing I was trying to get working:<br />\n<a data-is-external-link=\"true\" href=\"#!/osrf/subt_seed/src/e404ad6024ce706aec36dc40bc3f05df38b1f5d0/src/subt_seed_node.cc#lines-204:210\" rel=\"nofollow\">#!/osrf/subt_seed/src/e404ad6024ce706aec36dc40bc3f05df38b1f5d0/src/subt_seed_node.cc#lines-204:210</a></p>", "type": "rendered"}, "created_on": "2019-09-18T20:39:37.544898+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 53970516}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53970659.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53970659"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Hehe!  Yes, you got it.", "markup": "markdown", "html": "<p>Hehe!  Yes, you got it.</p>", "type": "rendered"}, "created_on": "2019-09-18T20:52:59.693481+00:00", "user": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "updated_on": null, "type": "issue_comment", "id": 53970659}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/54029241.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-54029241"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Double-check on loading artifacts (Tunnel Practice 1 simulation with id a9bb9bab-6a7f-4312-9a42-541d303886b5) scoring 2 points from the entrance.", "markup": "markdown", "html": "<p>Double-check on loading artifacts (Tunnel Practice 1 simulation with id <a href=\"#!/osrf/subt/commits/a9bb9bab\" rel=\"nofollow\" class=\"ap-connect-link\">a9bb9bab</a>-6a7f-4312-9a42-541d303886b5) scoring 2 points from the entrance.</p>", "type": "rendered"}, "created_on": "2019-09-23T11:35:54.506047+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54029241}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/54029395.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-54029395"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "> The robot must get close enough to an artifact for it to be loaded before you can attempt to score with the artifact. You can see parts of the tunnel loading as a robot moves through the environment. Attempting to report an artifact that was never loaded will fail. An artifact only has to be loaded once.\n\n@{557058:095b1e12-74ed-4e20-b44f-2f0745b616e0} I would like to double check that the feature of loading artifacts is not used yet \\(to be honest, it would simplify the development at the moment, so I would prefer it the way how it works now\\)? I tried \u201cTunnel Practice 1 simulation with id a9bb9bab-6a7f-4312-9a42-541d303886b5\u201d \\(robotika/seed2\\) which test reporting of two artifacts from the entrance \\(without exploration\\). As I said I would leave it for Tunnel Circuit as it is now as it adds extra complexity.\n\nThanks\n\nMartin", "markup": "markdown", "html": "<blockquote>\n<p>The robot must get close enough to an artifact for it to be loaded before you can attempt to score with the artifact. You can see parts of the tunnel loading as a robot moves through the environment. Attempting to report an artifact that was never loaded will fail. An artifact only has to be loaded once.</p>\n</blockquote>\n<p><span class=\"ap-mention\" data-atlassian-id=\"557058:095b1e12-74ed-4e20-b44f-2f0745b616e0\">@Nate Koenig</span> I would like to double check that the feature of loading artifacts is not used yet (to be honest, it would simplify the development at the moment, so I would prefer it the way how it works now)? I tried \u201cTunnel Practice 1 simulation with id <a href=\"#!/osrf/subt/commits/a9bb9bab\" rel=\"nofollow\" class=\"ap-connect-link\">a9bb9bab</a>-6a7f-4312-9a42-541d303886b5\u201d (robotika/seed2) which test reporting of two artifacts from the entrance (without exploration). As I said I would leave it for Tunnel Circuit as it is now as it adds extra complexity.</p>\n<p>Thanks</p>\n<p>Martin</p>", "type": "rendered"}, "created_on": "2019-09-23T11:45:31.688669+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54029395}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/54032001.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-54032001"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "You should be able to report a couple of artifacts from the start location because they\u2019re in the same tile set as the entrance and thus are loaded when you start the environment.  Are you trying to say the current issue is that you can report 2 artifacts from the entrance?", "markup": "markdown", "html": "<p>You should be able to report a couple of artifacts from the start location because they\u2019re in the same tile set as the entrance and thus are loaded when you start the environment.  Are you trying to say the current issue is that you can report 2 artifacts from the entrance?</p>", "type": "rendered"}, "created_on": "2019-09-23T14:16:52.651033+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": null, "type": "issue_comment", "id": 54032001}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/54032136.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-54032136"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": ":slight_smile: yes. Note, that I am not complaining about this :wink: My impression was that \u201ctile\u201d is like the \u201ccrossing\u201d or \u201cturn\u201d in the tunnel \\(I did not check the correspondence between integers and the world map\\) so that I expected that if robot did not visit/see the part say x=-8, y=30 or x=35 y=10 \\(I am just guessing the numbers now\\) then it should fail \u2026 ?? So if the set near staging area is larger \\(I did not locate any \u201cdeep artifact\u201d yet for testing\\) then there is probably no problem at all. Thank you & feel free to close this issue again", "markup": "markdown", "html": "<p><img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f642.png\" alt=\"\ud83d\ude42\" title=\":slight_smile:\" data-emoji-short-name=\":slight_smile:\" /> yes. Note, that I am not complaining about this <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f609.png\" alt=\"\ud83d\ude09\" title=\":wink:\" data-emoji-short-name=\":wink:\" /> My impression was that \u201ctile\u201d is like the \u201ccrossing\u201d or \u201cturn\u201d in the tunnel (I did not check the correspondence between integers and the world map) so that I expected that if robot did not visit/see the part say x=-8, y=30 or x=35 y=10 (I am just guessing the numbers now) then it should fail \u2026 ?? So if the set near staging area is larger (I did not locate any \u201cdeep artifact\u201d yet for testing) then there is probably no problem at all. Thank you &amp; feel free to close this issue again</p>", "type": "rendered"}, "created_on": "2019-09-23T14:24:53.180602+00:00", "user": {"display_name": "Martin Dlouhy", "uuid": "{27de76db-249c-44be-9eb8-91a3b17bf0d7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D"}, "html": {"href": "https://bitbucket.org/%7B27de76db-249c-44be-9eb8-91a3b17bf0d7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/85a9b1d43839b393296feb3b35a2e577d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMD-1.png"}}, "nickname": "robotikacz", "type": "user", "account_id": "557058:490c665b-b69c-40f3-80ea-64f20747efc4"}, "updated_on": null, "type": "issue_comment", "id": 54032136}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/54032276.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-54032276"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-09-23T14:31:11.237598+00:00", "user": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "updated_on": null, "type": "issue_comment", "id": 54032276}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/54060809.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-54060809"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Sorry for reopening this, but I think my question is relevant to this thread.  I\u2019m currently trying to use the ACK system to confirm artifact reports, but it seems like the ACK\u2019s take a long time \\(at least 20 seconds\\) to get back to the robot.  \\(I\u2019m testing artifact reports from the starting platform, with fake artifacts, before moving anywhere but after calling the \u201csubt/start\u201d service.\\)\n\nMy specific question is this: when we instantiate the subt::CommsClient used to send and listen for messages from the base station, should the \u2018\\_use\\_ignition\u2019 parameter be set to true or false? I understand that[ Issue 144](#!/osrf/subt/issues/144/subt-commsclient-is-useless-unless) and the code comments in subt\\_communication\\_client.h say that robots should always use \u201c\\_use\\_ignition=false', but when I look at the [BaseStationPlugin.cc](http://BaseStationPlugin.cc) it uses:\n\n\u200c\n\n```\nbool BaseStationPlugin::Load(const tinyxml2::XMLElement *)\n{\n  this->client.reset(new subt::CommsClient(\"base_station\", true, true));\n  this->client->Bind(&BaseStationPlugin::OnArtifact, this);\n```\n\nIn our comms manager, we setup the CommsClient with:\n\n\u200c\n\n```\nCommsManager::CommsManager(const std::string &_address) : address(_address)\n{\n    printf(\"Bind Address is [%s]\\n\",_address.c_str());\n    this->client = std::make_unique<subt::CommsClient>(_address, false,false);\n    this->client->Bind(&CommsManager::receive_receipt, this, _address, this->receipt_port);\n```\n\nCould the difference between \u2018\\_use\\_ignition\u2019 values cause the ACK sent back by the base station to be delayed in getting to the robot? Thanks!", "markup": "markdown", "html": "<p>Sorry for reopening this, but I think my question is relevant to this thread.  I\u2019m currently trying to use the ACK system to confirm artifact reports, but it seems like the ACK\u2019s take a long time (at least 20 seconds) to get back to the robot.  (I\u2019m testing artifact reports from the starting platform, with fake artifacts, before moving anywhere but after calling the \u201csubt/start\u201d service.)</p>\n<p>My specific question is this: when we instantiate the subt::CommsClient used to send and listen for messages from the base station, should the \u2018_use_ignition\u2019 parameter be set to true or false? I understand that<a data-is-external-link=\"true\" href=\"#!/osrf/subt/issues/144/subt-commsclient-is-useless-unless\" rel=\"nofollow\"> Issue 144</a> and the code comments in subt_communication_client.h say that robots should always use \u201c_use_ignition=false', but when I look at the <a data-is-external-link=\"true\" href=\"http://BaseStationPlugin.cc\" rel=\"nofollow\">BaseStationPlugin.cc</a> it uses:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">bool</span> <span class=\"nt\">BaseStationPlugin</span><span class=\"p\">::</span><span class=\"nd\">Load</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">tinyxml2</span><span class=\"p\">::</span><span class=\"nd\">XMLElement</span> <span class=\"o\">*)</span>\n<span class=\"p\">{</span>\n  <span class=\"err\">this-&gt;client.reset(new</span> <span class=\"n\">subt</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"nf\">CommsClient</span><span class=\"p\">(</span><span class=\"s2\">&quot;base_station&quot;</span><span class=\"p\">,</span> <span class=\"n\">true</span><span class=\"p\">,</span> <span class=\"n\">true</span><span class=\"p\">));</span>\n  <span class=\"err\">this-&gt;client-&gt;Bind(&amp;</span><span class=\"n\">BaseStationPlugin</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">OnArtifact</span><span class=\"p\">,</span> <span class=\"n\">this</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>In our comms manager, we setup the CommsClient with:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">CommsManager</span><span class=\"p\">::</span><span class=\"nd\">CommsManager</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"o\">&amp;</span><span class=\"nt\">_address</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"nt\">address</span><span class=\"o\">(</span><span class=\"nt\">_address</span><span class=\"o\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"err\">printf(&quot;Bind</span> <span class=\"err\">Address</span> <span class=\"err\">is</span> <span class=\"cp\">[</span><span class=\"o\">%</span><span class=\"nx\">s</span><span class=\"cp\">]</span><span class=\"err\">\\n&quot;,_address.c_str())</span><span class=\"p\">;</span>\n    <span class=\"err\">this-&gt;client</span> <span class=\"err\">=</span> <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">make_unique</span><span class=\"o\">&lt;</span><span class=\"n\">subt</span><span class=\"o\">::</span><span class=\"n\">CommsClient</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">_address</span><span class=\"p\">,</span> <span class=\"n\">false</span><span class=\"p\">,</span><span class=\"n\">false</span><span class=\"p\">);</span>\n    <span class=\"err\">this-&gt;client-&gt;Bind(&amp;</span><span class=\"n\">CommsManager</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">receive_receipt</span><span class=\"p\">,</span> <span class=\"n\">this</span><span class=\"p\">,</span> <span class=\"n\">_address</span><span class=\"p\">,</span> <span class=\"n\">this-</span><span class=\"o\">&gt;</span><span class=\"n\">receipt_port</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>Could the difference between \u2018_use_ignition\u2019 values cause the ACK sent back by the base station to be delayed in getting to the robot? Thanks!</p>", "type": "rendered"}, "created_on": "2019-09-24T20:47:07.312285+00:00", "user": {"display_name": "Joe Palk", "uuid": "{5cc8ea43-8141-495c-84a6-d43c27045e87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cc8ea43-8141-495c-84a6-d43c27045e87%7D"}, "html": {"href": "https://bitbucket.org/%7B5cc8ea43-8141-495c-84a6-d43c27045e87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d234ef34b35f80c57643503/eccf6b09-606c-456e-a48e-e1b9a48f93e0/128"}}, "nickname": "jepalk", "type": "user", "account_id": "5d234ef34b35f80c57643503"}, "updated_on": null, "type": "issue_comment", "id": 54060809}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/54060978.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-54060978"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Hi Jose, your assumption is correct. You should use `_useIgnition = false`. The ACKs shouldn\u2019t be delayed, the only explanation that we find is that your simulation is running very slow, and then, 20 seconds in wall time might be expected. Could you tell us what is the real time factor when you report the artifact?", "markup": "markdown", "html": "<p>Hi Jose, your assumption is correct. You should use <code>_useIgnition = false</code>. The ACKs shouldn\u2019t be delayed, the only explanation that we find is that your simulation is running very slow, and then, 20 seconds in wall time might be expected. Could you tell us what is the real time factor when you report the artifact?</p>", "type": "rendered"}, "created_on": "2019-09-24T21:04:45.505627+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": null, "type": "issue_comment", "id": 54060978}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/54074666.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-54074666"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Hi Carlos.  I\u2019m testing with an X1 and an X2 team, and the real time factor throughout my comms test fluctuates around 50-60%.  I think I\u2019ve established that the artifact report from my robots get to the base station almost instantaneously, the base station processes the report and sends back an acknowledgement just as quickly, but then it takes a long time for the report to get back to the robot.  Maybe I\u2019m doing something silly though - here are the relevant snippets from my code, where I\u2019m trying to reproduce what\u2019s done in \u2018subt/subt\\_ign/test/score.cc\u2019.\n\nSetup our comms manager:\n\n\u200c\n\n```\nCommsManager::CommsManager(const std::string &_address) : address(_address)\n{\n    printf(\"Bind Address is [%s]\\n\",_address.c_str());\n    this->client = std::make_unique<subt::CommsClient>(_address, false,false);\n    this->client->Bind(&CommsManager::receive_receipt, this, _address, this->receipt_port);\n}\n```\n\nreceive\\_receipt callback:\n\n\u200c\n\n```\nvoid CommsManager::receive_receipt( const std::string &_srcAddress,\n                                    const std::string &_dstAddress,\n                                    const uint32_t _dstPort,\n                                    const std::string &_data)\n{\n    ROS_INFO_STREAM( \"[\" << this->address << \"] CommsManager: Received RECEIPT \"\n                          << _srcAddress << \"->\" << _dstAddress <<  \":\" << _dstPort);\n\n    if(_srcAddress == \"base_station\"){\n        receive_artifact_ACK(_srcAddress, _dstAddress, _dstPort, _data);\n    }\n    ...\n```\n\nWhich in turn calls the receive\\_artifact\\_ACK function when the message is from the base\\_station:\n\n\u200c\n\n```\nvoid CommsManager::receive_artifact_ACK(const std::string &_srcAddress,\n                                        const std::string &_dstAddress,\n                                        const uint32_t _dstPort,\n                                        const std::string &_data)\n{\n    subt::msgs::ArtifactScore ack;\n    if(!ack.ParseFromString(_data)){\n        std::cerr<<\"Error parsing artifact score response\"<<std::endl;\n    }\n    else{\n        auto realTime = std::chrono::steady_clock::now().time_since_epoch();\n        auto seconds = std::chrono::duration_cast<std::chrono::seconds>(realTime);\n        ignition::msgs::Time submission_time = ack.submitted_datetime();\n        ROS_INFO_STREAM(address << \" has received an ACK!\");\n        ROS_INFO_STREAM(address<< \" ACK ID:\"<<ack.report_id()<<\", report status:\"<< ack.report_status()<<\", score change:\"<<ack.score_change()<<\n        \"\\n\"<<\"artifact = \"<<ack.artifact().type()<<\" at \"<<ack.artifact().pose().position().x() << \", \"<< ack.artifact().pose().position().y() <<\", \"<<ack.artifact().pose().position().z() << \"\\n submission time = \"\n        << submission_time.sec()<<\n        \"\\n current time = \"<<seconds.count());\n        score_ACKs.push_back(ack);\n    }\n}\n```\n\nAnd finally the function where we send the artifact report to the base station and wait for the score\\_ACKs vector to change:\n\n\u200c\n\n```\nbool CommsManager::send_to_base_station(const subt::msgs::Artifact &a)\n{\n    using namespace std::chrono_literals;\n    // Serialize the artifact.\n    std::string serializedData;\n    if (!a.SerializeToString(&serializedData))\n    {\n        std::cerr << \"CommsClient::SendToBaseStation(): Error serializing message\\n\"\n                  << a.DebugString() << std::endl;\n        return false;\n    }\n\n    // Send data to the base station.\n    ROS_INFO_STREAM(\"[\" << this->address << \"] TO BASE STATION (\" << base_station_address << \"): \" << serializedData);\n\n    int num_acks = score_ACKs.size();\n\n    auto realTime = std::chrono::steady_clock::now().time_since_epoch();\n    auto seconds = std::chrono::duration_cast<std::chrono::seconds>(realTime);\n\n    ROS_INFO_STREAM(\"[\" << this->address << \"] # ACK = \"<<score_ACKs.size()<< \" at time \"<< seconds.count());\n    this->client->SendTo(serializedData, base_station_address, 4100);\n\n    int attempt = 0;\n    while(score_ACKs.size() == num_acks && attempt < 20){\n        attempt++;\n        std::this_thread::sleep_for(500ms);\n        if(attempt % 10 == 0){\n            realTime = std::chrono::steady_clock::now().time_since_epoch();\n            seconds = std::chrono::duration_cast<std::chrono::seconds>(realTime);\n            ROS_INFO_STREAM(\"[\" << this->address << \"] received # ACK = \"<< score_ACKs.size() <<\" on attempt = \"<<attempt<<\" at time \"<<seconds.count());\n        }\n    }\n\n    ROS_INFO_STREAM(\"[\" << this->address << \"] required # attempts to receive ACK = \"<<attempt);\n    \n    if(score_ACKs.size() > num_acks){\n        return true;\n    }\n    return false;\n}\n```\n\nAs an example of the output from the receive\\_artifact\\_ACK when we eventually receive an acknowledgement:\n\n\u200c\n\n```\n...\n[ INFO] [1569420641.165585155, 27.368000000]: X1 ACK ID:2, report status:scored, score change:0\nartifact = 2 at -3.5, 13.5, 10.0615\n submission time = 290489\n current time = 290509\n...\n```\n\nI\u2019ve added some output lines to the subt comms code to figure out when the base station receives the report and sends back an acknowledgement, and the messages corresponding to the above receive\\_artifact\\_ACK output is:\n\n\u200c\n\n```\n[Dbg] [VisibilityRfModel.cc:80] Range: 12.3695, Exp: 2.5, TX: 20, RX: -47.3088\n[Dbg] [GameLogicPlugin.cc:515] Score plugin received artifact at 290489\n[Msg]   [Total]: 0\n[Msg] Total score: 0\n[Dbg] [VisibilityRfModel.cc:80] Range: 13.0007, Exp: 2.5, TX: 20, RX: -47.8491\n[Dbg] [GameLogicPlugin.cc:515] Score plugin received artifact at 290489\n[Msg]   [Total]: 0\n[Msg] Total score: 0\n[Dbg] [BaseStationPlugin.cc:106] Sending ArtifactScore back to robot X1, REPORT ID = 2 at time 290489\n[Dbg] [subt_communication_client.cpp:301] Calling SendTo (Ignition) to X1 at time 290489\n```\n\nSo it looks like the robot sends a report at 290489, the base station receives and responds at 290489, but then our code doesn\u2019t pick it up until 290509.  Do you see anything on our end that might be responsible for the one-way delay?  Thanks, and sorry for the very long post :-\\)", "markup": "markdown", "html": "<p>Hi Carlos.  I\u2019m testing with an X1 and an X2 team, and the real time factor throughout my comms test fluctuates around 50-60%.  I think I\u2019ve established that the artifact report from my robots get to the base station almost instantaneously, the base station processes the report and sends back an acknowledgement just as quickly, but then it takes a long time for the report to get back to the robot.  Maybe I\u2019m doing something silly though - here are the relevant snippets from my code, where I\u2019m trying to reproduce what\u2019s done in \u2018subt/subt_ign/test/score.cc\u2019.</p>\n<p>Setup our comms manager:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">CommsManager</span><span class=\"p\">::</span><span class=\"nd\">CommsManager</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"o\">&amp;</span><span class=\"nt\">_address</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"nt\">address</span><span class=\"o\">(</span><span class=\"nt\">_address</span><span class=\"o\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"err\">printf(&quot;Bind</span> <span class=\"err\">Address</span> <span class=\"err\">is</span> <span class=\"cp\">[</span><span class=\"o\">%</span><span class=\"nx\">s</span><span class=\"cp\">]</span><span class=\"err\">\\n&quot;,_address.c_str())</span><span class=\"p\">;</span>\n    <span class=\"err\">this-&gt;client</span> <span class=\"err\">=</span> <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">make_unique</span><span class=\"o\">&lt;</span><span class=\"n\">subt</span><span class=\"o\">::</span><span class=\"n\">CommsClient</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">_address</span><span class=\"p\">,</span> <span class=\"n\">false</span><span class=\"p\">,</span><span class=\"n\">false</span><span class=\"p\">);</span>\n    <span class=\"err\">this-&gt;client-&gt;Bind(&amp;</span><span class=\"n\">CommsManager</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">receive_receipt</span><span class=\"p\">,</span> <span class=\"n\">this</span><span class=\"p\">,</span> <span class=\"n\">_address</span><span class=\"p\">,</span> <span class=\"n\">this-</span><span class=\"o\">&gt;</span><span class=\"n\">receipt_port</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>receive_receipt callback:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>void CommsManager::receive_receipt( const std::string &amp;_srcAddress,\n                                    const std::string &amp;_dstAddress,\n                                    const uint32_t _dstPort,\n                                    const std::string &amp;_data)\n{\n    ROS_INFO_STREAM( &quot;[&quot; &lt;&lt; this-&gt;address &lt;&lt; &quot;] CommsManager: Received RECEIPT &quot;\n                          &lt;&lt; _srcAddress &lt;&lt; &quot;-&gt;&quot; &lt;&lt; _dstAddress &lt;&lt;  &quot;:&quot; &lt;&lt; _dstPort);\n\n    if(_srcAddress == &quot;base_station&quot;){\n        receive_artifact_ACK(_srcAddress, _dstAddress, _dstPort, _data);\n    }\n    ...\n</pre></div>\n\n\n<p>Which in turn calls the receive_artifact_ACK function when the message is from the base_station:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">void</span> <span class=\"nt\">CommsManager</span><span class=\"p\">::</span><span class=\"nd\">receive_artifact_ACK</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"o\">&amp;</span><span class=\"nt\">_srcAddress</span><span class=\"o\">,</span>\n                                        <span class=\"nt\">const</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"o\">&amp;</span><span class=\"nt\">_dstAddress</span><span class=\"o\">,</span>\n                                        <span class=\"nt\">const</span> <span class=\"nt\">uint32_t</span> <span class=\"nt\">_dstPort</span><span class=\"o\">,</span>\n                                        <span class=\"nt\">const</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"o\">&amp;</span><span class=\"nt\">_data</span><span class=\"o\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">subt</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">ArtifactScore</span> <span class=\"n\">ack</span><span class=\"p\">;</span>\n    <span class=\"err\">if(!ack.ParseFromString(_data)){</span>\n        <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">cerr</span><span class=\"o\">&lt;&lt;</span><span class=\"s2\">&quot;Error parsing artifact score response&quot;</span><span class=\"o\">&lt;&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"nt\">else</span><span class=\"p\">{</span>\n        <span class=\"err\">auto</span> <span class=\"err\">realTime</span> <span class=\"err\">=</span> <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">steady_clock</span><span class=\"o\">::</span><span class=\"nf\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"nf\">time_since_epoch</span><span class=\"p\">();</span>\n        <span class=\"err\">auto</span> <span class=\"err\">seconds</span> <span class=\"err\">=</span> <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">duration_cast</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">seconds</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">realTime</span><span class=\"p\">);</span>\n        <span class=\"n\">ignition</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Time</span> <span class=\"n\">submission_time</span> <span class=\"o\">=</span> <span class=\"n\">ack</span><span class=\"o\">.</span><span class=\"nf\">submitted_datetime</span><span class=\"p\">();</span>\n        <span class=\"err\">ROS_INFO_STREAM(address</span> <span class=\"err\">&lt;&lt;</span> <span class=\"err\">&quot;</span> <span class=\"err\">has</span> <span class=\"err\">received</span> <span class=\"err\">an</span> <span class=\"err\">ACK!&quot;)</span><span class=\"p\">;</span>\n        <span class=\"err\">ROS_INFO_STREAM(address&lt;&lt;</span> <span class=\"err\">&quot;</span> <span class=\"err\">ACK</span> <span class=\"n\">ID</span><span class=\"p\">:</span><span class=\"s2\">&quot;&lt;&lt;ack.report_id()&lt;&lt;&quot;</span><span class=\"p\">,</span> <span class=\"n\">report</span> <span class=\"n\">status</span><span class=\"o\">:</span><span class=\"s2\">&quot;&lt;&lt; ack.report_status()&lt;&lt;&quot;</span><span class=\"p\">,</span> <span class=\"n\">score</span> <span class=\"n\">change</span><span class=\"o\">:</span><span class=\"s2\">&quot;&lt;&lt;ack.score_change()&lt;&lt;</span>\n<span class=\"s2\">        &quot;</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"s2\">&quot;&lt;&lt;&quot;</span><span class=\"n\">artifact</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&lt;&lt;ack.artifact().type()&lt;&lt;&quot;</span> <span class=\"n\">at</span> <span class=\"s2\">&quot;&lt;&lt;ack.artifact().pose().position().x() &lt;&lt; &quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&lt;&lt; ack.artifact().pose().position().y() &lt;&lt;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&lt;&lt;ack.artifact().pose().position().z() &lt;&lt; &quot;</span><span class=\"err\">\\</span><span class=\"n\">n</span> <span class=\"n\">submission</span> <span class=\"n\">time</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span>\n<span class=\"s2\">        &lt;&lt; submission_time.sec()&lt;&lt;</span>\n<span class=\"s2\">        &quot;</span><span class=\"err\">\\</span><span class=\"n\">n</span> <span class=\"n\">current</span> <span class=\"n\">time</span> <span class=\"o\">=</span> <span class=\"err\">&quot;</span><span class=\"o\">&lt;&lt;</span><span class=\"n\">seconds</span><span class=\"o\">.</span><span class=\"nf\">count</span><span class=\"p\">());</span>\n        <span class=\"err\">score_ACKs.push_back(ack)</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"err\">}</span>\n</pre></div>\n\n\n<p>And finally the function where we send the artifact report to the base station and wait for the score_ACKs vector to change:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">bool</span> <span class=\"n\">CommsManager</span><span class=\"o\">::</span><span class=\"n\">send_to_base_station</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"n\">subt</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Artifact</span> <span class=\"o\">&amp;</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">using</span> <span class=\"n\">namespace</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono_literals</span><span class=\"p\">;</span>\n    <span class=\"c1\">// Serialize the artifact.</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">string</span> <span class=\"n\">serializedData</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">SerializeToString</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">serializedData</span><span class=\"p\">))</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;CommsClient::SendToBaseStation(): Error serializing message</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span>\n                  <span class=\"o\">&lt;&lt;</span> <span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">DebugString</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n        <span class=\"k\">return</span> <span class=\"kr\">false</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// Send data to the base station.</span>\n    <span class=\"n\">ROS_INFO_STREAM</span><span class=\"p\">(</span><span class=\"s\">&quot;[&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">address</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;] TO BASE STATION (&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">base_station_address</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;): &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">serializedData</span><span class=\"p\">);</span>\n\n    <span class=\"kr\">int</span> <span class=\"n\">num_acks</span> <span class=\"o\">=</span> <span class=\"n\">score_ACKs</span><span class=\"p\">.</span><span class=\"nf\">size</span><span class=\"p\">();</span>\n\n    <span class=\"kr\">auto</span> <span class=\"n\">realTime</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">steady_clock</span><span class=\"o\">::</span><span class=\"n\">now</span><span class=\"p\">().</span><span class=\"n\">time_since_epoch</span><span class=\"p\">();</span>\n    <span class=\"kr\">auto</span> <span class=\"n\">seconds</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">duration_cast</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">seconds</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">realTime</span><span class=\"p\">);</span>\n\n    <span class=\"n\">ROS_INFO_STREAM</span><span class=\"p\">(</span><span class=\"s\">&quot;[&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">address</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;] # ACK = &quot;</span><span class=\"o\">&lt;&lt;</span><span class=\"n\">score_ACKs</span><span class=\"p\">.</span><span class=\"nf\">size</span><span class=\"p\">()</span><span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; at time &quot;</span><span class=\"o\">&lt;&lt;</span> <span class=\"n\">seconds</span><span class=\"p\">.</span><span class=\"n\">count</span><span class=\"p\">());</span>\n    <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">client</span><span class=\"o\">-&gt;</span><span class=\"n\">SendTo</span><span class=\"p\">(</span><span class=\"n\">serializedData</span><span class=\"p\">,</span> <span class=\"n\">base_station_address</span><span class=\"p\">,</span> <span class=\"mi\">4100</span><span class=\"p\">);</span>\n\n    <span class=\"kr\">int</span> <span class=\"n\">attempt</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n    <span class=\"k\">while</span><span class=\"p\">(</span><span class=\"n\">score_ACKs</span><span class=\"p\">.</span><span class=\"nf\">size</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">num_acks</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">attempt</span> <span class=\"o\">&lt;</span> <span class=\"mi\">20</span><span class=\"p\">){</span>\n        <span class=\"n\">attempt</span><span class=\"o\">++</span><span class=\"p\">;</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">this_thread</span><span class=\"o\">::</span><span class=\"n\">sleep_for</span><span class=\"p\">(</span><span class=\"mi\">500</span><span class=\"n\">ms</span><span class=\"p\">);</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">attempt</span> <span class=\"o\">%</span> <span class=\"mi\">10</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">){</span>\n            <span class=\"n\">realTime</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">steady_clock</span><span class=\"o\">::</span><span class=\"n\">now</span><span class=\"p\">().</span><span class=\"n\">time_since_epoch</span><span class=\"p\">();</span>\n            <span class=\"n\">seconds</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">duration_cast</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">seconds</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">realTime</span><span class=\"p\">);</span>\n            <span class=\"n\">ROS_INFO_STREAM</span><span class=\"p\">(</span><span class=\"s\">&quot;[&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">address</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;] received # ACK = &quot;</span><span class=\"o\">&lt;&lt;</span> <span class=\"n\">score_ACKs</span><span class=\"p\">.</span><span class=\"nf\">size</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span><span class=\"s\">&quot; on attempt = &quot;</span><span class=\"o\">&lt;&lt;</span><span class=\"n\">attempt</span><span class=\"o\">&lt;&lt;</span><span class=\"s\">&quot; at time &quot;</span><span class=\"o\">&lt;&lt;</span><span class=\"n\">seconds</span><span class=\"p\">.</span><span class=\"n\">count</span><span class=\"p\">());</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">ROS_INFO_STREAM</span><span class=\"p\">(</span><span class=\"s\">&quot;[&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">address</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;] required # attempts to receive ACK = &quot;</span><span class=\"o\">&lt;&lt;</span><span class=\"n\">attempt</span><span class=\"p\">);</span>\n\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">score_ACKs</span><span class=\"p\">.</span><span class=\"nf\">size</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"n\">num_acks</span><span class=\"p\">){</span>\n        <span class=\"k\">return</span> <span class=\"kr\">true</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"kr\">false</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>As an example of the output from the receive_artifact_ACK when we eventually receive an acknowledgement:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>...\n[ INFO] [1569420641.165585155, 27.368000000]: X1 ACK ID:2, report status:scored, score change:0\nartifact = 2 at -3.5, 13.5, 10.0615\n submission time = 290489\n current time = 290509\n...\n</pre></div>\n\n\n<p>I\u2019ve added some output lines to the subt comms code to figure out when the base station receives the report and sends back an acknowledgement, and the messages corresponding to the above receive_artifact_ACK output is:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>[Dbg] [VisibilityRfModel.cc:80] Range: 12.3695, Exp: 2.5, TX: 20, RX: -47.3088\n[Dbg] [GameLogicPlugin.cc:515] Score plugin received artifact at 290489\n[Msg]   [Total]: 0\n[Msg] Total score: 0\n[Dbg] [VisibilityRfModel.cc:80] Range: 13.0007, Exp: 2.5, TX: 20, RX: -47.8491\n[Dbg] [GameLogicPlugin.cc:515] Score plugin received artifact at 290489\n[Msg]   [Total]: 0\n[Msg] Total score: 0\n[Dbg] [BaseStationPlugin.cc:106] Sending ArtifactScore back to robot X1, REPORT ID = 2 at time 290489\n[Dbg] [subt_communication_client.cpp:301] Calling SendTo (Ignition) to X1 at time 290489\n</pre></div>\n\n\n<p>So it looks like the robot sends a report at 290489, the base station receives and responds at 290489, but then our code doesn\u2019t pick it up until 290509.  Do you see anything on our end that might be responsible for the one-way delay?  Thanks, and sorry for the very long post :-)</p>", "type": "rendered"}, "created_on": "2019-09-25T14:28:37.062970+00:00", "user": {"display_name": "Joe Palk", "uuid": "{5cc8ea43-8141-495c-84a6-d43c27045e87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cc8ea43-8141-495c-84a6-d43c27045e87%7D"}, "html": {"href": "https://bitbucket.org/%7B5cc8ea43-8141-495c-84a6-d43c27045e87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d234ef34b35f80c57643503/eccf6b09-606c-456e-a48e-e1b9a48f93e0/128"}}, "nickname": "jepalk", "type": "user", "account_id": "5d234ef34b35f80c57643503"}, "updated_on": null, "type": "issue_comment", "id": 54074666}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/54075643.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-54075643"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-09-25T15:27:55.052104+00:00", "user": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "updated_on": null, "type": "issue_comment", "id": 54075643}, {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/54076022.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-54076022"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Hi again! I\u2019ve just noticed that the same delay issue with the base station seems to occur with the CommsClient::Neighbors function. I have not dug into it very much, but I\u2019m mentioning it because it might be easier for you to debug than wading through my code above. I\u2019ve modified our code to start a beacon:\n\n\u200c\n\n```\nCommsManager::CommsManager(const std::string &_address) : address(_address)\n{\n    printf(\"Bind Address is [%s]\\n\",_address.c_str());\n    this->client = std::make_unique<subt::CommsClient>(_address, false,false);\n    this->client->Bind(&CommsManager::receive_receipt, this, _address, this->receipt_port);\n    this->client->StartBeaconInterval(ros::Duration(1.0));\n}\n```\n\nAnd then I just constantly output the robot\u2019s neighbors map:\n\n\u200c\n\n```\n/ Report this robot's neighbors\n        subt::CommsClient::Neighbor_M neighbors = controller_->get_neighbors();\n        subt::CommsClient::Neighbor_M::iterator it = neighbors.begin();\n        while(it != neighbors.end()){\n            ROS_INFO_STREAM(this->controller_->get_name() << \" has neighbor \"<<it->first<<\" at time \"<<it->second.first << \" with signal strength \"<<it->second.second<<\" dBm\");\n            it++;\n        }\n```\n\nWhat I see is that the two robots immediately register each other as neighbors, but it takes a much longer time for them to \u2018see\u2019 the base\\_station as a neighbor.  Initially the neighbors for X1 are:\n\n\u200c\n\n```\n[ INFO] [1569425405.733792013, 27.100000000]: X1 has neighbor X1 at time 27.052 with signal strength inf dBm\n[ INFO] [1569425405.733835913, 27.100000000]: X1 has neighbor X2 at time 27.048 with signal strength -29.9188 dBm\n...\n```\n\nAnd about 20-30 seconds later it picks up the base station:\n\n\u200c\n\n```\n[ INFO] [1569425446.994545179, 51.200000000]: X1 has neighbor X1 at time 27.348 with signal strength inf dBm\n[ INFO] [1569425446.994567261, 51.200000000]: X1 has neighbor X2 at time 27.184 with signal strength -29.8888 dBm\n[ INFO] [1569425446.994584942, 51.200000000]: X1 has neighbor base_station at time 51.2 with signal strength -53.1534 dBm\n...\n```\n\n\u200c", "markup": "markdown", "html": "<p>Hi again! I\u2019ve just noticed that the same delay issue with the base station seems to occur with the CommsClient::Neighbors function. I have not dug into it very much, but I\u2019m mentioning it because it might be easier for you to debug than wading through my code above. I\u2019ve modified our code to start a beacon:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">CommsManager</span><span class=\"p\">::</span><span class=\"nd\">CommsManager</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"o\">&amp;</span><span class=\"nt\">_address</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"nt\">address</span><span class=\"o\">(</span><span class=\"nt\">_address</span><span class=\"o\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"err\">printf(&quot;Bind</span> <span class=\"err\">Address</span> <span class=\"err\">is</span> <span class=\"cp\">[</span><span class=\"o\">%</span><span class=\"nx\">s</span><span class=\"cp\">]</span><span class=\"err\">\\n&quot;,_address.c_str())</span><span class=\"p\">;</span>\n    <span class=\"err\">this-&gt;client</span> <span class=\"err\">=</span> <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">make_unique</span><span class=\"o\">&lt;</span><span class=\"n\">subt</span><span class=\"o\">::</span><span class=\"n\">CommsClient</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">_address</span><span class=\"p\">,</span> <span class=\"n\">false</span><span class=\"p\">,</span><span class=\"n\">false</span><span class=\"p\">);</span>\n    <span class=\"err\">this-&gt;client-&gt;Bind(&amp;</span><span class=\"n\">CommsManager</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">receive_receipt</span><span class=\"p\">,</span> <span class=\"n\">this</span><span class=\"p\">,</span> <span class=\"n\">_address</span><span class=\"p\">,</span> <span class=\"n\">this-</span><span class=\"o\">&gt;</span><span class=\"n\">receipt_port</span><span class=\"p\">);</span>\n    <span class=\"err\">this-&gt;client-&gt;StartBeaconInterval(</span><span class=\"n\">ros</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"nf\">Duration</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">));</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>And then I just constantly output the robot\u2019s neighbors map:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">/</span> <span class=\"nt\">Report</span> <span class=\"nt\">this</span> <span class=\"nt\">robot</span><span class=\"err\">&#39;</span><span class=\"nt\">s</span> <span class=\"nt\">neighbors</span>\n        <span class=\"nt\">subt</span><span class=\"p\">::</span><span class=\"nd\">CommsClient</span><span class=\"p\">::</span><span class=\"nd\">Neighbor_M</span> <span class=\"nt\">neighbors</span> <span class=\"o\">=</span> <span class=\"nt\">controller_-</span><span class=\"o\">&gt;</span><span class=\"nt\">get_neighbors</span><span class=\"o\">();</span>\n        <span class=\"nt\">subt</span><span class=\"p\">::</span><span class=\"nd\">CommsClient</span><span class=\"p\">::</span><span class=\"nd\">Neighbor_M</span><span class=\"p\">::</span><span class=\"nd\">iterator</span> <span class=\"nt\">it</span> <span class=\"o\">=</span> <span class=\"nt\">neighbors</span><span class=\"p\">.</span><span class=\"nc\">begin</span><span class=\"o\">();</span>\n        <span class=\"nt\">while</span><span class=\"o\">(</span><span class=\"nt\">it</span> <span class=\"o\">!=</span> <span class=\"nt\">neighbors</span><span class=\"p\">.</span><span class=\"nc\">end</span><span class=\"o\">())</span><span class=\"p\">{</span>\n            <span class=\"err\">ROS_INFO_STREAM(this-&gt;controller_-&gt;get_name()</span> <span class=\"err\">&lt;&lt;</span> <span class=\"err\">&quot;</span> <span class=\"err\">has</span> <span class=\"err\">neighbor</span> <span class=\"err\">&quot;&lt;&lt;it-&gt;first&lt;&lt;&quot;</span> <span class=\"err\">at</span> <span class=\"err\">time</span> <span class=\"err\">&quot;&lt;&lt;it-&gt;second.first</span> <span class=\"err\">&lt;&lt;</span> <span class=\"err\">&quot;</span> <span class=\"err\">with</span> <span class=\"err\">signal</span> <span class=\"err\">strength</span> <span class=\"err\">&quot;&lt;&lt;it-&gt;second.second&lt;&lt;&quot;</span> <span class=\"err\">dBm&quot;)</span><span class=\"p\">;</span>\n            <span class=\"err\">it++</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>What I see is that the two robots immediately register each other as neighbors, but it takes a much longer time for them to \u2018see\u2019 the base_station as a neighbor.  Initially the neighbors for X1 are:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>[ INFO] [1569425405.733792013, 27.100000000]: X1 has neighbor X1 at time 27.052 with signal strength inf dBm\n[ INFO] [1569425405.733835913, 27.100000000]: X1 has neighbor X2 at time 27.048 with signal strength -29.9188 dBm\n...\n</pre></div>\n\n\n<p>And about 20-30 seconds later it picks up the base station:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>[ INFO] [1569425446.994545179, 51.200000000]: X1 has neighbor X1 at time 27.348 with signal strength inf dBm\n[ INFO] [1569425446.994567261, 51.200000000]: X1 has neighbor X2 at time 27.184 with signal strength -29.8888 dBm\n[ INFO] [1569425446.994584942, 51.200000000]: X1 has neighbor base_station at time 51.2 with signal strength -53.1534 dBm\n...\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-09-25T15:45:33.063942+00:00", "user": {"display_name": "Joe Palk", "uuid": "{5cc8ea43-8141-495c-84a6-d43c27045e87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cc8ea43-8141-495c-84a6-d43c27045e87%7D"}, "html": {"href": "https://bitbucket.org/%7B5cc8ea43-8141-495c-84a6-d43c27045e87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d234ef34b35f80c57643503/eccf6b09-606c-456e-a48e-e1b9a48f93e0/128"}}, "nickname": "jepalk", "type": "user", "account_id": "5d234ef34b35f80c57643503"}, "updated_on": "2019-09-25T15:47:59.174949+00:00", "type": "issue_comment", "id": 54076022}], "page": 1, "size": 44}