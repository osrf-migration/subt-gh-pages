{"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/54076022.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-54076022"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Hi again! I\u2019ve just noticed that the same delay issue with the base station seems to occur with the CommsClient::Neighbors function. I have not dug into it very much, but I\u2019m mentioning it because it might be easier for you to debug than wading through my code above. I\u2019ve modified our code to start a beacon:\n\n\u200c\n\n```\nCommsManager::CommsManager(const std::string &_address) : address(_address)\n{\n    printf(\"Bind Address is [%s]\\n\",_address.c_str());\n    this->client = std::make_unique<subt::CommsClient>(_address, false,false);\n    this->client->Bind(&CommsManager::receive_receipt, this, _address, this->receipt_port);\n    this->client->StartBeaconInterval(ros::Duration(1.0));\n}\n```\n\nAnd then I just constantly output the robot\u2019s neighbors map:\n\n\u200c\n\n```\n/ Report this robot's neighbors\n        subt::CommsClient::Neighbor_M neighbors = controller_->get_neighbors();\n        subt::CommsClient::Neighbor_M::iterator it = neighbors.begin();\n        while(it != neighbors.end()){\n            ROS_INFO_STREAM(this->controller_->get_name() << \" has neighbor \"<<it->first<<\" at time \"<<it->second.first << \" with signal strength \"<<it->second.second<<\" dBm\");\n            it++;\n        }\n```\n\nWhat I see is that the two robots immediately register each other as neighbors, but it takes a much longer time for them to \u2018see\u2019 the base\\_station as a neighbor.  Initially the neighbors for X1 are:\n\n\u200c\n\n```\n[ INFO] [1569425405.733792013, 27.100000000]: X1 has neighbor X1 at time 27.052 with signal strength inf dBm\n[ INFO] [1569425405.733835913, 27.100000000]: X1 has neighbor X2 at time 27.048 with signal strength -29.9188 dBm\n...\n```\n\nAnd about 20-30 seconds later it picks up the base station:\n\n\u200c\n\n```\n[ INFO] [1569425446.994545179, 51.200000000]: X1 has neighbor X1 at time 27.348 with signal strength inf dBm\n[ INFO] [1569425446.994567261, 51.200000000]: X1 has neighbor X2 at time 27.184 with signal strength -29.8888 dBm\n[ INFO] [1569425446.994584942, 51.200000000]: X1 has neighbor base_station at time 51.2 with signal strength -53.1534 dBm\n...\n```\n\n\u200c", "markup": "markdown", "html": "<p>Hi again! I\u2019ve just noticed that the same delay issue with the base station seems to occur with the CommsClient::Neighbors function. I have not dug into it very much, but I\u2019m mentioning it because it might be easier for you to debug than wading through my code above. I\u2019ve modified our code to start a beacon:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">CommsManager</span><span class=\"p\">::</span><span class=\"nd\">CommsManager</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"o\">&amp;</span><span class=\"nt\">_address</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"nt\">address</span><span class=\"o\">(</span><span class=\"nt\">_address</span><span class=\"o\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"err\">printf(&quot;Bind</span> <span class=\"err\">Address</span> <span class=\"err\">is</span> <span class=\"cp\">[</span><span class=\"o\">%</span><span class=\"nx\">s</span><span class=\"cp\">]</span><span class=\"err\">\\n&quot;,_address.c_str())</span><span class=\"p\">;</span>\n    <span class=\"err\">this-&gt;client</span> <span class=\"err\">=</span> <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">make_unique</span><span class=\"o\">&lt;</span><span class=\"n\">subt</span><span class=\"o\">::</span><span class=\"n\">CommsClient</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">_address</span><span class=\"p\">,</span> <span class=\"n\">false</span><span class=\"p\">,</span><span class=\"n\">false</span><span class=\"p\">);</span>\n    <span class=\"err\">this-&gt;client-&gt;Bind(&amp;</span><span class=\"n\">CommsManager</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">receive_receipt</span><span class=\"p\">,</span> <span class=\"n\">this</span><span class=\"p\">,</span> <span class=\"n\">_address</span><span class=\"p\">,</span> <span class=\"n\">this-</span><span class=\"o\">&gt;</span><span class=\"n\">receipt_port</span><span class=\"p\">);</span>\n    <span class=\"err\">this-&gt;client-&gt;StartBeaconInterval(</span><span class=\"n\">ros</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"nf\">Duration</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">));</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>And then I just constantly output the robot\u2019s neighbors map:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">/</span> <span class=\"nt\">Report</span> <span class=\"nt\">this</span> <span class=\"nt\">robot</span><span class=\"err\">&#39;</span><span class=\"nt\">s</span> <span class=\"nt\">neighbors</span>\n        <span class=\"nt\">subt</span><span class=\"p\">::</span><span class=\"nd\">CommsClient</span><span class=\"p\">::</span><span class=\"nd\">Neighbor_M</span> <span class=\"nt\">neighbors</span> <span class=\"o\">=</span> <span class=\"nt\">controller_-</span><span class=\"o\">&gt;</span><span class=\"nt\">get_neighbors</span><span class=\"o\">();</span>\n        <span class=\"nt\">subt</span><span class=\"p\">::</span><span class=\"nd\">CommsClient</span><span class=\"p\">::</span><span class=\"nd\">Neighbor_M</span><span class=\"p\">::</span><span class=\"nd\">iterator</span> <span class=\"nt\">it</span> <span class=\"o\">=</span> <span class=\"nt\">neighbors</span><span class=\"p\">.</span><span class=\"nc\">begin</span><span class=\"o\">();</span>\n        <span class=\"nt\">while</span><span class=\"o\">(</span><span class=\"nt\">it</span> <span class=\"o\">!=</span> <span class=\"nt\">neighbors</span><span class=\"p\">.</span><span class=\"nc\">end</span><span class=\"o\">())</span><span class=\"p\">{</span>\n            <span class=\"err\">ROS_INFO_STREAM(this-&gt;controller_-&gt;get_name()</span> <span class=\"err\">&lt;&lt;</span> <span class=\"err\">&quot;</span> <span class=\"err\">has</span> <span class=\"err\">neighbor</span> <span class=\"err\">&quot;&lt;&lt;it-&gt;first&lt;&lt;&quot;</span> <span class=\"err\">at</span> <span class=\"err\">time</span> <span class=\"err\">&quot;&lt;&lt;it-&gt;second.first</span> <span class=\"err\">&lt;&lt;</span> <span class=\"err\">&quot;</span> <span class=\"err\">with</span> <span class=\"err\">signal</span> <span class=\"err\">strength</span> <span class=\"err\">&quot;&lt;&lt;it-&gt;second.second&lt;&lt;&quot;</span> <span class=\"err\">dBm&quot;)</span><span class=\"p\">;</span>\n            <span class=\"err\">it++</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>What I see is that the two robots immediately register each other as neighbors, but it takes a much longer time for them to \u2018see\u2019 the base_station as a neighbor.  Initially the neighbors for X1 are:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>[ INFO] [1569425405.733792013, 27.100000000]: X1 has neighbor X1 at time 27.052 with signal strength inf dBm\n[ INFO] [1569425405.733835913, 27.100000000]: X1 has neighbor X2 at time 27.048 with signal strength -29.9188 dBm\n...\n</pre></div>\n\n\n<p>And about 20-30 seconds later it picks up the base station:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>[ INFO] [1569425446.994545179, 51.200000000]: X1 has neighbor X1 at time 27.348 with signal strength inf dBm\n[ INFO] [1569425446.994567261, 51.200000000]: X1 has neighbor X2 at time 27.184 with signal strength -29.8888 dBm\n[ INFO] [1569425446.994584942, 51.200000000]: X1 has neighbor base_station at time 51.2 with signal strength -53.1534 dBm\n...\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-09-25T15:45:33.063942+00:00", "user": {"display_name": "Joe Palk", "uuid": "{5cc8ea43-8141-495c-84a6-d43c27045e87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cc8ea43-8141-495c-84a6-d43c27045e87%7D"}, "html": {"href": "https://bitbucket.org/%7B5cc8ea43-8141-495c-84a6-d43c27045e87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d234ef34b35f80c57643503/eccf6b09-606c-456e-a48e-e1b9a48f93e0/128"}}, "nickname": "jepalk", "type": "user", "account_id": "5d234ef34b35f80c57643503"}, "updated_on": "2019-09-25T15:47:59.174949+00:00", "type": "issue_comment", "id": 54076022}