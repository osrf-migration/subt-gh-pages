{"links": {"self": {"href": "data/repositories/osrf/subt/issues/186/comments/53943365.json"}, "html": {"href": "#!/osrf/subt/issues/186#comment-53943365"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Reporting artifacts"}, "content": {"raw": "Ok, I just looked into the new `ACK` interface on for reporting artifacts and my clarified answer for your # 2 is:\n\nIf you report an artifact with a properly formed packet through the `CommsClient` you will always get back `TRUE` from the CommsClient on the call `this->client->SendTo(serializedData, \"base_station\")`. If you are using the new `ACK` system put in, you will be able to determine if the artifact report was valid with information in the `ArtifactScore` message. Due to the `ACK` being subject to the same communication restrictions and stochastic nature of communication, continually reporting the artifact report until you either get an `ACK` or enough radio silence to determine if the message is getting to the base station or not is a good idea while you can verify the accuracy of your report if/when you get that `ACK`. Whenever I sent a successful score report I received `score_change: 1` in the `ACK` to indicate the artifact report was valid.\n\nIn short, the boolean from `this->client->SendTo(serializedData, \"base_station\")` is insufficient in determining whether or not the message arrived at the base station or that the artifact was valid as it should always return `TRUE` if the message sent is valid.  The `FALSE` results you are receiving from the `CommsClient` may be due to faulty usage or a malformed message.  Additionally, monitoring `ACK` from the base station following a report is the correct method for V&V of the artifact report.", "markup": "markdown", "html": "<p>Ok, I just looked into the new <code>ACK</code> interface on for reporting artifacts and my clarified answer for your # 2 is:</p>\n<p>If you report an artifact with a properly formed packet through the <code>CommsClient</code> you will always get back <code>TRUE</code> from the CommsClient on the call <code>this-&gt;client-&gt;SendTo(serializedData, \"base_station\")</code>. If you are using the new <code>ACK</code> system put in, you will be able to determine if the artifact report was valid with information in the <code>ArtifactScore</code> message. Due to the <code>ACK</code> being subject to the same communication restrictions and stochastic nature of communication, continually reporting the artifact report until you either get an <code>ACK</code> or enough radio silence to determine if the message is getting to the base station or not is a good idea while you can verify the accuracy of your report if/when you get that <code>ACK</code>. Whenever I sent a successful score report I received <code>score_change: 1</code> in the <code>ACK</code> to indicate the artifact report was valid.</p>\n<p>In short, the boolean from <code>this-&gt;client-&gt;SendTo(serializedData, \"base_station\")</code> is insufficient in determining whether or not the message arrived at the base station or that the artifact was valid as it should always return <code>TRUE</code> if the message sent is valid.  The <code>FALSE</code> results you are receiving from the <code>CommsClient</code> may be due to faulty usage or a malformed message.  Additionally, monitoring <code>ACK</code> from the base station following a report is the correct method for V&amp;V of the artifact report.</p>", "type": "rendered"}, "created_on": "2019-09-17T15:54:14.558076+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": "2019-09-17T15:57:58.046921+00:00", "type": "issue_comment", "id": 53943365}