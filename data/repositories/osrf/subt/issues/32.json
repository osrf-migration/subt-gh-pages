{"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "links": {"attachments": {"href": "data/repositories/osrf/subt/issues/32/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/subt/issues/32.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/issues/32/watch"}, "comments": {"href": "data/repositories/osrf/subt/issues/32/comments_page=1.json"}, "html": {"href": "#!/osrf/subt/issues/32/less-restrictive-commsclient-bind"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/issues/32/vote"}}, "reporter": {"display_name": "Jon Fink", "uuid": "{89cf7350-7d3a-4a2e-a6ce-43d49bfe9001}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89cf7350-7d3a-4a2e-a6ce-43d49bfe9001%7D"}, "html": {"href": "https://bitbucket.org/%7B89cf7350-7d3a-4a2e-a6ce-43d49bfe9001%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d3f96b67926116d5c1121e7dc9a1a8f2d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJF-5.png"}}, "nickname": "jonfink-arl", "type": "user", "account_id": "5b90221dfa38ae2c89609691"}, "title": "Less restrictive CommsClient Bind interface", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Rather than only allowing the CommsClient to bind to a member function of a class, accept a std::function that can accept a wider range of C++ functionals. E.g.,\r\n\r\n```c++\r\nbool Bind(std::function<void(const std::string &_srcAddress, \r\n                             const std::string &_dstAddress, \r\n                             const uint32_t _dstPort,\r\n                             const std::string &_data)> cb,\r\n                    const std::string &_address = \"\",\r\n                    const int _port = kDefaultPort)\r\n```", "markup": "markdown", "html": "<p>Rather than only allowing the CommsClient to bind to a member function of a class, accept a std::function that can accept a wider range of C++ functionals. E.g.,</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">bool</span> <span class=\"n\">Bind</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">function</span><span class=\"o\">&lt;</span><span class=\"kt\">void</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_srcAddress</span><span class=\"p\">,</span> \n                             <span class=\"k\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_dstAddress</span><span class=\"p\">,</span> \n                             <span class=\"k\">const</span> <span class=\"kt\">uint32_t</span> <span class=\"n\">_dstPort</span><span class=\"p\">,</span>\n                             <span class=\"k\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_data</span><span class=\"p\">)</span><span class=\"o\">&gt;</span> <span class=\"n\">cb</span><span class=\"p\">,</span>\n                    <span class=\"k\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_address</span> <span class=\"o\">=</span> <span class=\"s\">&quot;&quot;</span><span class=\"p\">,</span>\n                    <span class=\"k\">const</span> <span class=\"kt\">int</span> <span class=\"n\">_port</span> <span class=\"o\">=</span> <span class=\"n\">kDefaultPort</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": null, "edited_on": null, "created_on": "2018-12-03T21:37:43.305773+00:00", "milestone": null, "updated_on": "2019-10-31T06:08:40.189623+00:00", "type": "issue", "id": 32}