{"links": {"self": {"href": "data/repositories/osrf/subt/issues/52/comments/50937131.json"}, "html": {"href": "#!/osrf/subt/issues/52#comment-50937131"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/52.json"}}, "type": "issue", "id": 52, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Tag for Software Version 1.0 as described in the roadmap?"}, "content": {"raw": "I also tried #!/osrf/subt/wiki/tutorials/SystemSetupDocker. My expectation was that I will download a prebuilt image from docker hub that is tested and known to be working. At the end, I was able to build the image (with couple of edits to the Dockerfile) but the instructions while nice and readable have no repeatability. When I redo them today, even I will get a different result even when doing it on the same computer.\n\nI believe we need a prebuilt docker image that would contain the core of the simulation. When a container is started from this image, the simulation is run and  our controller can connect to it over the network (thus no compilers are needed on this image). This would provide a maximum repeatability while separating the simulation and the controllers. I believe this setup would also work for the competition runs as well where we would provide our prebuilt docker image that when started would connect to the simulation container. For maximum separation, each robot controller could run in its own docker container and be allowed to communicate only with the simulation container.\n\nFor this to work the communication between the robots and the base station needs to be exposed as a network API and not as a c/c++ library.\n\nPlease let me know if this at least partially corresponds with your plans.", "markup": "markdown", "html": "<p>I also tried <a href=\"#!/osrf/subt/wiki/tutorials/SystemSetupDocker\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/subt/wiki/tutorials/SystemSetupDocker</a>. My expectation was that I will download a prebuilt image from docker hub that is tested and known to be working. At the end, I was able to build the image (with couple of edits to the Dockerfile) but the instructions while nice and readable have no repeatability. When I redo them today, even I will get a different result even when doing it on the same computer.</p>\n<p>I believe we need a prebuilt docker image that would contain the core of the simulation. When a container is started from this image, the simulation is run and  our controller can connect to it over the network (thus no compilers are needed on this image). This would provide a maximum repeatability while separating the simulation and the controllers. I believe this setup would also work for the competition runs as well where we would provide our prebuilt docker image that when started would connect to the simulation container. For maximum separation, each robot controller could run in its own docker container and be allowed to communicate only with the simulation container.</p>\n<p>For this to work the communication between the robots and the base station needs to be exposed as a network API and not as a c/c++ library.</p>\n<p>Please let me know if this at least partially corresponds with your plans.</p>", "type": "rendered"}, "created_on": "2019-03-07T09:30:59.862081+00:00", "user": {"display_name": "Zbyn\u011bk Winkler", "uuid": "{d253a02a-aa23-4c28-9bf2-75863acb0ee0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd253a02a-aa23-4c28-9bf2-75863acb0ee0%7D"}, "html": {"href": "https://bitbucket.org/%7Bd253a02a-aa23-4c28-9bf2-75863acb0ee0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/326a12c819c60ee18418b5d01000d03fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsZW-1.png"}}, "nickname": "Zbyn\u011bk Winkler (robotika)", "type": "user", "account_id": "557058:a92b5a4f-5b91-4853-8dec-b918bd975e70"}, "updated_on": null, "type": "issue_comment", "id": 50937131}