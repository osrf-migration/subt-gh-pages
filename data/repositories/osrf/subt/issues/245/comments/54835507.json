{"links": {"self": {"href": "data/repositories/osrf/subt/issues/245/comments/54835507.json"}, "html": {"href": "#!/osrf/subt/issues/245#comment-54835507"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/245.json"}}, "type": "issue", "id": 245, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Robot-to-robot communication problem"}, "content": {"raw": "Steven, that\u2019s the same behavior I was seeing earlier.\n\nIan/Arthur, I just tried out a patch that seems to fix the issue for me \\(testing it locally without all the cloudsim infrastructure for simplicity\\). I patched `subt_ws/src/subt/subt_ros/src/SubtRosRelay.cc` . After recompiling, broadcast appears to work correctly.\n\nThe patch is:\n\n```diff\ndiff -r d769caa31beb subt_ros/src/SubtRosRelay.cc\n--- a/subt_ros/src/SubtRosRelay.cc\tFri Oct 18 18:03:59 2019 +0000\n+++ b/subt_ros/src/SubtRosRelay.cc\tSat Nov 16 02:41:12 2019 -0600\n@@ -428,7 +428,15 @@\n   req.data = _req.data();\n   req.rssi = _req.rssi();\n \n-  ros::service::call(_req.dst_address(), req, res);\n+  if (_req.dst_address() == \"broadcast\")\n+  {\n+    for (const std::string& dest : this->robotNames)\n+    {\n+      ros::service::call(dest, req, res);\n+    }\n+  } else {\n+    ros::service::call(_req.dst_address(), req, res);\n+  }\n }\n \n //////////////////////////////////////////////////\n```\n\nHope this might help. Thanks!", "markup": "markdown", "html": "<p>Steven, that\u2019s the same behavior I was seeing earlier.</p>\n<p>Ian/Arthur, I just tried out a patch that seems to fix the issue for me (testing it locally without all the cloudsim infrastructure for simplicity). I patched <code>subt_ws/src/subt/subt_ros/src/SubtRosRelay.cc</code> . After recompiling, broadcast appears to work correctly.</p>\n<p>The patch is:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gh\">diff -r d769caa31beb subt_ros/src/SubtRosRelay.cc</span>\n<span class=\"gd\">--- a/subt_ros/src/SubtRosRelay.cc  Fri Oct 18 18:03:59 2019 +0000</span>\n<span class=\"gi\">+++ b/subt_ros/src/SubtRosRelay.cc  Sat Nov 16 02:41:12 2019 -0600</span>\n<span class=\"gu\">@@ -428,7 +428,15 @@</span>\n   req.data = _req.data();\n   req.rssi = _req.rssi();\n\n<span class=\"gd\">-  ros::service::call(_req.dst_address(), req, res);</span>\n<span class=\"gi\">+  if (_req.dst_address() == &quot;broadcast&quot;)</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    for (const std::string&amp; dest : this-&gt;robotNames)</span>\n<span class=\"gi\">+    {</span>\n<span class=\"gi\">+      ros::service::call(dest, req, res);</span>\n<span class=\"gi\">+    }</span>\n<span class=\"gi\">+  } else {</span>\n<span class=\"gi\">+    ros::service::call(_req.dst_address(), req, res);</span>\n<span class=\"gi\">+  }</span>\n }\n\n //////////////////////////////////////////////////\n</pre></div>\n\n\n<p>Hope this might help. Thanks!</p>", "type": "rendered"}, "created_on": "2019-11-16T10:19:00.075976+00:00", "user": {"display_name": "Malcolm Stagg", "uuid": "{eee13832-fdd5-4196-aa05-6cfdb1118c65}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beee13832-fdd5-4196-aa05-6cfdb1118c65%7D"}, "html": {"href": "https://bitbucket.org/%7Beee13832-fdd5-4196-aa05-6cfdb1118c65%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8c08ab97dc600bddad36e4a58f8cc5afd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-3.png"}}, "nickname": "malcolmst7", "type": "user", "account_id": "557058:08ef8b07-1500-4917-989c-89f91ce4beac"}, "updated_on": null, "type": "issue_comment", "id": 54835507}