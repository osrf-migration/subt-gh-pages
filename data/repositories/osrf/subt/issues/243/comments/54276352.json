{"links": {"self": {"href": "data/repositories/osrf/subt/issues/243/comments/54276352.json"}, "html": {"href": "#!/osrf/subt/issues/243#comment-54276352"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/243.json"}}, "type": "issue", "id": 243, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Odometry of robots X1 vs. X2"}, "content": {"raw": "No, this is not expected.  I just tried to reproduce this locally with the most updated version of `osrf/subt-virtual-testbed` and I was unable to reproduce.  Both X1 and X2 odometry registered the appropriate `yaw` when commanding `0.3 rad/s yaw` and I verified by checking the visual feedback on the GUI on a continuous rotation and then stopping every `45 degrees`.\n\nI do want to note that if you send very high commands for `yaw` you may end up with some funky behavior.  When I did a quick test by converting the quaternions on `/<ns>/odom` to Euler angles by hand and commanding `1.0 rad/s yaw` I was getting results that were not what I expected.  However, whenever I wrote up a `nav_msgs::Odometry` to tf converter node and monitoring the published transform\u2019s yaw directly at lower rates \\(i.e. `0.3 rad/s yaw`\\) I saw the results I was expecting.", "markup": "markdown", "html": "<p>No, this is not expected.  I just tried to reproduce this locally with the most updated version of <code>osrf/subt-virtual-testbed</code> and I was unable to reproduce.  Both X1 and X2 odometry registered the appropriate <code>yaw</code> when commanding <code>0.3 rad/s yaw</code> and I verified by checking the visual feedback on the GUI on a continuous rotation and then stopping every <code>45 degrees</code>.</p>\n<p>I do want to note that if you send very high commands for <code>yaw</code> you may end up with some funky behavior.  When I did a quick test by converting the quaternions on <code>/&lt;ns&gt;/odom</code> to Euler angles by hand and commanding <code>1.0 rad/s yaw</code> I was getting results that were not what I expected.  However, whenever I wrote up a <code>nav_msgs::Odometry</code> to tf converter node and monitoring the published transform\u2019s yaw directly at lower rates (i.e. <code>0.3 rad/s yaw</code>) I saw the results I was expecting.</p>", "type": "rendered"}, "created_on": "2019-10-09T14:46:41.224436+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": null, "type": "issue_comment", "id": 54276352}