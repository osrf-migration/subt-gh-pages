{"links": {"self": {"href": "data/repositories/osrf/subt/issues/152/comments/53341465.json"}, "html": {"href": "#!/osrf/subt/issues/152#comment-53341465"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/152.json"}}, "type": "issue", "id": 152, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "X1 LIDAR Self Detection"}, "content": {"raw": "I recommend fixing in Ignition but in the mean time, you can use PCL filters from ROS as used over at subt\\_hello\\_world repository to deal with this issue on lines 47 to 68 in [this launch file](https://bitbucket.org/jgrogers/subt_hello_world/src/development/catkin_build_ws/src/helloworld_subt_launch/launch/robot.launch).\n\n\u200c\n\nFor those of you who do not wish to follow the link, here\u2019s an example of how it\u2019s configured for the subt\\_hello\\_world repository:\n\n```\n<!-- Run a passthrough filter to clean self returns -->\n<node pkg=\"nodelet\" type=\"nodelet\" name=\"passthrough_x\" args=\"load pcl/PassThrough pcl_manager\" output=\"screen\">\n  <remap from=\"~input\" to=\"points\" />\n  <remap from=\"~output\" to=\"ptx\" />\n  <rosparam>\n    filter_field_name: x\n    filter_limit_min: -0.40\n    filter_limit_max:  0.40\n    filter_limit_negative: True\n  </rosparam>\n</node>\n\n<node pkg=\"nodelet\" type=\"nodelet\" name=\"passthrough_y\" args=\"load pcl/PassThrough pcl_manager\" output=\"screen\">\n  <remap from=\"~input\" to=\"ptx\" />\n  <remap from=\"~output\" to=\"points_filtered\" />\n  <rosparam>\n    filter_field_name: y\n    filter_limit_min: -0.40\n    filter_limit_max:  0.40\n    filter_limit_negative: True\n  </rosparam>\n</node>\n```\n\n\u200c\n\nThere are certainly other ways to do exactly this but this is just one example way to trim using PCL.\n\n\u200c\n\nP.S. Nice screenshot rsawtell!", "markup": "markdown", "html": "<p>I recommend fixing in Ignition but in the mean time, you can use PCL filters from ROS as used over at subt_hello_world repository to deal with this issue on lines 47 to 68 in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/jgrogers/subt_hello_world/src/development/catkin_build_ws/src/helloworld_subt_launch/launch/robot.launch\" rel=\"nofollow\">this launch file</a>.</p>\n<p>\u200c</p>\n<p>For those of you who do not wish to follow the link, here\u2019s an example of how it\u2019s configured for the subt_hello_world repository:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c\">&lt;!-- Run a passthrough filter to clean self returns --&gt;</span>\n<span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;nodelet&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;nodelet&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;passthrough_x&quot;</span> <span class=\"na\">args=</span><span class=\"s\">&quot;load pcl/PassThrough pcl_manager&quot;</span> <span class=\"na\">output=</span><span class=\"s\">&quot;screen&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;~input&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;points&quot;</span> <span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;~output&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;ptx&quot;</span> <span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;rosparam&gt;</span>\n    filter_field_name: x\n    filter_limit_min: -0.40\n    filter_limit_max:  0.40\n    filter_limit_negative: True\n  <span class=\"nt\">&lt;/rosparam&gt;</span>\n<span class=\"nt\">&lt;/node&gt;</span>\n\n<span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;nodelet&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;nodelet&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;passthrough_y&quot;</span> <span class=\"na\">args=</span><span class=\"s\">&quot;load pcl/PassThrough pcl_manager&quot;</span> <span class=\"na\">output=</span><span class=\"s\">&quot;screen&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;~input&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;ptx&quot;</span> <span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;remap</span> <span class=\"na\">from=</span><span class=\"s\">&quot;~output&quot;</span> <span class=\"na\">to=</span><span class=\"s\">&quot;points_filtered&quot;</span> <span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;rosparam&gt;</span>\n    filter_field_name: y\n    filter_limit_min: -0.40\n    filter_limit_max:  0.40\n    filter_limit_negative: True\n  <span class=\"nt\">&lt;/rosparam&gt;</span>\n<span class=\"nt\">&lt;/node&gt;</span>\n</pre></div>\n\n\n<p>\u200c</p>\n<p>There are certainly other ways to do exactly this but this is just one example way to trim using PCL.</p>\n<p>\u200c</p>\n<p>P.S. Nice screenshot rsawtell!</p>", "type": "rendered"}, "created_on": "2019-08-08T21:54:59.238339+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": "2019-08-08T22:03:56.871995+00:00", "type": "issue_comment", "id": 53341465}