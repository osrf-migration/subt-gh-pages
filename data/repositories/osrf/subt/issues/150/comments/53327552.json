{"links": {"self": {"href": "data/repositories/osrf/subt/issues/150/comments/53327552.json"}, "html": {"href": "#!/osrf/subt/issues/150#comment-53327552"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/subt/issues/150.json"}}, "type": "issue", "id": 150, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "title": "Error in new catkin workspace setup"}, "content": {"raw": "Hi L\u00fd,\n\nThat is very simple.  Open two terminal windows.  In **Terminal 1**, launch the SubT docker image, but use `validate_artifacts.ign` instead of `tunnel_circuit_practice.ign`as shown below.  Then, follow the steps at the bottom for **Terminal 2**.\n\n```\n# TERMINAL 1:\n\n./run.bash osrf/subt-virtual-testbed validate_artifacts.ign robotName1:=X1 robotConfig1:=X1_SENSOR_CONFIG_1\n```\n\n```\n# TERMINAL 2:\n\ncontainerid=$(docker ps -aqf ancestor=osrf/subt-virtual-testbed:latest) && echo $containerid\n\ndocker exec --privileged -e DISPLAY=${DISPLAY} -e LINES=\"`tput lines`\" -it ${containerid} bash\n\n# Once inside the docker container, then run these commands:\n\n. install/setup.bash\n\nign service -s /artifact/scan --reqtype ignition.msgs.StringMsg --reptype ignition.msgs.StringMsg --timeout 1000 --req 'data: \"\"'\n\nign service -s /artifact/next --reqtype ignition.msgs.StringMsg --reptype ignition.msgs.StringMsg --timeout 1000 --req 'data: \"\"'\n```", "markup": "markdown", "html": "<p>Hi L\u00fd,</p>\n<p>That is very simple.  Open two terminal windows.  In <strong>Terminal 1</strong>, launch the SubT docker image, but use <code>validate_artifacts.ign</code> instead of <code>tunnel_circuit_practice.ign</code>as shown below.  Then, follow the steps at the bottom for <strong>Terminal 2</strong>.</p>\n<div class=\"codehilite\"><pre><span></span># TERMINAL 1:\n\n./run.bash osrf/subt-virtual-testbed validate_artifacts.ign robotName1:=X1 robotConfig1:=X1_SENSOR_CONFIG_1\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span># TERMINAL 2:\n\ncontainerid=$(docker ps -aqf ancestor=osrf/subt-virtual-testbed:latest) <span class=\"err\">&amp;&amp;</span> echo <span class=\"nv\">$containerid</span>\n\ndocker exec --privileged -e DISPLAY=<span class=\"cp\">${</span><span class=\"n\">DISPLAY</span><span class=\"cp\">}</span> -e LINES=&quot;`tput lines`&quot; -it <span class=\"cp\">${</span><span class=\"n\">containerid</span><span class=\"cp\">}</span> bash\n\n# Once inside the docker container, then run these commands:\n\n. install/setup.bash\n\nign service -s /artifact/scan --reqtype ignition.msgs.StringMsg --reptype ignition.msgs.StringMsg --timeout 1000 --req &#39;data: &quot;&quot;&#39;\n\nign service -s /artifact/next --reqtype ignition.msgs.StringMsg --reptype ignition.msgs.StringMsg --timeout 1000 --req &#39;data: &quot;&quot;&#39;\n</pre></div>", "type": "rendered"}, "created_on": "2019-08-08T02:24:44.761187+00:00", "user": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "updated_on": null, "type": "issue_comment", "id": 53327552}