{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "links": {"attachments": {"href": "data/repositories/osrf/subt/issues/316/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/subt/issues/316.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/issues/316/watch"}, "comments": {"href": "data/repositories/osrf/subt/issues/316/comments_page=1.json"}, "html": {"href": "#!/osrf/subt/issues/316/local-cloudsim-hangs-up-on-comms-broker"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/issues/316/vote"}}, "reporter": {"display_name": "Paul Jurczak", "uuid": "{d17ee528-259a-4ff4-b5b0-007442ea3edb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd17ee528-259a-4ff4-b5b0-007442ea3edb%7D"}, "html": {"href": "https://bitbucket.org/%7Bd17ee528-259a-4ff4-b5b0-007442ea3edb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/11246ef0203dec00e61a34f4d35987e7d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPJ-3.png"}}, "nickname": "pauljurczak", "type": "user", "account_id": "557058:13c5913f-35b3-41ba-8f6d-5887d9158e52"}, "title": "Local Cloudsim hangs up on comms broker", "component": null, "votes": 1, "watches": 6, "content": {"raw": "I\u2019m following the tutorial with a solution built and tested in catkin workspace. I created Docker image with this recipe:\r\n\r\n```\r\nFROM osrf/subt-virtual-testbed:subt_solution_latest\r\n\r\nCOPY docker ~/subt_ws/install/share\r\nCMD ~/subt_ws/install/share/run_sim.bash\r\n```\r\n\r\n`run_sim.bash`:\r\n\r\n```\r\n. /opt/ros/melodic/setup.bash\r\n. ~/subt_ws/install/setup.sh\r\n\r\nroslaunch st.launch\r\n```\r\n\r\n`st.launch`:\r\n\r\n```\r\n<launch>\r\n  <node pkg=\"robot_localization\" type=\"ekf_localization_node\" name=\"robot_localization_ekf_node_odom\" clear_params=\"true\">\r\n    <rosparam command=\"load\" file=\"$(dirname)/ekf_localization.yaml\" />\r\n  </node>\r\n  <node pkg=\"st\" type=\"st_node\" name=\"st_node\" clear_params=\"true\"> </node>\r\n</launch> \r\n```\r\n\r\n`docker_compose.yaml`:\r\n\r\n```\r\nversion: \"2.4\"\r\nservices:\r\n\r\n  # The sim container runs Gazebo and all simulation plugins.\r\n  # In this example, two robots are started with the names X1 and X2.\r\n  sim:\r\n    image: osrf/subt-virtual-testbed:cloudsim_sim_latest\r\n    command: cloudsim_sim.ign headless:=true worldName:=urban_qual robotName1:=X1 robotConfig1:=COSTAR_HUSKY_SENSOR_CONFIG_1\r\n    networks:\r\n      sim_net:\r\n        ipv4_address: 172.28.1.1\r\n    environment:\r\n      - DISPLAY\r\n      - QT_X11_NO_MITSHM=1\r\n      - XAUTHORITY=/tmp/.docker.xauth\r\n      - IGN_PARTITION=sim\r\n      - IGN_IP=172.28.1.1\r\n    env_file: .env  \r\n    privileged: true\r\n    runtime: nvidia\r\n    security_opt:\r\n      - seccomp=unconfined\r\n    volumes:\r\n      - \"/tmp/.docker.xauth:/tmp/.docker.xauth\"\r\n      - \"/tmp/.X11-unix:/tmp/.X11-unix\"\r\n      - \"/etc/localtime:/etc/localtime:ro\"\r\n      - \"/dev/input:/dev/input\" \r\n\r\n  # The bridge container relays a sub-set of information from the sim container\r\n  # to the solution container. This bridge container will relay information\r\n  # for the X1 robot\r\n  bridge1:\r\n    image: osrf/subt-virtual-testbed:cloudsim_bridge_latest\r\n    # Relay topics and service for X1\r\n    command: worldName:=urban_qual robotName1:=X1 robotConfig1:=COSTAR_HUSKY_SENSOR_CONFIG_1\r\n    # The bridge needs two networks. One for simulation and one for the\r\n    # solution.\r\n    networks:\r\n      relay_net1:\r\n        ipv4_address: 172.29.1.1\r\n      sim_net:\r\n        ipv4_address: 172.28.1.2\r\n    environment:\r\n      - IGN_PARTITION=sim\r\n      - IGN_IP=172.28.1.2\r\n      - ROS_MASTER_URI=http://172.29.1.1:11311\r\n    env_file: .env\r\n    depends_on:\r\n      - \"sim\"\r\n\r\n  # The solution container runs control code for a single robot. This\r\n  # solution container connects to the first bridge, and therefore controls\r\n  # the X1 robot.\r\n  solution1:\r\n    image: st:latest\r\n    networks:\r\n      relay_net1:\r\n        ipv4_address: 172.29.1.2\r\n    environment:\r\n      - ROS_MASTER_URI=http://172.29.1.1:11311\r\n    runtime: nvidia\r\n    depends_on:\r\n      - \"bridge1\"\r\n\r\n  \r\n# Definition of the networks.\r\nnetworks:\r\n  sim_net:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.28.0.0/16\r\n  relay_net1:\r\n    internal: true\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.29.0.0/16\r\n```\r\n\r\nI tried it on two different PCs and on one it hangs up here:\r\n\r\n```\r\nsim_1        | [Msg] Publishing pose messages on [/world/urban_qual/pose/info]\r\nsim_1        | [Msg] Publishing dynamic pose messages on [/world/urban_qual/dynamic_pose/info]\r\nsim_1        | [Dbg] [CommsBrokerPlugin.cc:210] Using [visibility_range] comms model\r\nsim_1        | [Msg] Starting SubT comms broker\r\n```\r\n\r\non the other one `Robot [X1] is too far from the staging area`\\` at spawn:\r\n\r\n```\r\nsim_1        | [Msg] Loaded level [70]\r\nsim_1        | [Msg] Loaded level [71]\r\nsim_1        | [Msg] Loaded level [74]\r\nsim_1        | [Msg] Loaded level [75]\r\nsim_1        | [Msg] Publishing laser scans on [world/urban_qual/model/X1/link/base_link/sensor/front_cliff_laser/scan]\r\nsim_1        | [Msg] Publishing laser scans on [world/urban_qual/model/X1/link/base_link/sensor/front_laser/scan]\r\nsim_1        | [Msg] Unloaded level [12]\r\nsim_1        | [Msg] Unloaded level [70]\r\nsim_1        | [Msg] Unloaded level [16]\r\nsim_1        | [Msg] Unloaded level [8]\r\nsim_1        | [Msg] Unloaded level [71]\r\nsim_1        | [Msg] Unloaded level [36]\r\nsim_1        | [Msg] Unloaded level [4]\r\nsim_1        | [Msg] Unloaded level [5]\r\nsim_1        | [Msg] Unloaded level [6]\r\nsim_1        | [Msg] Unloaded level [7]\r\nsim_1        | [Msg] Unloaded level [9]\r\nsim_1        | [Msg] Unloaded level [10]\r\nsim_1        | [Msg] Unloaded level [11]\r\nsim_1        | [Msg] Unloaded level [13]\r\nsim_1        | [Msg] Unloaded level [14]\r\nsim_1        | [Msg] Unloaded level [15]\r\nsim_1        | [Msg] Unloaded level [18]\r\nsim_1        | [Msg] Unloaded level [19]\r\nsim_1        | [Msg] Unloaded level [20]\r\nsim_1        | [Msg] Unloaded level [21]\r\nsim_1        | [Msg] Unloaded level [22]\r\nsim_1        | [Msg] Unloaded level [23]\r\nsim_1        | [Msg] Unloaded level [24]\r\nsim_1        | [Msg] Unloaded level [25]\r\nsim_1        | [Msg] Unloaded level [34]\r\nsim_1        | [Msg] Unloaded level [35]\r\nsim_1        | [Msg] Unloaded level [39]\r\nsim_1        | [Msg] Unloaded level [40\u001b[[Err] [GameLogicPlugin.cc:1035] [GameLogicPlugin]: Robot [X1] is too far from the staging area. Ignoring PoseFromArtifact request\r\nsolution1_1  | [ERROR] [1578054993.553735358, 6.044000000]: Failed to call pose_from_artifact_origin service, robot may not exist, be outside staging area, or the service is not available.\r\nsim_1        | 0m]\r\nsim_1        | [Msg] Unloaded level [48]\r\nsim_1        | [Msg] Unloaded level [49]\r\n```\r\n\r\n\u200c", "markup": "markdown", "html": "<p>I\u2019m following the tutorial with a solution built and tested in catkin workspace. I created Docker image with this recipe:</p>\n<div class=\"codehilite\"><pre><span></span>FROM osrf/subt-virtual-testbed:subt_solution_latest\n\nCOPY docker ~/subt_ws/install/share\nCMD ~/subt_ws/install/share/run_sim.bash\n</pre></div>\n\n\n<p><code>run_sim.bash</code>:</p>\n<div class=\"codehilite\"><pre><span></span>. /opt/ros/melodic/setup.bash\n. ~/subt_ws/install/setup.sh\n\nroslaunch st.launch\n</pre></div>\n\n\n<p><code>st.launch</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;launch&gt;</span>\n  <span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;robot_localization&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ekf_localization_node&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;robot_localization_ekf_node_odom&quot;</span> <span class=\"na\">clear_params=</span><span class=\"s\">&quot;true&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;rosparam</span> <span class=\"na\">command=</span><span class=\"s\">&quot;load&quot;</span> <span class=\"na\">file=</span><span class=\"s\">&quot;$(dirname)/ekf_localization.yaml&quot;</span> <span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/node&gt;</span>\n  <span class=\"nt\">&lt;node</span> <span class=\"na\">pkg=</span><span class=\"s\">&quot;st&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;st_node&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;st_node&quot;</span> <span class=\"na\">clear_params=</span><span class=\"s\">&quot;true&quot;</span><span class=\"nt\">&gt;</span> <span class=\"nt\">&lt;/node&gt;</span>\n<span class=\"nt\">&lt;/launch&gt;</span> \n</pre></div>\n\n\n<p><code>docker_compose.yaml</code>:</p>\n<div class=\"codehilite\"><pre><span></span>version: &quot;2.4&quot;\nservices:\n\n  # The sim container runs Gazebo and all simulation plugins.\n  # In this example, two robots are started with the names X1 and X2.\n  sim:\n    image: osrf/subt-virtual-testbed:cloudsim_sim_latest\n    command: cloudsim_sim.ign headless:=true worldName:=urban_qual robotName1:=X1 robotConfig1:=COSTAR_HUSKY_SENSOR_CONFIG_1\n    networks:\n      sim_net:\n        ipv4_address: 172.28.1.1\n    environment:\n      - DISPLAY\n      - QT_X11_NO_MITSHM=1\n      - XAUTHORITY=/tmp/.docker.xauth\n      - IGN_PARTITION=sim\n      - IGN_IP=172.28.1.1\n    env_file: .env  \n    privileged: true\n    runtime: nvidia\n    security_opt:\n      - seccomp=unconfined\n    volumes:\n      - &quot;/tmp/.docker.xauth:/tmp/.docker.xauth&quot;\n      - &quot;/tmp/.X11-unix:/tmp/.X11-unix&quot;\n      - &quot;/etc/localtime:/etc/localtime:ro&quot;\n      - &quot;/dev/input:/dev/input&quot; \n\n  # The bridge container relays a sub-set of information from the sim container\n  # to the solution container. This bridge container will relay information\n  # for the X1 robot\n  bridge1:\n    image: osrf/subt-virtual-testbed:cloudsim_bridge_latest\n    # Relay topics and service for X1\n    command: worldName:=urban_qual robotName1:=X1 robotConfig1:=COSTAR_HUSKY_SENSOR_CONFIG_1\n    # The bridge needs two networks. One for simulation and one for the\n    # solution.\n    networks:\n      relay_net1:\n        ipv4_address: 172.29.1.1\n      sim_net:\n        ipv4_address: 172.28.1.2\n    environment:\n      - IGN_PARTITION=sim\n      - IGN_IP=172.28.1.2\n      - ROS_MASTER_URI=http://172.29.1.1:11311\n    env_file: .env\n    depends_on:\n      - &quot;sim&quot;\n\n  # The solution container runs control code for a single robot. This\n  # solution container connects to the first bridge, and therefore controls\n  # the X1 robot.\n  solution1:\n    image: st:latest\n    networks:\n      relay_net1:\n        ipv4_address: 172.29.1.2\n    environment:\n      - ROS_MASTER_URI=http://172.29.1.1:11311\n    runtime: nvidia\n    depends_on:\n      - &quot;bridge1&quot;\n\n\n# Definition of the networks.\nnetworks:\n  sim_net:\n    ipam:\n      driver: default\n      config:\n        - subnet: 172.28.0.0/16\n  relay_net1:\n    internal: true\n    ipam:\n      driver: default\n      config:\n        - subnet: 172.29.0.0/16\n</pre></div>\n\n\n<p>I tried it on two different PCs and on one it hangs up here:</p>\n<div class=\"codehilite\"><pre><span></span>sim_1        | [Msg] Publishing pose messages on [/world/urban_qual/pose/info]\nsim_1        | [Msg] Publishing dynamic pose messages on [/world/urban_qual/dynamic_pose/info]\nsim_1        | [Dbg] [CommsBrokerPlugin.cc:210] Using [visibility_range] comms model\nsim_1        | [Msg] Starting SubT comms broker\n</pre></div>\n\n\n<p>on the other one <code>Robot [X1] is too far from the staging area</code>` at spawn:</p>\n<div class=\"codehilite\"><pre><span></span>sim_1        | [Msg] Loaded level [70]\nsim_1        | [Msg] Loaded level [71]\nsim_1        | [Msg] Loaded level [74]\nsim_1        | [Msg] Loaded level [75]\nsim_1        | [Msg] Publishing laser scans on [world/urban_qual/model/X1/link/base_link/sensor/front_cliff_laser/scan]\nsim_1        | [Msg] Publishing laser scans on [world/urban_qual/model/X1/link/base_link/sensor/front_laser/scan]\nsim_1        | [Msg] Unloaded level [12]\nsim_1        | [Msg] Unloaded level [70]\nsim_1        | [Msg] Unloaded level [16]\nsim_1        | [Msg] Unloaded level [8]\nsim_1        | [Msg] Unloaded level [71]\nsim_1        | [Msg] Unloaded level [36]\nsim_1        | [Msg] Unloaded level [4]\nsim_1        | [Msg] Unloaded level [5]\nsim_1        | [Msg] Unloaded level [6]\nsim_1        | [Msg] Unloaded level [7]\nsim_1        | [Msg] Unloaded level [9]\nsim_1        | [Msg] Unloaded level [10]\nsim_1        | [Msg] Unloaded level [11]\nsim_1        | [Msg] Unloaded level [13]\nsim_1        | [Msg] Unloaded level [14]\nsim_1        | [Msg] Unloaded level [15]\nsim_1        | [Msg] Unloaded level [18]\nsim_1        | [Msg] Unloaded level [19]\nsim_1        | [Msg] Unloaded level [20]\nsim_1        | [Msg] Unloaded level [21]\nsim_1        | [Msg] Unloaded level [22]\nsim_1        | [Msg] Unloaded level [23]\nsim_1        | [Msg] Unloaded level [24]\nsim_1        | [Msg] Unloaded level [25]\nsim_1        | [Msg] Unloaded level [34]\nsim_1        | [Msg] Unloaded level [35]\nsim_1        | [Msg] Unloaded level [39]\nsim_1        | [Msg] Unloaded level [40\u001b[[Err] [GameLogicPlugin.cc:1035] [GameLogicPlugin]: Robot [X1] is too far from the staging area. Ignoring PoseFromArtifact request\nsolution1_1  | [ERROR] [1578054993.553735358, 6.044000000]: Failed to call pose_from_artifact_origin service, robot may not exist, be outside staging area, or the service is not available.\nsim_1        | 0m]\nsim_1        | [Msg] Unloaded level [48]\nsim_1        | [Msg] Unloaded level [49]\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-01-03T13:19:20.447753+00:00", "milestone": null, "updated_on": "2020-03-09T16:29:34.656609+00:00", "type": "issue", "id": 316}