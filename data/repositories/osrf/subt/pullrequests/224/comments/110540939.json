{"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/224/comments/110540939.json"}, "html": {"href": "#!/osrf/subt/pull-requests/224/_/diff#comment-110540939"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 224, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/224.json"}, "html": {"href": "#!/osrf/subt/pull-requests/224"}}, "title": "Add custom roll_pitch_yawrate_thrust_controller_node"}, "content": {"raw": "You weren\u2019t joking, diff from upstream :confused:   \n\n```\ndiff --git a/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.cpp b/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.cpp\nindex 38af468..9026b6c 100644\n--- a/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.cpp\n+++ b/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.cpp\n@@ -18,9 +18,10 @@\n  * limitations under the License.\n  */\n \n+\n #include \"roll_pitch_yawrate_thrust_controller_node.h\"\n+#include <rotors_control/parameters_ros.h>\n \n-#include \"rotors_control/parameters_ros.h\"\n \n namespace rotors_control {\n \n@@ -63,6 +64,7 @@ void RollPitchYawrateThrustControllerNode::InitializeParams() {\n                   roll_pitch_yawrate_thrust_controller_.controller_parameters_.angular_rate_gain_.z(),\n                   &roll_pitch_yawrate_thrust_controller_.controller_parameters_.angular_rate_gain_.z());\n   GetVehicleParameters(pnh, &roll_pitch_yawrate_thrust_controller_.vehicle_parameters_);\n+\n   roll_pitch_yawrate_thrust_controller_.InitializeParameters();\n }\n void RollPitchYawrateThrustControllerNode::Publish() {\n@@ -103,6 +105,8 @@ void RollPitchYawrateThrustControllerNode::OdometryCallback(const nav_msgs::Odom\n int main(int argc, char** argv) {\n   ros::init(argc, argv, \"roll_pitch_yawrate_thrust_controller_node\");\n \n+  ros::NodeHandle pnh(\"~\");\n+\n   rotors_control::RollPitchYawrateThrustControllerNode roll_pitch_yawrate_thrust_controller_node;\n \n   ros::spin();\ndiff --git a/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.h b/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.h\nindex 1442ac8..ca318da 100644\n--- a/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.h\n+++ b/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.h\n@@ -32,8 +32,8 @@\n #include <ros/ros.h>\n #include <ros/callback_queue.h>\n \n-#include \"rotors_control/common.h\"\n-#include \"rotors_control/roll_pitch_yawrate_thrust_controller.h\"\n+#include <rotors_control/common.h>\n+#include <rotors_control/roll_pitch_yawrate_thrust_controller.h>\n \n namespace rotors_control {\n \n```", "markup": "markdown", "html": "<p>You weren\u2019t joking, diff from upstream <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f615.png\" alt=\"\ud83d\ude15\" title=\":confused:\" data-emoji-short-name=\":confused:\" />   </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff --git a/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.cpp b/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.cpp</span>\n<span class=\"gh\">index 38af468..9026b6c 100644</span>\n<span class=\"gd\">--- a/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.cpp</span>\n<span class=\"gi\">+++ b/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.cpp</span>\n<span class=\"gu\">@@ -18,9 +18,10 @@</span>\n  * limitations under the License.\n  */\n\n<span class=\"gi\">+</span>\n #include &quot;roll_pitch_yawrate_thrust_controller_node.h&quot;\n<span class=\"gi\">+#include &lt;rotors_control/parameters_ros.h&gt;</span>\n\n<span class=\"gd\">-#include &quot;rotors_control/parameters_ros.h&quot;</span>\n\n namespace rotors_control {\n\n<span class=\"gu\">@@ -63,6 +64,7 @@ void RollPitchYawrateThrustControllerNode::InitializeParams() {</span>\n                   roll_pitch_yawrate_thrust_controller_.controller_parameters_.angular_rate_gain_.z(),\n                   &amp;roll_pitch_yawrate_thrust_controller_.controller_parameters_.angular_rate_gain_.z());\n   GetVehicleParameters(pnh, &amp;roll_pitch_yawrate_thrust_controller_.vehicle_parameters_);\n<span class=\"gi\">+</span>\n   roll_pitch_yawrate_thrust_controller_.InitializeParameters();\n }\n void RollPitchYawrateThrustControllerNode::Publish() {\n<span class=\"gu\">@@ -103,6 +105,8 @@ void RollPitchYawrateThrustControllerNode::OdometryCallback(const nav_msgs::Odom</span>\n int main(int argc, char** argv) {\n   ros::init(argc, argv, &quot;roll_pitch_yawrate_thrust_controller_node&quot;);\n\n<span class=\"gi\">+  ros::NodeHandle pnh(&quot;~&quot;);</span>\n<span class=\"gi\">+</span>\n   rotors_control::RollPitchYawrateThrustControllerNode roll_pitch_yawrate_thrust_controller_node;\n\n   ros::spin();\n<span class=\"gh\">diff --git a/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.h b/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.h</span>\n<span class=\"gh\">index 1442ac8..ca318da 100644</span>\n<span class=\"gd\">--- a/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.h</span>\n<span class=\"gi\">+++ b/rotors_control/src/nodes/roll_pitch_yawrate_thrust_controller_node.h</span>\n<span class=\"gu\">@@ -32,8 +32,8 @@</span>\n #include &lt;ros/ros.h&gt;\n #include &lt;ros/callback_queue.h&gt;\n\n<span class=\"gd\">-#include &quot;rotors_control/common.h&quot;</span>\n<span class=\"gd\">-#include &quot;rotors_control/roll_pitch_yawrate_thrust_controller.h&quot;</span>\n<span class=\"gi\">+#include &lt;rotors_control/common.h&gt;</span>\n<span class=\"gi\">+#include &lt;rotors_control/roll_pitch_yawrate_thrust_controller.h&gt;</span>\n\n namespace rotors_control {\n</pre></div>", "type": "rendered"}, "created_on": "2019-07-24T15:40:10.142454+00:00", "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}, "updated_on": "2019-07-24T15:40:10.154075+00:00", "type": "pullrequest_comment", "id": 110540939}