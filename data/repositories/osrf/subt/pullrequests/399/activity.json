{"pagelen": 50, "values": [{"update": {"description": "This is an utility for running some checks over a SubT log file. Right now, it can be used for checking if any object is below a certain height.\r\n\r\nHow do I use it?\r\n\r\n1. Compile and run SubT to generate a log file.\r\n2. Run the log checker. Here\u2019s an example:\r\n\r\n```\r\n./install/lib/subt_ign/log_checker --file=/tmp/ign/logs/state.tlog --topic=/world/urban_circuit_practice_01/dynamic_pose/info --minz=0\r\n```\r\n\r\nMake sure to update the path to your log file, the world name in your topic, and the minimum Z value.\r\n\r\n1. As a human, you can see the verbose output generated by the program. E.g.:\r\n\r\n```\r\n******************************\r\nConfiguration:\r\n  Log file: [/tmp/ign/logs/state.tlog]\r\n  Topic name: [/world/urban_circuit_practice_01/dynamic_pose/info]\r\n  Minimum Z: [0]\r\nOutput report:\r\n  Minimum Z check: [true]\r\n******************************\r\n```\r\n\r\nProgrammatically, you can also check the exit code of the program:\r\n\r\n```\r\necho $?\r\n0\r\n```\r\n\r\nwhere the exit code means:\r\n\r\n`0`: All checks have passed.\r\n\r\n`1`: The checker is not correctly initialized. E.g.: Incorrect path or topic, missing minZ argument.\r\n\r\n`2`: Unable to playback the log file. Unlikely unless there\u2019s some internal error in the player.\r\n\r\n`3`: At least one check hasn\u2019t passed.", "title": "Add log_checker utility", "destination": {"commit": {"hash": "fcb68f83effb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/fcb68f83effb.json"}, "html": {"href": "#!/osrf/subt/commits/fcb68f83effb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "urban_circuit"}}, "reason": "", "source": {"commit": {"hash": "63b80926cc53", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/63b80926cc53.json"}, "html": {"href": "#!/osrf/subt/commits/63b80926cc53"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "logchecker"}}, "state": "MERGED", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2020-02-12T20:29:20.211848+00:00"}, "pull_request": {"type": "pullrequest", "id": 399, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/399.json"}, "html": {"href": "#!/osrf/subt/pull-requests/399"}}, "title": "Add log_checker utility"}}, {"approval": {"date": "2020-02-12T20:29:12.108885+00:00", "pullrequest": {"type": "pullrequest", "id": 399, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/399.json"}, "html": {"href": "#!/osrf/subt/pull-requests/399"}}, "title": "Add log_checker utility"}, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, "pull_request": {"type": "pullrequest", "id": 399, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/399.json"}, "html": {"href": "#!/osrf/subt/pull-requests/399"}}, "title": "Add log_checker utility"}}, {"update": {"description": "This is an utility for running some checks over a SubT log file. Right now, it can be used for checking if any object is below a certain height.\r\n\r\nHow do I use it?\r\n\r\n1. Compile and run SubT to generate a log file.\r\n2. Run the log checker. Here\u2019s an example:\r\n\r\n```\r\n./install/lib/subt_ign/log_checker --file=/tmp/ign/logs/state.tlog --topic=/world/urban_circuit_practice_01/dynamic_pose/info --minz=0\r\n```\r\n\r\nMake sure to update the path to your log file, the world name in your topic, and the minimum Z value.\r\n\r\n1. As a human, you can see the verbose output generated by the program. E.g.:\r\n\r\n```\r\n******************************\r\nConfiguration:\r\n  Log file: [/tmp/ign/logs/state.tlog]\r\n  Topic name: [/world/urban_circuit_practice_01/dynamic_pose/info]\r\n  Minimum Z: [0]\r\nOutput report:\r\n  Minimum Z check: [true]\r\n******************************\r\n```\r\n\r\nProgrammatically, you can also check the exit code of the program:\r\n\r\n```\r\necho $?\r\n0\r\n```\r\n\r\nwhere the exit code means:\r\n\r\n`0`: All checks have passed.\r\n\r\n`1`: The checker is not correctly initialized. E.g.: Incorrect path or topic, missing minZ argument.\r\n\r\n`2`: Unable to playback the log file. Unlikely unless there\u2019s some internal error in the player.\r\n\r\n`3`: At least one check hasn\u2019t passed.", "title": "Add log_checker utility", "destination": {"commit": {"hash": "fcb68f83effb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/fcb68f83effb.json"}, "html": {"href": "#!/osrf/subt/commits/fcb68f83effb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "urban_circuit"}}, "reason": "", "source": {"commit": {"hash": "63b80926cc53", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/63b80926cc53.json"}, "html": {"href": "#!/osrf/subt/commits/63b80926cc53"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "logchecker"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2020-02-12T20:28:01.536588+00:00"}, "pull_request": {"type": "pullrequest", "id": 399, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/399.json"}, "html": {"href": "#!/osrf/subt/pull-requests/399"}}, "title": "Add log_checker utility"}}, {"update": {"description": "This is an utility for running some checks over a SubT log file. Right now, it can be used for checking if any object is below a certain height.\r\n\r\nHow do I use it?\r\n\r\n1. Compile and run SubT to generate a log file.\r\n2. Run the log checker. Here\u2019s an example:\r\n\r\n```\r\n./install/lib/subt_ign/log_checker --file=/tmp/ign/logs/state.tlog --topic=/world/urban_circuit_practice_01/dynamic_pose/info --minz=0\r\n```\r\n\r\nMake sure to update the path to your log file, the world name in your topic, and the minimum Z value.\r\n\r\n1. As a human, you can see the verbose output generated by the program. E.g.:\r\n\r\n```\r\n******************************\r\nConfiguration:\r\n  Log file: [/tmp/ign/logs/state.tlog]\r\n  Topic name: [/world/urban_circuit_practice_01/dynamic_pose/info]\r\n  Minimum Z: [0]\r\nOutput report:\r\n  Minimum Z check: [true]\r\n******************************\r\n```\r\n\r\nProgrammatically, you can also check the exit code of the program:\r\n\r\n```\r\necho $?\r\n0\r\n```\r\n\r\nwhere the exit code means:\r\n\r\n`0`: All checks have passed.\r\n\r\n`1`: The checker is not correctly initialized. E.g.: Incorrect path or topic, missing minZ argument.\r\n\r\n`2`: Unable to playback the log file. Unlikely unless there\u2019s some internal error in the player.\r\n\r\n`3`: At least one check hasn\u2019t passed.", "title": "(DO NOT MERGE) Add log_checker utility", "destination": {"commit": {"hash": "13bee13aa06c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/13bee13aa06c.json"}, "html": {"href": "#!/osrf/subt/commits/13bee13aa06c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "urban_circuit"}}, "reason": "", "source": {"commit": {"hash": "63b80926cc53", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/63b80926cc53.json"}, "html": {"href": "#!/osrf/subt/commits/63b80926cc53"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "logchecker"}}, "state": "OPEN", "author": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "date": "2020-01-16T22:57:59.080944+00:00"}, "pull_request": {"type": "pullrequest", "id": 399, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/399.json"}, "html": {"href": "#!/osrf/subt/pull-requests/399"}}, "title": "Add log_checker utility"}}, {"update": {"description": "This is an utility for running some checks over a SubT log file. Right now, it can be used for checking if any object is below a certain height.\r\n\r\nHow do I use it?\r\n\r\n1. Compile and run SubT to generate a log file.\r\n2. Run the log checker. Here\u2019s an example:\r\n\r\n```\r\n./install/lib/subt_ign/log_checker --file=/tmp/ign/logs/state.tlog --topic=/world/urban_circuit_practice_01/dynamic_pose/info --minz=0\r\n```\r\n\r\nMake sure to update the path to your log file, the world name in your topic, and the minimum Z value.\r\n\r\n1. As a human, you can see the verbose output generated by the program. E.g.:\r\n\r\n```\r\n******************************\r\nConfiguration:\r\n  Log file: [/tmp/ign/logs/state.tlog]\r\n  Topic name: [/world/urban_circuit_practice_01/dynamic_pose/info]\r\n  Minimum Z: [0]\r\nOutput report:\r\n  Minimum Z check: [true]\r\n******************************\r\n```\r\n\r\nProgrammatically, you can also check the exit code of the program:\r\n\r\n```\r\necho $?\r\n0\r\n```\r\n\r\nwhere the exit code means:\r\n\r\n`0`: All checks have passed.\r\n\r\n`1`: The checker is not correctly initialized. E.g.: Incorrect path or topic, missing minZ argument.\r\n\r\n`2`: Unable to playback the log file. Unlikely unless there\u2019s some internal error in the player.\r\n\r\n`3`: At least one check hasn\u2019t passed.", "title": "Add log_checker utility", "destination": {"commit": {"hash": "13bee13aa06c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/13bee13aa06c.json"}, "html": {"href": "#!/osrf/subt/commits/13bee13aa06c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "urban_circuit"}}, "reason": "", "source": {"commit": {"hash": "63b80926cc53", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/63b80926cc53.json"}, "html": {"href": "#!/osrf/subt/commits/63b80926cc53"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "logchecker"}}, "state": "OPEN", "author": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "date": "2020-01-16T22:44:17.634659+00:00"}, "pull_request": {"type": "pullrequest", "id": 399, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/399.json"}, "html": {"href": "#!/osrf/subt/pull-requests/399"}}, "title": "Add log_checker utility"}}, {"update": {"description": "This is an utility for running some checks over a SubT log file. Right now, it can be used for checking if any object is below a certain height.\r\n\r\nHow do I use it?\r\n\r\n1. Compile and run SubT to generate a log file.\r\n2. Run the log checker. Here\u2019s an example:\r\n\r\n```\r\n./install/lib/subt_ign/log_checker --file=/tmp/ign/logs/state.tlog --topic=/world/urban_circuit_practice_01/dynamic_pose/info --minz=0\r\n```\r\n\r\nMake sure to update the path to your log file, the world name in your topic, and the minimum Z value.\r\n\r\n1. As a human, you can see the verbose output generated by the program. E.g.:\r\n\r\n```\r\n******************************\r\nConfiguration:\r\n  Log file: [/tmp/ign/logs/state.tlog]\r\n  Topic name: [/world/urban_circuit_practice_01/dynamic_pose/info]\r\n  Minimum Z: [0]\r\nOutput report:\r\n  Minimum Z check: [true]\r\n******************************\r\n```\r\n\r\nProgrammatically, you can also check the exit code of the program:\r\n\r\n```\r\necho $?\r\n0\r\n```\r\n\r\nwhere the exit code means:\r\n\r\n`0`: All checks have passed.\r\n\r\n`1`: The checker is not correctly initialized. E.g.: Incorrect path or topic, missing minZ argument.\r\n\r\n`2`: Unable to playback the log file. Unlikely unless there\u2019s some internal error in the player.\r\n\r\n`3`: At least one check hasn\u2019t passed.", "title": "Add log_checker utility", "destination": {"commit": {"hash": "13bee13aa06c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/13bee13aa06c.json"}, "html": {"href": "#!/osrf/subt/commits/13bee13aa06c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "urban_circuit"}}, "reason": "", "source": {"commit": {"hash": "63b80926cc53", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/63b80926cc53.json"}, "html": {"href": "#!/osrf/subt/commits/63b80926cc53"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "logchecker"}}, "state": "OPEN", "author": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "date": "2020-01-16T22:43:58.284509+00:00"}, "pull_request": {"type": "pullrequest", "id": 399, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/399.json"}, "html": {"href": "#!/osrf/subt/pull-requests/399"}}, "title": "Add log_checker utility"}}, {"update": {"description": "This is an utility for running some checks over a SubT log file. Right now, it can be used for checking if any object is below a certain height.\r\n\r\nHow do I use it?\r\n\r\n1. Compile and run SubT to generate a log file.\r\n2. Run the log checker. Here\u2019s an example:\r\n\r\n```\r\n./install/lib/subt_ign/log_checker --file=/tmp/ign/logs/state.tlog --topic=/world/urban_circuit_practice_01/dynamic_pose/info --minz=0\r\n```\r\n\r\nMake sure to update the path to your log file, the world name in your topic, and the minimum Z value.\r\n\r\n1. As a human, you can see the verbose output generated by the program. E.g.:\r\n\r\n```\r\n******************************\r\nConfiguration:\r\n  Log file: [/tmp/ign/logs/state.tlog]\r\n  Topic name: [/world/urban_circuit_practice_01/dynamic_pose/info]\r\n  Minimum Z: [0]\r\nOutput report:\r\n  Minimum Z check: [true]\r\n******************************\r\n```\r\n\r\nProgrammatically, you can also check the exit code of the program:\r\n\r\n```\r\necho $?\r\n0\r\n```\r\n\r\nwhere the exit code means:\r\n\r\n`0`: All checks have passed.\r\n\r\n`1`: The checker is not correctly initialized. E.g.: Incorrect path or topic, missing minZ argument.\r\n\r\n`2`: Unable to playback the log file. Unlikely unless there\u2019s some internal error in the player.\r\n\r\n`3`: At least one check hasn\u2019t passed.", "title": "Add log_checker utility", "destination": {"commit": {"hash": "13bee13aa06c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/13bee13aa06c.json"}, "html": {"href": "#!/osrf/subt/commits/13bee13aa06c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "urban_circuit"}}, "reason": "", "source": {"commit": {"hash": "63b80926cc53", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/63b80926cc53.json"}, "html": {"href": "#!/osrf/subt/commits/63b80926cc53"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "logchecker"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2020-01-16T22:25:46.852434+00:00"}, "pull_request": {"type": "pullrequest", "id": 399, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/399.json"}, "html": {"href": "#!/osrf/subt/pull-requests/399"}}, "title": "Add log_checker utility"}}, {"update": {"description": "This is an utility for running some checks over a SubT log file. Right now, it can be used for checking if any object is below a certain height.\r\n\r\nHow do I use it?\r\n\r\n1. Compile and run SubT to generate a log file.\r\n2. Run the log checker. Here\u2019s an example:\r\n\r\n```\r\n./install/lib/subt_ign/log_checker --file=/tmp/ign/logs/state.tlog --topic=/world/urban_circuit_practice_01/dynamic_pose/info --minz=0\r\n```\r\n\r\nMake sure to update the path to your log file, the world name in your topic, and the minimum Z value.\r\n\r\n1. As a human, you can see the verbose output generated by the program. E.g.:\r\n\r\n```\r\n******************************\r\nConfiguration:\r\n  Log file: [/tmp/ign/logs/state.tlog]\r\n  Topic name: [/world/urban_circuit_practice_01/dynamic_pose/info]\r\n  Minimum Z: [0]\r\nOutput report:\r\n  Minimum Z check: [true]\r\n******************************\r\n```\r\n\r\nProgrammatically, you can also check the exit code of the program:\r\n\r\n```\r\necho $?\r\n0\r\n```\r\n\r\nwhere the exit code means:\r\n\r\n`0`: All checks have passed.\r\n\r\n`1`: The checker is not correctly initialized. E.g.: Incorrect path or topic, missing minZ argument.\r\n\r\n`2`: Unable to playback the log file. Unlikely unless there\u2019s some internal error in the player.\r\n\r\n`3`: At least one check hasn\u2019t passed.", "title": "Add log_checker utility", "destination": {"commit": {"hash": "13bee13aa06c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/13bee13aa06c.json"}, "html": {"href": "#!/osrf/subt/commits/13bee13aa06c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "urban_circuit"}}, "reason": "", "source": {"commit": {"hash": "576177d47c83", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/576177d47c83.json"}, "html": {"href": "#!/osrf/subt/commits/576177d47c83"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "logchecker"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2020-01-16T22:24:31.020661+00:00"}, "pull_request": {"type": "pullrequest", "id": 399, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/399.json"}, "html": {"href": "#!/osrf/subt/pull-requests/399"}}, "title": "Add log_checker utility"}}, {"update": {"description": "This is an utility for running some checks over a SubT log file. Right now, it can be used for checking if any object is below a certain height.\r\n\r\nHow do I use it?\r\n\r\n1. Compile and run SubT to generate a log file.\r\n2. Run the log checker. Here\u2019s an example:\r\n\r\n```\r\n./install/lib/subt_ign/log_checker --file=/tmp/ign/logs/state.tlog --topic=/world/urban_circuit_practice_01/dynamic_pose/info --minz=0\r\n```\r\n\r\nMake sure to update the path to your log file, the world name in your topic, and the minimum Z value.\r\n\r\n1. As a human, you can see the verbose output generated by the program. E.g.:\r\n\r\n```\r\n******************************\r\nConfiguration:\r\n  Log file: [/tmp/ign/logs/state.tlog]\r\n  Topic name: [/world/urban_circuit_practice_01/dynamic_pose/info]\r\n  Minimum Z: [0]\r\nOutput report:\r\n  Minimum Z check: [true]\r\n******************************\r\n```\r\n\r\nProgrammatically, you can also check the exit code of the program:\r\n\r\n```\r\necho $?\r\n0\r\n```\r\n\r\nwhere the exit code means:\r\n\r\n`0`: All checks have passed.\r\n\r\n`1`: The checker is not correctly initialized. E.g.: Incorrect path or topic, missing minZ argument.\r\n\r\n`2`: Unable to playback the log file. Unlikely unless there\u2019s some internal error in the player.\r\n\r\n`3`: At least one check hasn\u2019t passed.", "title": "Add log_checker utility", "destination": {"commit": {"hash": "13bee13aa06c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/13bee13aa06c.json"}, "html": {"href": "#!/osrf/subt/commits/13bee13aa06c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "urban_circuit"}}, "reason": "", "source": {"commit": {"hash": "576177d47c83", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/576177d47c83.json"}, "html": {"href": "#!/osrf/subt/commits/576177d47c83"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "logchecker"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2020-01-16T22:24:30.984841+00:00"}, "pull_request": {"type": "pullrequest", "id": 399, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/399.json"}, "html": {"href": "#!/osrf/subt/pull-requests/399"}}, "title": "Add log_checker utility"}}, {"update": {"description": "This is an utility for running some checks over a SubT log file. Right now, it can be used for checking if any object is below a certain height.\r\n\r\nHow do I use it?\r\n\r\n1. Compile and run SubT to generate a log file.\r\n2. Run the log checker. Here\u2019s an example:\r\n\r\n```\r\n./install/lib/subt_ign/log_checker --file=/tmp/ign/logs/state.tlog --topic=/world/urban_circuit_practice_01/dynamic_pose/info --minz=0\r\n```\r\n\r\n   Make sure to update the path to your log file, the world name in your topic, and the minimum Z value. \r\n\r\n  3. As a human, you can see the verbose output generated by the program. E.g.:\r\n\r\n```\r\n******************************\r\nConfiguration:\r\n  Log file: [/tmp/ign/logs/state.tlog]\r\n  Topic name: [/world/urban_circuit_practice_01/dynamic_pose/info]\r\n  Minimum Z: [0]\r\nOutput report:\r\n  Minimum Z check: [true]\r\n******************************\r\n```\r\n\r\nProgrammatically, you can also check the exit code of the program:\r\n\r\n```\r\necho $?\r\n0\r\n```\r\n\r\nwhere the exit code means:\r\n\r\n`0`: All checks have passed.\r\n\r\n`1`: The checker is not correctly initialized. E.g.: Incorrect path or topic, missing minZ argument.\r\n\r\n`2`: Unable to playback the log file. Unlikely unless there\u2019s some internal error in the player.\r\n\r\n`3`: At least one check hasn\u2019t passed.", "title": "Add log_checker utility", "destination": {"commit": {"hash": "287b0d89556f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/287b0d89556f.json"}, "html": {"href": "#!/osrf/subt/commits/287b0d89556f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "urban_circuit"}}, "reason": "", "source": {"commit": {"hash": "576177d47c83", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/576177d47c83.json"}, "html": {"href": "#!/osrf/subt/commits/576177d47c83"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "logchecker"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2020-01-16T22:24:11.601029+00:00"}, "pull_request": {"type": "pullrequest", "id": 399, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/399.json"}, "html": {"href": "#!/osrf/subt/pull-requests/399"}}, "title": "Add log_checker utility"}}, {"update": {"description": "This is an utility for running some checks over a SubT log file. Right now, it can be used for checking if any object is below a certain height.\r\n\r\nHow do I use it?\r\n\r\n1. Compile and run SubT to generate a log file.\r\n2. Run the log checker. Here\u2019s an example:\r\n\r\n```\r\n./install/lib/subt_ign/log_checker --file=/tmp/ign/logs/state.tlog --topic=/world/urban_circuit_practice_01/dynamic_pose/info --minz=0\r\n```\r\n\r\n   Make sure to update the path to your log file, the world name in your topic, and the minimum Z value. \r\n\r\n  3. As a human, you can see the verbose output generated by the program. E.g.:\r\n\r\n```\r\n******************************\r\nConfiguration:\r\n  Log file: [/tmp/ign/logs/state.tlog]\r\n  Topic name: [/world/urban_circuit_practice_01/dynamic_pose/info]\r\n  Minimum Z: [0]\r\nOutput report:\r\n  Minimum Z check: [true]\r\n******************************\r\n```\r\n\r\nProgrammatically, you can also check the exit code of the program:\r\n\r\n```\r\necho $?\r\n0\r\n```\r\n\r\nwhere the exit code means:\r\n\r\n`0`: All checks have passed.\r\n\r\n`1`: The checker is not correctly initialized. E.g.: Incorrect path or topic, missing minZ argument.\r\n\r\n`2`: Unable to playback the log file. Unlikely unless there\u2019s some internal error in the player.\r\n\r\n`3`: At least one check hasn\u2019t passed.", "title": "Add log_checker utility", "destination": {"commit": {"hash": "287b0d89556f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/287b0d89556f.json"}, "html": {"href": "#!/osrf/subt/commits/287b0d89556f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "urban_circuit"}}, "reason": "", "source": {"commit": {"hash": "576177d47c83", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/576177d47c83.json"}, "html": {"href": "#!/osrf/subt/commits/576177d47c83"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "logchecker"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2020-01-16T22:24:11.559621+00:00"}, "pull_request": {"type": "pullrequest", "id": 399, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/399.json"}, "html": {"href": "#!/osrf/subt/pull-requests/399"}}, "title": "Add log_checker utility"}}]}