{"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/241/comments/111439109.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/diff/osrf/subt:3697b6b5ea38..3ad7722f785f?path=subt_ign%2Ftest%2Fscore.cc"}, "html": {"href": "#!/osrf/subt/pull-requests/241/_/diff#comment-111439109"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 241, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/241.json"}, "html": {"href": "#!/osrf/subt/pull-requests/241"}}, "title": "Do not penalize repeated artifact reports"}, "content": {"raw": "to ensure that we are properly encoding floating-point values, do you mind adding `1e-3` instead of `1`?\n\n~~~\ndiff -r 3697b6b5ea38 subt_ign/test/score.cc\n--- a/subt_ign/test/score.cc    Tue Jul 30 17:52:52 2019 -0700\n+++ b/subt_ign/test/score.cc    Wed Jul 31 10:25:34 2019 -0700\n@@ -245,7 +245,7 @@\n     for (auto i = 0u; i < 2u; ++i)\n     {\n       this->ReportArtifact(type, pose);\n-      pose.mutable_position()->set_x(pose.position().x() + 1);\n+      pose.mutable_position()->set_x(pose.position().x() + 1e-3);\n       {\n         using namespace std::chrono_literals;\n         std::this_thread::sleep_for(std::chrono::milliseconds(200ms));\n~~~\n\nI've tested with this change, and it still works", "markup": "markdown", "html": "<p>to ensure that we are properly encoding floating-point values, do you mind adding <code>1e-3</code> instead of <code>1</code>?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 3697b6b5ea38 subt_ign/test/score.cc</span>\n<span class=\"gd\">--- a/subt_ign/test/score.cc    Tue Jul 30 17:52:52 2019 -0700</span>\n<span class=\"gi\">+++ b/subt_ign/test/score.cc    Wed Jul 31 10:25:34 2019 -0700</span>\n<span class=\"gu\">@@ -245,7 +245,7 @@</span>\n     for (auto i = 0u; i &lt; 2u; ++i)\n     {\n       this-&gt;ReportArtifact(type, pose);\n<span class=\"gd\">-      pose.mutable_position()-&gt;set_x(pose.position().x() + 1);</span>\n<span class=\"gi\">+      pose.mutable_position()-&gt;set_x(pose.position().x() + 1e-3);</span>\n       {\n         using namespace std::chrono_literals;\n         std::this_thread::sleep_for(std::chrono::milliseconds(200ms));\n</pre></div>\n\n\n<p>I've tested with this change, and it still works</p>", "type": "rendered"}, "created_on": "2019-07-31T17:26:57.086782+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 248, "from": null, "outdated": true, "path": "subt_ign/test/score.cc"}, "updated_on": "2019-07-31T17:26:57.093983+00:00", "type": "pullrequest_comment", "id": 111439109}