{"rendered": {"description": {"raw": "See `subt-communication/README.md` for more details regarding this refactor of the existing virtual communication system for SUBT. It involves four new packages that replace and extend functionality that was previously in the `subt_gazebo` package. The `subt_gazebo` package continues to hold the Gazebo plugin that instantiates communication simulation:\r\n\r\n* `subt_rf_interface`: Provides function signature \\(and simple implementation\\) for computing pathloss from transmitter/receiver locations.\r\n* `subt_communication_model`: Provides function signature and implementation for evaluating packet communication success based on evaluation of a path loss function, modulation-based models of bit-error rate, and bitrate limitations of the configured radio.\r\n* `subt_communication_broker`: Centralized node that handles communication requests via distributed client API. Is instantiated with function handles for \\(1\\) a pathloss function, \\(2\\) an `attempt_send` function, i.e., the communication model, and \\(3\\) an `update_pose` function that provides a mechanism to query the simulator for the pose of an agent by name.\r\n* `subt_gazebo_los_model`: Pathloss function instantiation based on approximate visibility via a pre-computed lookup table. The so-called _visibility cost_ is used to affect the fading exponent for the generic range-based log-normal fading model. This means communication while in line-of-sight \\(LOS\\) will behave according to standard fading models and as LOS is lost, attenuation will happen much more rapidly.\r\n\r\n**Note**: After this PR is merged, some validation/model-fitting should be performed along with testing in simulation to choose good parameters \\(fading exponent, noise floor, link capacity, mapping visibility cost to fading exponent inflation\\) that match somewhat realistic devices.\r\n\r\n**Some other changes along the way include**:\r\n\r\n* Add service to subt\\_example for testing comms\r\n\r\n    _Service will create pair of topics for externally analyzing communication peformance \\(bitrate acheieved, latency, etc\\)_\r\n\r\n\r\n* Add subt\\_comms\\_test\r\n\r\n    _Package to store communication system testing nodes and scripts._\r\n\r\n\r\n* Fix subt\\_example\\_node comms LED blinking\r\n\r\n    _LED blinking was limiting communication rate._\r\n\r\n\r\n* Improved visibility visualization\r\n\r\n    * _Improve speed of rendering using POINTS marker type_\r\n    * _color-code points based on computed cost_", "markup": "markdown", "html": "<p>See <code>subt-communication/README.md</code> for more details regarding this refactor of the existing virtual communication system for SUBT. It involves four new packages that replace and extend functionality that was previously in the <code>subt_gazebo</code> package. The <code>subt_gazebo</code> package continues to hold the Gazebo plugin that instantiates communication simulation:</p>\n<ul>\n<li><code>subt_rf_interface</code>: Provides function signature (and simple implementation) for computing pathloss from transmitter/receiver locations.</li>\n<li><code>subt_communication_model</code>: Provides function signature and implementation for evaluating packet communication success based on evaluation of a path loss function, modulation-based models of bit-error rate, and bitrate limitations of the configured radio.</li>\n<li><code>subt_communication_broker</code>: Centralized node that handles communication requests via distributed client API. Is instantiated with function handles for (1) a pathloss function, (2) an <code>attempt_send</code> function, i.e., the communication model, and (3) an <code>update_pose</code> function that provides a mechanism to query the simulator for the pose of an agent by name.</li>\n<li><code>subt_gazebo_los_model</code>: Pathloss function instantiation based on approximate visibility via a pre-computed lookup table. The so-called <em>visibility cost</em> is used to affect the fading exponent for the generic range-based log-normal fading model. This means communication while in line-of-sight (LOS) will behave according to standard fading models and as LOS is lost, attenuation will happen much more rapidly.</li>\n</ul>\n<p><strong>Note</strong>: After this PR is merged, some validation/model-fitting should be performed along with testing in simulation to choose good parameters (fading exponent, noise floor, link capacity, mapping visibility cost to fading exponent inflation) that match somewhat realistic devices.</p>\n<p><strong>Some other changes along the way include</strong>:</p>\n<ul>\n<li>\n<p>Add service to subt_example for testing comms</p>\n<p><em>Service will create pair of topics for externally analyzing communication peformance (bitrate acheieved, latency, etc)</em></p>\n</li>\n<li>\n<p>Add subt_comms_test</p>\n<p><em>Package to store communication system testing nodes and scripts.</em></p>\n</li>\n<li>\n<p>Fix subt_example_node comms LED blinking</p>\n<p><em>LED blinking was limiting communication rate.</em></p>\n</li>\n<li>\n<p>Improved visibility visualization</p>\n<ul>\n<li><em>Improve speed of rendering using POINTS marker type</em></li>\n<li><em>color-code points based on computed cost</em></li>\n</ul>\n</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Comms refactor", "markup": "markdown", "html": "<p>Comms refactor</p>", "type": "rendered"}}, "type": "pullrequest", "description": "See `subt-communication/README.md` for more details regarding this refactor of the existing virtual communication system for SUBT. It involves four new packages that replace and extend functionality that was previously in the `subt_gazebo` package. The `subt_gazebo` package continues to hold the Gazebo plugin that instantiates communication simulation:\r\n\r\n* `subt_rf_interface`: Provides function signature \\(and simple implementation\\) for computing pathloss from transmitter/receiver locations.\r\n* `subt_communication_model`: Provides function signature and implementation for evaluating packet communication success based on evaluation of a path loss function, modulation-based models of bit-error rate, and bitrate limitations of the configured radio.\r\n* `subt_communication_broker`: Centralized node that handles communication requests via distributed client API. Is instantiated with function handles for \\(1\\) a pathloss function, \\(2\\) an `attempt_send` function, i.e., the communication model, and \\(3\\) an `update_pose` function that provides a mechanism to query the simulator for the pose of an agent by name.\r\n* `subt_gazebo_los_model`: Pathloss function instantiation based on approximate visibility via a pre-computed lookup table. The so-called _visibility cost_ is used to affect the fading exponent for the generic range-based log-normal fading model. This means communication while in line-of-sight \\(LOS\\) will behave according to standard fading models and as LOS is lost, attenuation will happen much more rapidly.\r\n\r\n**Note**: After this PR is merged, some validation/model-fitting should be performed along with testing in simulation to choose good parameters \\(fading exponent, noise floor, link capacity, mapping visibility cost to fading exponent inflation\\) that match somewhat realistic devices.\r\n\r\n**Some other changes along the way include**:\r\n\r\n* Add service to subt\\_example for testing comms\r\n\r\n    _Service will create pair of topics for externally analyzing communication peformance \\(bitrate acheieved, latency, etc\\)_\r\n\r\n\r\n* Add subt\\_comms\\_test\r\n\r\n    _Package to store communication system testing nodes and scripts._\r\n\r\n\r\n* Fix subt\\_example\\_node comms LED blinking\r\n\r\n    _LED blinking was limiting communication rate._\r\n\r\n\r\n* Improved visibility visualization\r\n\r\n    * _Improve speed of rendering using POINTS marker type_\r\n    * _color-code points based on computed cost_", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/pullrequests/104/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/diffstat/osrf/subt:1f0ee105b0f1%0De84db6e26fb5?from_pullrequest_id=104"}, "commits": {"href": "data/repositories/osrf/subt/pullrequests/104/commits.json"}, "self": {"href": "data/repositories/osrf/subt/pullrequests/104.json"}, "comments": {"href": "data/repositories/osrf/subt/pullrequests/104/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/pullrequests/104/merge"}, "html": {"href": "#!/osrf/subt/pull-requests/104"}, "activity": {"href": "data/repositories/osrf/subt/pullrequests/104/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/diff/osrf/subt:1f0ee105b0f1%0De84db6e26fb5?from_pullrequest_id=104"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/pullrequests/104/approve"}, "statuses": {"href": "data/repositories/osrf/subt/pullrequests/104/statuses_page=1.json"}}, "title": "Comms refactor", "close_source_branch": false, "reviewers": [], "id": 104, "destination": {"commit": {"hash": "e84db6e26fb5", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/e84db6e26fb5.json"}, "html": {"href": "#!/osrf/subt/commits/e84db6e26fb5"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "default"}}, "created_on": "2019-01-09T22:01:23.162598+00:00", "summary": {"raw": "See `subt-communication/README.md` for more details regarding this refactor of the existing virtual communication system for SUBT. It involves four new packages that replace and extend functionality that was previously in the `subt_gazebo` package. The `subt_gazebo` package continues to hold the Gazebo plugin that instantiates communication simulation:\r\n\r\n* `subt_rf_interface`: Provides function signature \\(and simple implementation\\) for computing pathloss from transmitter/receiver locations.\r\n* `subt_communication_model`: Provides function signature and implementation for evaluating packet communication success based on evaluation of a path loss function, modulation-based models of bit-error rate, and bitrate limitations of the configured radio.\r\n* `subt_communication_broker`: Centralized node that handles communication requests via distributed client API. Is instantiated with function handles for \\(1\\) a pathloss function, \\(2\\) an `attempt_send` function, i.e., the communication model, and \\(3\\) an `update_pose` function that provides a mechanism to query the simulator for the pose of an agent by name.\r\n* `subt_gazebo_los_model`: Pathloss function instantiation based on approximate visibility via a pre-computed lookup table. The so-called _visibility cost_ is used to affect the fading exponent for the generic range-based log-normal fading model. This means communication while in line-of-sight \\(LOS\\) will behave according to standard fading models and as LOS is lost, attenuation will happen much more rapidly.\r\n\r\n**Note**: After this PR is merged, some validation/model-fitting should be performed along with testing in simulation to choose good parameters \\(fading exponent, noise floor, link capacity, mapping visibility cost to fading exponent inflation\\) that match somewhat realistic devices.\r\n\r\n**Some other changes along the way include**:\r\n\r\n* Add service to subt\\_example for testing comms\r\n\r\n    _Service will create pair of topics for externally analyzing communication peformance \\(bitrate acheieved, latency, etc\\)_\r\n\r\n\r\n* Add subt\\_comms\\_test\r\n\r\n    _Package to store communication system testing nodes and scripts._\r\n\r\n\r\n* Fix subt\\_example\\_node comms LED blinking\r\n\r\n    _LED blinking was limiting communication rate._\r\n\r\n\r\n* Improved visibility visualization\r\n\r\n    * _Improve speed of rendering using POINTS marker type_\r\n    * _color-code points based on computed cost_", "markup": "markdown", "html": "<p>See <code>subt-communication/README.md</code> for more details regarding this refactor of the existing virtual communication system for SUBT. It involves four new packages that replace and extend functionality that was previously in the <code>subt_gazebo</code> package. The <code>subt_gazebo</code> package continues to hold the Gazebo plugin that instantiates communication simulation:</p>\n<ul>\n<li><code>subt_rf_interface</code>: Provides function signature (and simple implementation) for computing pathloss from transmitter/receiver locations.</li>\n<li><code>subt_communication_model</code>: Provides function signature and implementation for evaluating packet communication success based on evaluation of a path loss function, modulation-based models of bit-error rate, and bitrate limitations of the configured radio.</li>\n<li><code>subt_communication_broker</code>: Centralized node that handles communication requests via distributed client API. Is instantiated with function handles for (1) a pathloss function, (2) an <code>attempt_send</code> function, i.e., the communication model, and (3) an <code>update_pose</code> function that provides a mechanism to query the simulator for the pose of an agent by name.</li>\n<li><code>subt_gazebo_los_model</code>: Pathloss function instantiation based on approximate visibility via a pre-computed lookup table. The so-called <em>visibility cost</em> is used to affect the fading exponent for the generic range-based log-normal fading model. This means communication while in line-of-sight (LOS) will behave according to standard fading models and as LOS is lost, attenuation will happen much more rapidly.</li>\n</ul>\n<p><strong>Note</strong>: After this PR is merged, some validation/model-fitting should be performed along with testing in simulation to choose good parameters (fading exponent, noise floor, link capacity, mapping visibility cost to fading exponent inflation) that match somewhat realistic devices.</p>\n<p><strong>Some other changes along the way include</strong>:</p>\n<ul>\n<li>\n<p>Add service to subt_example for testing comms</p>\n<p><em>Service will create pair of topics for externally analyzing communication peformance (bitrate acheieved, latency, etc)</em></p>\n</li>\n<li>\n<p>Add subt_comms_test</p>\n<p><em>Package to store communication system testing nodes and scripts.</em></p>\n</li>\n<li>\n<p>Fix subt_example_node comms LED blinking</p>\n<p><em>LED blinking was limiting communication rate.</em></p>\n</li>\n<li>\n<p>Improved visibility visualization</p>\n<ul>\n<li><em>Improve speed of rendering using POINTS marker type</em></li>\n<li><em>color-code points based on computed cost</em></li>\n</ul>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "3e233c419fb2", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jonfink-arl/subt/commit/3e233c419fb2"}, "html": {"href": "https://bitbucket.org/jonfink-arl/subt/commits/3e233c419fb2"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jonfink-arl/subt"}, "html": {"href": "https://bitbucket.org/jonfink-arl/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{88b6b7a7-832b-438e-b879-89a4954c4894}ts=c_plus_plus"}}, "type": "repository", "name": "subt", "full_name": "jonfink-arl/subt", "uuid": "{88b6b7a7-832b-438e-b879-89a4954c4894}"}, "branch": {"name": "comms_refactor"}}, "comment_count": 52, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2019-02-18T01:42:12.199174+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jon Fink", "uuid": "{89cf7350-7d3a-4a2e-a6ce-43d49bfe9001}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89cf7350-7d3a-4a2e-a6ce-43d49bfe9001%7D"}, "html": {"href": "https://bitbucket.org/%7B89cf7350-7d3a-4a2e-a6ce-43d49bfe9001%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d3f96b67926116d5c1121e7dc9a1a8f2d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJF-5.png"}}, "nickname": "jonfink-arl", "type": "user", "account_id": "5b90221dfa38ae2c89609691"}}, {"role": "PARTICIPANT", "participated_on": "2019-02-19T17:13:52.301516+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}], "reason": "", "updated_on": "2019-02-19T17:18:00.665947+00:00", "author": {"display_name": "Jon Fink", "uuid": "{89cf7350-7d3a-4a2e-a6ce-43d49bfe9001}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89cf7350-7d3a-4a2e-a6ce-43d49bfe9001%7D"}, "html": {"href": "https://bitbucket.org/%7B89cf7350-7d3a-4a2e-a6ce-43d49bfe9001%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d3f96b67926116d5c1121e7dc9a1a8f2d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJF-5.png"}}, "nickname": "jonfink-arl", "type": "user", "account_id": "5b90221dfa38ae2c89609691"}, "merge_commit": {"hash": "1f0ee105b0f1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/1f0ee105b0f1.json"}, "html": {"href": "#!/osrf/subt/commits/1f0ee105b0f1"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}