{"pagelen": 100, "values": [{"hash": "326bc4a6a0f8b471462799602fbafa4f4972b588", "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "links": {"self": {"href": "data/repositories/osrf/subt/commit/326bc4a6a0f8b471462799602fbafa4f4972b588.json"}, "comments": {"href": "data/repositories/osrf/subt/commit/326bc4a6a0f8b471462799602fbafa4f4972b588/comments_page=1.json"}, "html": {"href": "#!/osrf/subt/commits/326bc4a6a0f8b471462799602fbafa4f4972b588"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/diff/326bc4a6a0f8b471462799602fbafa4f4972b588"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/commit/326bc4a6a0f8b471462799602fbafa4f4972b588/approve"}, "statuses": {"href": "data/repositories/osrf/subt/commit/326bc4a6a0f8b471462799602fbafa4f4972b588/statuses_page=1.json"}}, "author": {"raw": "Nate Koenig <natekoenig@gmail.com>", "type": "author", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, "summary": {"raw": "Merged in comms_deadlock (pull request #273)\n\nFix deadlock between Transport thread and ROS service callbacks\n\nApproved-by: Nate Koenig <natekoenig@gmail.com>", "markup": "markdown", "html": "<p>Merged in comms_deadlock (<a href=\"#!/osrf/subt/pull-requests/273/fix-deadlock-between-transport-thread-and\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #273</a>)</p>\n<p>Fix deadlock between Transport thread and ROS service callbacks</p>\n<p>Approved-by: Nate Koenig <a href=\"mailto:natekoenig@gmail.com\">&#110;&#97;&#116;&#101;&#107;&#111;&#101;&#110;&#105;&#103;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>", "type": "rendered"}, "parents": [{"hash": "310d79b0c84f6d29534ff55410ae92b40cb154c8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/310d79b0c84f6d29534ff55410ae92b40cb154c8.json"}, "html": {"href": "#!/osrf/subt/commits/310d79b0c84f6d29534ff55410ae92b40cb154c8"}}}, {"hash": "721469edddd2441b7622931b58a978aec307e337", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/721469edddd2441b7622931b58a978aec307e337.json"}, "html": {"href": "#!/osrf/subt/commits/721469edddd2441b7622931b58a978aec307e337"}}}], "date": "2019-08-26T19:33:26+00:00", "message": "Merged in comms_deadlock (pull request #273)\n\nFix deadlock between Transport thread and ROS service callbacks\n\nApproved-by: Nate Koenig <natekoenig@gmail.com>", "type": "commit"}, {"hash": "721469edddd2441b7622931b58a978aec307e337", "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "links": {"self": {"href": "data/repositories/osrf/subt/commit/721469edddd2441b7622931b58a978aec307e337.json"}, "comments": {"href": "data/repositories/osrf/subt/commit/721469edddd2441b7622931b58a978aec307e337/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/patch/721469edddd2441b7622931b58a978aec307e337"}, "html": {"href": "#!/osrf/subt/commits/721469edddd2441b7622931b58a978aec307e337"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/diff/721469edddd2441b7622931b58a978aec307e337"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/commit/721469edddd2441b7622931b58a978aec307e337/approve"}, "statuses": {"href": "data/repositories/osrf/subt/commit/721469edddd2441b7622931b58a978aec307e337/statuses_page=1.json"}}, "author": {"raw": "Nate Koenig <natekoenig@gmail.com>", "type": "author", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, "summary": {"raw": "Close branch comms_deadlock", "markup": "markdown", "html": "<p>Close branch comms_deadlock</p>", "type": "rendered"}, "parents": [{"hash": "a97461e7f47719cfdb85e6fbf3aa555b028d3037", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/a97461e7f47719cfdb85e6fbf3aa555b028d3037.json"}, "html": {"href": "#!/osrf/subt/commits/a97461e7f47719cfdb85e6fbf3aa555b028d3037"}}}], "date": "2019-08-26T19:33:26+00:00", "message": "Close branch comms_deadlock", "type": "commit"}, {"hash": "a97461e7f47719cfdb85e6fbf3aa555b028d3037", "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "links": {"self": {"href": "data/repositories/osrf/subt/commit/a97461e7f47719cfdb85e6fbf3aa555b028d3037.json"}, "comments": {"href": "data/repositories/osrf/subt/commit/a97461e7f47719cfdb85e6fbf3aa555b028d3037/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/patch/a97461e7f47719cfdb85e6fbf3aa555b028d3037"}, "html": {"href": "#!/osrf/subt/commits/a97461e7f47719cfdb85e6fbf3aa555b028d3037"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/diff/a97461e7f47719cfdb85e6fbf3aa555b028d3037"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/commit/a97461e7f47719cfdb85e6fbf3aa555b028d3037/approve"}, "statuses": {"href": "data/repositories/osrf/subt/commit/a97461e7f47719cfdb85e6fbf3aa555b028d3037/statuses_page=1.json"}}, "author": {"raw": "Addisu Z. Taddese <addisu@openrobotics.org>", "type": "author", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}}, "summary": {"raw": "Reduce diff", "markup": "markdown", "html": "<p>Reduce diff</p>", "type": "rendered"}, "parents": [{"hash": "4cfae3af427e08c4fdca6b443d13d3df438dc529", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/4cfae3af427e08c4fdca6b443d13d3df438dc529.json"}, "html": {"href": "#!/osrf/subt/commits/4cfae3af427e08c4fdca6b443d13d3df438dc529"}}}], "date": "2019-08-17T21:32:09+00:00", "message": "Reduce diff", "type": "commit"}, {"hash": "4cfae3af427e08c4fdca6b443d13d3df438dc529", "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "links": {"self": {"href": "data/repositories/osrf/subt/commit/4cfae3af427e08c4fdca6b443d13d3df438dc529.json"}, "comments": {"href": "data/repositories/osrf/subt/commit/4cfae3af427e08c4fdca6b443d13d3df438dc529/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/patch/4cfae3af427e08c4fdca6b443d13d3df438dc529"}, "html": {"href": "#!/osrf/subt/commits/4cfae3af427e08c4fdca6b443d13d3df438dc529"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/diff/4cfae3af427e08c4fdca6b443d13d3df438dc529"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/commit/4cfae3af427e08c4fdca6b443d13d3df438dc529/approve"}, "statuses": {"href": "data/repositories/osrf/subt/commit/4cfae3af427e08c4fdca6b443d13d3df438dc529/statuses_page=1.json"}}, "author": {"raw": "Addisu Z. Taddese <addisu@openrobotics.org>", "type": "author", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}}, "summary": {"raw": "Fix deadlock between Transport thread and ROS service callbacks\n\nThis fixes a deadlock that occurs when `SubtRosRelay::OnPoseFromArtifact` is called concurrently with `SubtRosRelay::OnMessage`. Consider two `subt_seed_node`s with robot names X1 and X2. Let's say X2 sends a message to X1. This is a call to `SubtRosRelay::OnSendTo` which sends the request to Transport and returns immediately. In the mean time, let's say X1 calls `SubtRosRelay::OnPoseFromArtifact`. Since X1 is single threaded node, this call is blocking. Now, if it happens that Tranport is ready to send the message from X2 to X1, it will invoke `SubtRosRelay::OnMessage` from a separate thread. This will in turn make a service call to X1 which happens to be blocking on its service call to `SubtRosRelay::OnPoseFromArtifact`.\n\nThe solution I found is to use a lock free data structure to queue up messages when they arrive at `SubtRosRelay::OnMessage` and process them in a separate thread.", "markup": "markdown", "html": "<p>Fix deadlock between Transport thread and ROS service callbacks</p>\n<p>This fixes a deadlock that occurs when <code>SubtRosRelay::OnPoseFromArtifact</code> is called concurrently with <code>SubtRosRelay::OnMessage</code>. Consider two <code>subt_seed_node</code>s with robot names X1 and X2. Let's say X2 sends a message to X1. This is a call to <code>SubtRosRelay::OnSendTo</code> which sends the request to Transport and returns immediately. In the mean time, let's say X1 calls <code>SubtRosRelay::OnPoseFromArtifact</code>. Since X1 is single threaded node, this call is blocking. Now, if it happens that Tranport is ready to send the message from X2 to X1, it will invoke <code>SubtRosRelay::OnMessage</code> from a separate thread. This will in turn make a service call to X1 which happens to be blocking on its service call to <code>SubtRosRelay::OnPoseFromArtifact</code>.</p>\n<p>The solution I found is to use a lock free data structure to queue up messages when they arrive at <code>SubtRosRelay::OnMessage</code> and process them in a separate thread.</p>", "type": "rendered"}, "parents": [{"hash": "310d79b0c84f6d29534ff55410ae92b40cb154c8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/310d79b0c84f6d29534ff55410ae92b40cb154c8.json"}, "html": {"href": "#!/osrf/subt/commits/310d79b0c84f6d29534ff55410ae92b40cb154c8"}}}], "date": "2019-08-17T21:05:43+00:00", "message": "Fix deadlock between Transport thread and ROS service callbacks\n\nThis fixes a deadlock that occurs when `SubtRosRelay::OnPoseFromArtifact` is called concurrently with `SubtRosRelay::OnMessage`. Consider two `subt_seed_node`s with robot names X1 and X2. Let's say X2 sends a message to X1. This is a call to `SubtRosRelay::OnSendTo` which sends the request to Transport and returns immediately. In the mean time, let's say X1 calls `SubtRosRelay::OnPoseFromArtifact`. Since X1 is single threaded node, this call is blocking. Now, if it happens that Tranport is ready to send the message from X2 to X1, it will invoke `SubtRosRelay::OnMessage` from a separate thread. This will in turn make a service call to X1 which happens to be blocking on its service call to `SubtRosRelay::OnPoseFromArtifact`.\n\nThe solution I found is to use a lock free data structure to queue up messages when they arrive at `SubtRosRelay::OnMessage` and process them in a separate thread.", "type": "commit"}], "page": 1}