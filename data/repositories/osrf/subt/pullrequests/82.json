{"rendered": {"description": {"raw": "When the comms model is working in simple mode**\u2122**, all robots are considered neighbors and all messages will be delivered to their destinations.\r\n\r\nThe simple comms model can be enabled via the ROS parameter server \\(_/subt/comms/simple\\_mode_\\).\r\n\r\nFor testing:\r\n\r\n1\\. Edit `subt_gazebo/worlds/tunnel_practice_1.world` and reduce the maximum comms distance to 1 meter:\r\n\r\n    <!-- The SubT comms broker plugin -->\r\n        <plugin name=\"comms_broker_plugin\" filename=\"libCommsBrokerPlugin.so\">\r\n          <comms_model>\r\n            <neighbor_distance_min>0.0</neighbor_distance_min>\r\n            <neighbor_distance_max>1.0</neighbor_distance_max>\r\n            <comms_distance_min>0.0</comms_distance_min>\r\n            <comms_distance_max>1.0</comms_distance_max>\r\n            <comms_drop_probability_min>0.0</comms_drop_probability_min>\r\n            <comms_drop_probability_max>0.0</comms_drop_probability_max>\r\n            <comms_outage_probability>0.0</comms_outage_probability>\r\n            <comms_outage_duration_min>0.0</comms_outage_duration_min>\r\n            <comms_outage_duration_max>10.0</comms_outage_duration_max>\r\n          </comms_model>\r\n        </plugin>\r\n\r\n2\\. Compile and install as usual:\r\n\r\n    catkin_make install\r\n\r\n3\\. Launch the simulation:\r\n\r\n    roslaunch subt_gazebo quickstart.launch\r\n\r\n4\\. Press the left arrows of the joystick and verity that the LEDs aren\u2019t flashing \\(only the LED of the sender robot should flash\\).\r\n\r\n5\\. Enable the simple mode:\r\n\r\n    rosparam set /subt/comms/simple_mode true\r\n\r\n6\\. Repeat the step \\(4\\) and you should observe the LED\u2019s flashing indicating that the destination robot is receiving messages.\r\n\r\n\u200c\r\n\r\nI\u2019ll update the documentation when this PR is merged.", "markup": "markdown", "html": "<p>When the comms model is working in simple mode<strong>\u2122</strong>, all robots are considered neighbors and all messages will be delivered to their destinations.</p>\n<p>The simple comms model can be enabled via the ROS parameter server (<em>/subt/comms/simple_mode</em>).</p>\n<p>For testing:</p>\n<p>1. Edit <code>subt_gazebo/worlds/tunnel_practice_1.world</code> and reduce the maximum comms distance to 1 meter:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c\">&lt;!-- The SubT comms broker plugin --&gt;</span>\n    <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;comms_broker_plugin&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libCommsBrokerPlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;comms_model&gt;</span>\n        <span class=\"nt\">&lt;neighbor_distance_min&gt;</span>0.0<span class=\"nt\">&lt;/neighbor_distance_min&gt;</span>\n        <span class=\"nt\">&lt;neighbor_distance_max&gt;</span>1.0<span class=\"nt\">&lt;/neighbor_distance_max&gt;</span>\n        <span class=\"nt\">&lt;comms_distance_min&gt;</span>0.0<span class=\"nt\">&lt;/comms_distance_min&gt;</span>\n        <span class=\"nt\">&lt;comms_distance_max&gt;</span>1.0<span class=\"nt\">&lt;/comms_distance_max&gt;</span>\n        <span class=\"nt\">&lt;comms_drop_probability_min&gt;</span>0.0<span class=\"nt\">&lt;/comms_drop_probability_min&gt;</span>\n        <span class=\"nt\">&lt;comms_drop_probability_max&gt;</span>0.0<span class=\"nt\">&lt;/comms_drop_probability_max&gt;</span>\n        <span class=\"nt\">&lt;comms_outage_probability&gt;</span>0.0<span class=\"nt\">&lt;/comms_outage_probability&gt;</span>\n        <span class=\"nt\">&lt;comms_outage_duration_min&gt;</span>0.0<span class=\"nt\">&lt;/comms_outage_duration_min&gt;</span>\n        <span class=\"nt\">&lt;comms_outage_duration_max&gt;</span>10.0<span class=\"nt\">&lt;/comms_outage_duration_max&gt;</span>\n      <span class=\"nt\">&lt;/comms_model&gt;</span>\n    <span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>2. Compile and install as usual:</p>\n<div class=\"codehilite\"><pre><span></span>catkin_make install\n</pre></div>\n\n\n<p>3. Launch the simulation:</p>\n<div class=\"codehilite\"><pre><span></span>roslaunch subt_gazebo quickstart.launch\n</pre></div>\n\n\n<p>4. Press the left arrows of the joystick and verity that the LEDs aren\u2019t flashing (only the LED of the sender robot should flash).</p>\n<p>5. Enable the simple mode:</p>\n<div class=\"codehilite\"><pre><span></span>rosparam set /subt/comms/simple_mode true\n</pre></div>\n\n\n<p>6. Repeat the step (4) and you should observe the LED\u2019s flashing indicating that the destination robot is receiving messages.</p>\n<p>\u200c</p>\n<p>I\u2019ll update the documentation when this PR is merged.</p>", "type": "rendered"}, "title": {"raw": "Simple mode comms", "markup": "markdown", "html": "<p>Simple mode comms</p>", "type": "rendered"}}, "type": "pullrequest", "description": "When the comms model is working in simple mode**\u2122**, all robots are considered neighbors and all messages will be delivered to their destinations.\r\n\r\nThe simple comms model can be enabled via the ROS parameter server \\(_/subt/comms/simple\\_mode_\\).\r\n\r\nFor testing:\r\n\r\n1\\. Edit `subt_gazebo/worlds/tunnel_practice_1.world` and reduce the maximum comms distance to 1 meter:\r\n\r\n    <!-- The SubT comms broker plugin -->\r\n        <plugin name=\"comms_broker_plugin\" filename=\"libCommsBrokerPlugin.so\">\r\n          <comms_model>\r\n            <neighbor_distance_min>0.0</neighbor_distance_min>\r\n            <neighbor_distance_max>1.0</neighbor_distance_max>\r\n            <comms_distance_min>0.0</comms_distance_min>\r\n            <comms_distance_max>1.0</comms_distance_max>\r\n            <comms_drop_probability_min>0.0</comms_drop_probability_min>\r\n            <comms_drop_probability_max>0.0</comms_drop_probability_max>\r\n            <comms_outage_probability>0.0</comms_outage_probability>\r\n            <comms_outage_duration_min>0.0</comms_outage_duration_min>\r\n            <comms_outage_duration_max>10.0</comms_outage_duration_max>\r\n          </comms_model>\r\n        </plugin>\r\n\r\n2\\. Compile and install as usual:\r\n\r\n    catkin_make install\r\n\r\n3\\. Launch the simulation:\r\n\r\n    roslaunch subt_gazebo quickstart.launch\r\n\r\n4\\. Press the left arrows of the joystick and verity that the LEDs aren\u2019t flashing \\(only the LED of the sender robot should flash\\).\r\n\r\n5\\. Enable the simple mode:\r\n\r\n    rosparam set /subt/comms/simple_mode true\r\n\r\n6\\. Repeat the step \\(4\\) and you should observe the LED\u2019s flashing indicating that the destination robot is receiving messages.\r\n\r\n\u200c\r\n\r\nI\u2019ll update the documentation when this PR is merged.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/pullrequests/82/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/diffstat/osrf/subt:06d66b7df267%0D9b678b3dac0f?from_pullrequest_id=82"}, "commits": {"href": "data/repositories/osrf/subt/pullrequests/82/commits.json"}, "self": {"href": "data/repositories/osrf/subt/pullrequests/82.json"}, "comments": {"href": "data/repositories/osrf/subt/pullrequests/82/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/pullrequests/82/merge"}, "html": {"href": "#!/osrf/subt/pull-requests/82"}, "activity": {"href": "data/repositories/osrf/subt/pullrequests/82/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/diff/osrf/subt:06d66b7df267%0D9b678b3dac0f?from_pullrequest_id=82"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/pullrequests/82/approve"}, "statuses": {"href": "data/repositories/osrf/subt/pullrequests/82/statuses_page=1.json"}}, "title": "Simple mode comms", "close_source_branch": true, "reviewers": [], "id": 82, "destination": {"commit": {"hash": "9b678b3dac0f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/9b678b3dac0f.json"}, "html": {"href": "#!/osrf/subt/commits/9b678b3dac0f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "default"}}, "created_on": "2018-10-19T19:07:01.410857+00:00", "summary": {"raw": "When the comms model is working in simple mode**\u2122**, all robots are considered neighbors and all messages will be delivered to their destinations.\r\n\r\nThe simple comms model can be enabled via the ROS parameter server \\(_/subt/comms/simple\\_mode_\\).\r\n\r\nFor testing:\r\n\r\n1\\. Edit `subt_gazebo/worlds/tunnel_practice_1.world` and reduce the maximum comms distance to 1 meter:\r\n\r\n    <!-- The SubT comms broker plugin -->\r\n        <plugin name=\"comms_broker_plugin\" filename=\"libCommsBrokerPlugin.so\">\r\n          <comms_model>\r\n            <neighbor_distance_min>0.0</neighbor_distance_min>\r\n            <neighbor_distance_max>1.0</neighbor_distance_max>\r\n            <comms_distance_min>0.0</comms_distance_min>\r\n            <comms_distance_max>1.0</comms_distance_max>\r\n            <comms_drop_probability_min>0.0</comms_drop_probability_min>\r\n            <comms_drop_probability_max>0.0</comms_drop_probability_max>\r\n            <comms_outage_probability>0.0</comms_outage_probability>\r\n            <comms_outage_duration_min>0.0</comms_outage_duration_min>\r\n            <comms_outage_duration_max>10.0</comms_outage_duration_max>\r\n          </comms_model>\r\n        </plugin>\r\n\r\n2\\. Compile and install as usual:\r\n\r\n    catkin_make install\r\n\r\n3\\. Launch the simulation:\r\n\r\n    roslaunch subt_gazebo quickstart.launch\r\n\r\n4\\. Press the left arrows of the joystick and verity that the LEDs aren\u2019t flashing \\(only the LED of the sender robot should flash\\).\r\n\r\n5\\. Enable the simple mode:\r\n\r\n    rosparam set /subt/comms/simple_mode true\r\n\r\n6\\. Repeat the step \\(4\\) and you should observe the LED\u2019s flashing indicating that the destination robot is receiving messages.\r\n\r\n\u200c\r\n\r\nI\u2019ll update the documentation when this PR is merged.", "markup": "markdown", "html": "<p>When the comms model is working in simple mode<strong>\u2122</strong>, all robots are considered neighbors and all messages will be delivered to their destinations.</p>\n<p>The simple comms model can be enabled via the ROS parameter server (<em>/subt/comms/simple_mode</em>).</p>\n<p>For testing:</p>\n<p>1. Edit <code>subt_gazebo/worlds/tunnel_practice_1.world</code> and reduce the maximum comms distance to 1 meter:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c\">&lt;!-- The SubT comms broker plugin --&gt;</span>\n    <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;comms_broker_plugin&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libCommsBrokerPlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;comms_model&gt;</span>\n        <span class=\"nt\">&lt;neighbor_distance_min&gt;</span>0.0<span class=\"nt\">&lt;/neighbor_distance_min&gt;</span>\n        <span class=\"nt\">&lt;neighbor_distance_max&gt;</span>1.0<span class=\"nt\">&lt;/neighbor_distance_max&gt;</span>\n        <span class=\"nt\">&lt;comms_distance_min&gt;</span>0.0<span class=\"nt\">&lt;/comms_distance_min&gt;</span>\n        <span class=\"nt\">&lt;comms_distance_max&gt;</span>1.0<span class=\"nt\">&lt;/comms_distance_max&gt;</span>\n        <span class=\"nt\">&lt;comms_drop_probability_min&gt;</span>0.0<span class=\"nt\">&lt;/comms_drop_probability_min&gt;</span>\n        <span class=\"nt\">&lt;comms_drop_probability_max&gt;</span>0.0<span class=\"nt\">&lt;/comms_drop_probability_max&gt;</span>\n        <span class=\"nt\">&lt;comms_outage_probability&gt;</span>0.0<span class=\"nt\">&lt;/comms_outage_probability&gt;</span>\n        <span class=\"nt\">&lt;comms_outage_duration_min&gt;</span>0.0<span class=\"nt\">&lt;/comms_outage_duration_min&gt;</span>\n        <span class=\"nt\">&lt;comms_outage_duration_max&gt;</span>10.0<span class=\"nt\">&lt;/comms_outage_duration_max&gt;</span>\n      <span class=\"nt\">&lt;/comms_model&gt;</span>\n    <span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>2. Compile and install as usual:</p>\n<div class=\"codehilite\"><pre><span></span>catkin_make install\n</pre></div>\n\n\n<p>3. Launch the simulation:</p>\n<div class=\"codehilite\"><pre><span></span>roslaunch subt_gazebo quickstart.launch\n</pre></div>\n\n\n<p>4. Press the left arrows of the joystick and verity that the LEDs aren\u2019t flashing (only the LED of the sender robot should flash).</p>\n<p>5. Enable the simple mode:</p>\n<div class=\"codehilite\"><pre><span></span>rosparam set /subt/comms/simple_mode true\n</pre></div>\n\n\n<p>6. Repeat the step (4) and you should observe the LED\u2019s flashing indicating that the destination robot is receiving messages.</p>\n<p>\u200c</p>\n<p>I\u2019ll update the documentation when this PR is merged.</p>", "type": "rendered"}, "source": {"commit": {"hash": "f1a1ad8b287b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/f1a1ad8b287b.json"}, "html": {"href": "#!/osrf/subt/commits/f1a1ad8b287b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "comms_simple_mode"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-11-01T22:34:26.535156+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2018-10-31T18:22:23.172599+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2018-11-01T22:34:26.545477+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "06d66b7df267", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/06d66b7df267.json"}, "html": {"href": "#!/osrf/subt/commits/06d66b7df267"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}