{"rendered": {"description": {"raw": "This pull request enables the `visibility_range` comms model type. If for some reason the `visibility_range` is selected but the required files are not present \\( `.dot`and `.dat` files\\), the plugin will automatically use `log_normal_range` as a fallback.\r\n\r\nHow do I test it?\r\n\r\n* At this moment, we don't have the `.dot` and `.dat` files for the `virtual_stix` world, so we'll need to use `tunnel_qual_ign` for testing. Edit the file `subt_ign/launch/virtual_stix.ign` and replace `worldName = 'virtual_stix'` with `worldName = 'tunnel_qual_ign'`\r\n* We need to exercise some communication between the robots. I created some testing controllers for this purpose. Edit the file `subt_ign/launch/team.ign` and uncomment the following two blocks at the end of the file:\r\n\r\n```\r\n<!-- Testing comms in X1 -->\r\n<!-- <plugin entity_name=\"X1\"\r\n             entity_type=\"model\"\r\n             name=\"subt::ControllerPlugin\"\r\n             filename=\"libControllerPlugin.so\">\r\n  <name>X1</name>\r\n</plugin> -->\r\n\r\n<!-- Testing comms in X2 -->\r\n<!-- <plugin entity_name=\"X2\"\r\n             entity_type=\"model\"\r\n             name=\"subt::ControllerPlugin\"\r\n             filename=\"libControllerPlugin.so\">\r\n  <name>X2</name>\r\n</plugin> -->\r\n```\r\n\r\n* Recompile, and launch the world with:\r\n\r\n```\r\nign launch virtual_stix.ign -v 4\r\n```\r\n\r\n* And in a separate terminal run:\r\n\r\n```\r\nign launch team.ign -v 4\r\n```\r\n\r\nYou should observe the following messages in the first terminal showing that the messages are actually received between X1 and X2:\r\n\r\n```\r\n[Msg] X1 controller loaded\r\n[Msg] X2 controller loaded\r\n[Msg] [X2] Msg sent\r\n[Msg] [X1] Message received from [X2]: [hello from X2]\r\n[Msg] [X1] Msg sent\r\n[Msg] [X2] Message received from [X1]: [hello from X1]\r\n[Msg] [X2] Msg sent\r\n[Msg] [X1] Message received from [X2]: [hello from X2]\r\n```", "markup": "markdown", "html": "<p>This pull request enables the <code>visibility_range</code> comms model type. If for some reason the <code>visibility_range</code> is selected but the required files are not present ( <code>.dot</code>and <code>.dat</code> files), the plugin will automatically use <code>log_normal_range</code> as a fallback.</p>\n<p>How do I test it?</p>\n<ul>\n<li>At this moment, we don't have the <code>.dot</code> and <code>.dat</code> files for the <code>virtual_stix</code> world, so we'll need to use <code>tunnel_qual_ign</code> for testing. Edit the file <code>subt_ign/launch/virtual_stix.ign</code> and replace <code>worldName = 'virtual_stix'</code> with <code>worldName = 'tunnel_qual_ign'</code></li>\n<li>We need to exercise some communication between the robots. I created some testing controllers for this purpose. Edit the file <code>subt_ign/launch/team.ign</code> and uncomment the following two blocks at the end of the file:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><span class=\"c\">&lt;!-- Testing comms in X1 --&gt;</span>\n<span class=\"c\">&lt;!-- &lt;plugin entity_name=&quot;X1&quot;</span>\n<span class=\"c\">             entity_type=&quot;model&quot;</span>\n<span class=\"c\">             name=&quot;subt::ControllerPlugin&quot;</span>\n<span class=\"c\">             filename=&quot;libControllerPlugin.so&quot;&gt;</span>\n<span class=\"c\">  &lt;name&gt;X1&lt;/name&gt;</span>\n<span class=\"c\">&lt;/plugin&gt; --&gt;</span>\n\n<span class=\"c\">&lt;!-- Testing comms in X2 --&gt;</span>\n<span class=\"c\">&lt;!-- &lt;plugin entity_name=&quot;X2&quot;</span>\n<span class=\"c\">             entity_type=&quot;model&quot;</span>\n<span class=\"c\">             name=&quot;subt::ControllerPlugin&quot;</span>\n<span class=\"c\">             filename=&quot;libControllerPlugin.so&quot;&gt;</span>\n<span class=\"c\">  &lt;name&gt;X2&lt;/name&gt;</span>\n<span class=\"c\">&lt;/plugin&gt; --&gt;</span>\n</pre></div>\n\n\n<ul>\n<li>Recompile, and launch the world with:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>ign launch virtual_stix.ign -v 4\n</pre></div>\n\n\n<ul>\n<li>And in a separate terminal run:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>ign launch team.ign -v 4\n</pre></div>\n\n\n<p>You should observe the following messages in the first terminal showing that the messages are actually received between X1 and X2:</p>\n<div class=\"codehilite\"><pre><span></span>[Msg] X1 controller loaded\n[Msg] X2 controller loaded\n[Msg] [X2] Msg sent\n[Msg] [X1] Message received from [X2]: [hello from X2]\n[Msg] [X1] Msg sent\n[Msg] [X2] Message received from [X1]: [hello from X1]\n[Msg] [X2] Msg sent\n[Msg] [X1] Message received from [X2]: [hello from X2]\n</pre></div>", "type": "rendered"}, "title": {"raw": "Visibility range", "markup": "markdown", "html": "<p>Visibility range</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request enables the `visibility_range` comms model type. If for some reason the `visibility_range` is selected but the required files are not present \\( `.dot`and `.dat` files\\), the plugin will automatically use `log_normal_range` as a fallback.\r\n\r\nHow do I test it?\r\n\r\n* At this moment, we don't have the `.dot` and `.dat` files for the `virtual_stix` world, so we'll need to use `tunnel_qual_ign` for testing. Edit the file `subt_ign/launch/virtual_stix.ign` and replace `worldName = 'virtual_stix'` with `worldName = 'tunnel_qual_ign'`\r\n* We need to exercise some communication between the robots. I created some testing controllers for this purpose. Edit the file `subt_ign/launch/team.ign` and uncomment the following two blocks at the end of the file:\r\n\r\n```\r\n<!-- Testing comms in X1 -->\r\n<!-- <plugin entity_name=\"X1\"\r\n             entity_type=\"model\"\r\n             name=\"subt::ControllerPlugin\"\r\n             filename=\"libControllerPlugin.so\">\r\n  <name>X1</name>\r\n</plugin> -->\r\n\r\n<!-- Testing comms in X2 -->\r\n<!-- <plugin entity_name=\"X2\"\r\n             entity_type=\"model\"\r\n             name=\"subt::ControllerPlugin\"\r\n             filename=\"libControllerPlugin.so\">\r\n  <name>X2</name>\r\n</plugin> -->\r\n```\r\n\r\n* Recompile, and launch the world with:\r\n\r\n```\r\nign launch virtual_stix.ign -v 4\r\n```\r\n\r\n* And in a separate terminal run:\r\n\r\n```\r\nign launch team.ign -v 4\r\n```\r\n\r\nYou should observe the following messages in the first terminal showing that the messages are actually received between X1 and X2:\r\n\r\n```\r\n[Msg] X1 controller loaded\r\n[Msg] X2 controller loaded\r\n[Msg] [X2] Msg sent\r\n[Msg] [X1] Message received from [X2]: [hello from X2]\r\n[Msg] [X1] Msg sent\r\n[Msg] [X2] Message received from [X1]: [hello from X1]\r\n[Msg] [X2] Msg sent\r\n[Msg] [X1] Message received from [X2]: [hello from X2]\r\n```", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/pullrequests/146/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/diffstat/osrf/subt:7783bf09dffa%0D3a64d15b5bdc?from_pullrequest_id=146"}, "commits": {"href": "data/repositories/osrf/subt/pullrequests/146/commits.json"}, "self": {"href": "data/repositories/osrf/subt/pullrequests/146.json"}, "comments": {"href": "data/repositories/osrf/subt/pullrequests/146/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/pullrequests/146/merge"}, "html": {"href": "#!/osrf/subt/pull-requests/146"}, "activity": {"href": "data/repositories/osrf/subt/pullrequests/146/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/diff/osrf/subt:7783bf09dffa%0D3a64d15b5bdc?from_pullrequest_id=146"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/subt/pullrequests/146/approve"}, "statuses": {"href": "data/repositories/osrf/subt/pullrequests/146/statuses_page=1.json"}}, "title": "Visibility range", "close_source_branch": true, "reviewers": [], "id": 146, "destination": {"commit": {"hash": "3a64d15b5bdc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/3a64d15b5bdc.json"}, "html": {"href": "#!/osrf/subt/commits/3a64d15b5bdc"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "default"}}, "created_on": "2019-06-06T21:35:50.092224+00:00", "summary": {"raw": "This pull request enables the `visibility_range` comms model type. If for some reason the `visibility_range` is selected but the required files are not present \\( `.dot`and `.dat` files\\), the plugin will automatically use `log_normal_range` as a fallback.\r\n\r\nHow do I test it?\r\n\r\n* At this moment, we don't have the `.dot` and `.dat` files for the `virtual_stix` world, so we'll need to use `tunnel_qual_ign` for testing. Edit the file `subt_ign/launch/virtual_stix.ign` and replace `worldName = 'virtual_stix'` with `worldName = 'tunnel_qual_ign'`\r\n* We need to exercise some communication between the robots. I created some testing controllers for this purpose. Edit the file `subt_ign/launch/team.ign` and uncomment the following two blocks at the end of the file:\r\n\r\n```\r\n<!-- Testing comms in X1 -->\r\n<!-- <plugin entity_name=\"X1\"\r\n             entity_type=\"model\"\r\n             name=\"subt::ControllerPlugin\"\r\n             filename=\"libControllerPlugin.so\">\r\n  <name>X1</name>\r\n</plugin> -->\r\n\r\n<!-- Testing comms in X2 -->\r\n<!-- <plugin entity_name=\"X2\"\r\n             entity_type=\"model\"\r\n             name=\"subt::ControllerPlugin\"\r\n             filename=\"libControllerPlugin.so\">\r\n  <name>X2</name>\r\n</plugin> -->\r\n```\r\n\r\n* Recompile, and launch the world with:\r\n\r\n```\r\nign launch virtual_stix.ign -v 4\r\n```\r\n\r\n* And in a separate terminal run:\r\n\r\n```\r\nign launch team.ign -v 4\r\n```\r\n\r\nYou should observe the following messages in the first terminal showing that the messages are actually received between X1 and X2:\r\n\r\n```\r\n[Msg] X1 controller loaded\r\n[Msg] X2 controller loaded\r\n[Msg] [X2] Msg sent\r\n[Msg] [X1] Message received from [X2]: [hello from X2]\r\n[Msg] [X1] Msg sent\r\n[Msg] [X2] Message received from [X1]: [hello from X1]\r\n[Msg] [X2] Msg sent\r\n[Msg] [X1] Message received from [X2]: [hello from X2]\r\n```", "markup": "markdown", "html": "<p>This pull request enables the <code>visibility_range</code> comms model type. If for some reason the <code>visibility_range</code> is selected but the required files are not present ( <code>.dot</code>and <code>.dat</code> files), the plugin will automatically use <code>log_normal_range</code> as a fallback.</p>\n<p>How do I test it?</p>\n<ul>\n<li>At this moment, we don't have the <code>.dot</code> and <code>.dat</code> files for the <code>virtual_stix</code> world, so we'll need to use <code>tunnel_qual_ign</code> for testing. Edit the file <code>subt_ign/launch/virtual_stix.ign</code> and replace <code>worldName = 'virtual_stix'</code> with <code>worldName = 'tunnel_qual_ign'</code></li>\n<li>We need to exercise some communication between the robots. I created some testing controllers for this purpose. Edit the file <code>subt_ign/launch/team.ign</code> and uncomment the following two blocks at the end of the file:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><span class=\"c\">&lt;!-- Testing comms in X1 --&gt;</span>\n<span class=\"c\">&lt;!-- &lt;plugin entity_name=&quot;X1&quot;</span>\n<span class=\"c\">             entity_type=&quot;model&quot;</span>\n<span class=\"c\">             name=&quot;subt::ControllerPlugin&quot;</span>\n<span class=\"c\">             filename=&quot;libControllerPlugin.so&quot;&gt;</span>\n<span class=\"c\">  &lt;name&gt;X1&lt;/name&gt;</span>\n<span class=\"c\">&lt;/plugin&gt; --&gt;</span>\n\n<span class=\"c\">&lt;!-- Testing comms in X2 --&gt;</span>\n<span class=\"c\">&lt;!-- &lt;plugin entity_name=&quot;X2&quot;</span>\n<span class=\"c\">             entity_type=&quot;model&quot;</span>\n<span class=\"c\">             name=&quot;subt::ControllerPlugin&quot;</span>\n<span class=\"c\">             filename=&quot;libControllerPlugin.so&quot;&gt;</span>\n<span class=\"c\">  &lt;name&gt;X2&lt;/name&gt;</span>\n<span class=\"c\">&lt;/plugin&gt; --&gt;</span>\n</pre></div>\n\n\n<ul>\n<li>Recompile, and launch the world with:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>ign launch virtual_stix.ign -v 4\n</pre></div>\n\n\n<ul>\n<li>And in a separate terminal run:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>ign launch team.ign -v 4\n</pre></div>\n\n\n<p>You should observe the following messages in the first terminal showing that the messages are actually received between X1 and X2:</p>\n<div class=\"codehilite\"><pre><span></span>[Msg] X1 controller loaded\n[Msg] X2 controller loaded\n[Msg] [X2] Msg sent\n[Msg] [X1] Message received from [X2]: [hello from X2]\n[Msg] [X1] Msg sent\n[Msg] [X2] Message received from [X1]: [hello from X1]\n[Msg] [X2] Msg sent\n[Msg] [X1] Message received from [X2]: [hello from X2]\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "14b232cf061b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/14b232cf061b.json"}, "html": {"href": "#!/osrf/subt/commits/14b232cf061b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/subt.json"}, "html": {"href": "#!/osrf/subt"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3c95f6ad-c304-407c-b838-09597d836552}ts=2272898"}}, "type": "repository", "name": "subt", "full_name": "osrf/subt", "uuid": "{3c95f6ad-c304-407c-b838-09597d836552}"}, "branch": {"name": "visibility_range"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2019-06-11T18:02:15.951340+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2019-06-12T14:49:55.545794+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2019-06-12T14:53:33.877554+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "7783bf09dffa", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/subt/commit/7783bf09dffa.json"}, "html": {"href": "#!/osrf/subt/commits/7783bf09dffa"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}