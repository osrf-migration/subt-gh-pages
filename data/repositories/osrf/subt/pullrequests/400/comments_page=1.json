{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132034132.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132034132"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "Tested it and fixes the `Joint` error. Thanks @{557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5} !\n\n![](data/bitbucket.org/repo/8ze6Mjd/images/1609760006-Pr400.png)\n\u200c", "markup": "markdown", "html": "<p>Tested it and fixes the <code>Joint</code> error. Thanks <span class=\"ap-mention\" data-atlassian-id=\"557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5\">@Ian Chen</span> !</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/8ze6Mjd/images/1609760006-Pr400.png\" />\n\u200c</p>", "type": "rendered"}, "created_on": "2020-01-17T02:13:36.483240+00:00", "user": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "updated_on": "2020-01-17T02:13:36.500150+00:00", "type": "pullrequest_comment", "id": 132034132}, {"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132131755.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132131755"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "On `urban_circuit`:  \nFunctional:  \n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X4 robotConfig2:=X4_SENSOR_CONFIG_6`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X5 robotConfig2:=X3_SENSOR_CONFIG_5 robotName3:=X4 robotConfig3:=X4_SENSOR_CONFIG_6`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X1_SENSOR_CONFIG_4 robotName2:=bravo robotConfig2:=X2_SENSOR_CONFIG_6 robotName3:=charlie robotConfig3:=X1_SENSOR_CONFIG_4`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X4 robotConfig1:=X4_SENSOR_CONFIG_6 robotName2:=X3 robotConfig2:=X3_SENSOR_CONFIG_5`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6 robotName5:=echo robotConfig5:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1`\n\nCrashes:  \n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X4 robotConfig2:=X4_SENSOR_CONFIG_6 robotName3:=X5 robotConfig3:=X3_SENSOR_CONFIG_5`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X1_SENSOR_CONFIG_4 robotName2:=X3 robotConfig2:=X3_SENSOR_CONFIG_5 robotName3:=X4 robotConfig3:=X4_SENSOR_CONFIG_6 robotName4:=X5 robotConfig4:=X3_SENSOR_CONFIG_5`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6 robotName5:=echo robotConfig5:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1 robotName6:=foxtrot robotConfig6:=X3_SENSOR_CONFIG_5`\n\nThis does not need to be merged until after Urban Circuit due to the Code Freeze.  Above I have shown that if you shuffle the launch command you can spawn the same vehicle configuration (X3, X3, X4) and this only pertains to X3/X4 vehicles.  If a competitor submits with this specific series of vehicle spawn it will result in an error locally AND on CloudSim which we can clarify the issue and supply a work-around when approached by the competitor.  In an absolute worse-case scenario, we can apply the fix specifically for their runs in post-submission since this update would be completely independent from the competitor solution when running on CloudSim.\n\nThe Code Freeze should only be broken when a major issue is discovered and there exists no sufficient work-around.  The scope of this issue does not currently meet both of those criteria.", "markup": "markdown", "html": "<p>On <code>urban_circuit</code>:<br />\nFunctional:<br />\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X4 robotConfig2:=X4_SENSOR_CONFIG_6</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X5 robotConfig2:=X3_SENSOR_CONFIG_5 robotName3:=X4 robotConfig3:=X4_SENSOR_CONFIG_6</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X1_SENSOR_CONFIG_4 robotName2:=bravo robotConfig2:=X2_SENSOR_CONFIG_6 robotName3:=charlie robotConfig3:=X1_SENSOR_CONFIG_4</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X4 robotConfig1:=X4_SENSOR_CONFIG_6 robotName2:=X3 robotConfig2:=X3_SENSOR_CONFIG_5</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6 robotName5:=echo robotConfig5:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1</code></p>\n<p>Crashes:<br />\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X4 robotConfig2:=X4_SENSOR_CONFIG_6 robotName3:=X5 robotConfig3:=X3_SENSOR_CONFIG_5</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X1_SENSOR_CONFIG_4 robotName2:=X3 robotConfig2:=X3_SENSOR_CONFIG_5 robotName3:=X4 robotConfig3:=X4_SENSOR_CONFIG_6 robotName4:=X5 robotConfig4:=X3_SENSOR_CONFIG_5</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6 robotName5:=echo robotConfig5:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1 robotName6:=foxtrot robotConfig6:=X3_SENSOR_CONFIG_5</code></p>\n<p>This does not need to be merged until after Urban Circuit due to the Code Freeze.  Above I have shown that if you shuffle the launch command you can spawn the same vehicle configuration (X3, X3, X4) and this only pertains to X3/X4 vehicles.  If a competitor submits with this specific series of vehicle spawn it will result in an error locally AND on CloudSim which we can clarify the issue and supply a work-around when approached by the competitor.  In an absolute worse-case scenario, we can apply the fix specifically for their runs in post-submission since this update would be completely independent from the competitor solution when running on CloudSim.</p>\n<p>The Code Freeze should only be broken when a major issue is discovered and there exists no sufficient work-around.  The scope of this issue does not currently meet both of those criteria.</p>", "type": "rendered"}, "created_on": "2020-01-17T15:04:50.809097+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": "2020-01-17T17:50:44.113513+00:00", "type": "pullrequest_comment", "id": 132131755}, {"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132133324.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132133324"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "@{557058:14b7fd50-d65a-47a8-825c-fa89681d07bd} 's test cases indicate that there is a _very_ simple workaround \\(changing launch order\\) so I agree this PR should not be merged before Urban Circuit. The Code Freeze should be maintained as much as possible.", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:14b7fd50-d65a-47a8-825c-fa89681d07bd\">@Arthur Schang</span> 's test cases indicate that there is a <em>very</em> simple workaround (changing launch order) so I agree this PR should not be merged before Urban Circuit. The Code Freeze should be maintained as much as possible.</p>", "type": "rendered"}, "created_on": "2020-01-17T15:12:58.220222+00:00", "user": {"display_name": "Angela Maio", "uuid": "{cdc95f92-6897-4f96-b661-b1875267c8f1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcdc95f92-6897-4f96-b661-b1875267c8f1%7D"}, "html": {"href": "https://bitbucket.org/%7Bcdc95f92-6897-4f96-b661-b1875267c8f1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ae8633826268aef93fddf5d270c9639bd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAM-4.png"}}, "nickname": "Angela Maio", "type": "user", "account_id": "5d4d9e1f2c0fea0d07ca3151"}, "updated_on": "2020-01-17T15:12:58.233405+00:00", "type": "pullrequest_comment", "id": 132133324}, {"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132175404.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132175404"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "On `urban_spawner`:  \nFunctional:  \n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X4 robotConfig2:=X4_SENSOR_CONFIG_6 robotName3:=X5 robotConfig3:=X3_SENSOR_CONFIG_5`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X1_SENSOR_CONFIG_4 robotName2:=X3 robotConfig2:=X3_SENSOR_CONFIG_5 robotName3:=X4 robotConfig3:=X4_SENSOR_CONFIG_6 robotName4:=X5 robotConfig4:=X3_SENSOR_CONFIG_5`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6 robotName5:=echo robotConfig5:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1 robotName6:=foxtrot robotConfig6:=X3_SENSOR_CONFIG_5`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X4 robotConfig2:=X4_SENSOR_CONFIG_6`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X5 robotConfig2:=X3_SENSOR_CONFIG_5 robotName3:=X4 robotConfig3:=X4_SENSOR_CONFIG_6`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X1_SENSOR_CONFIG_4 robotName2:=bravo robotConfig2:=X2_SENSOR_CONFIG_6 robotName3:=charlie robotConfig3:=X1_SENSOR_CONFIG_4`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X4 robotConfig1:=X4_SENSOR_CONFIG_6 robotName2:=X3 robotConfig2:=X3_SENSOR_CONFIG_5`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6 robotName5:=echo robotConfig5:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X4_SENSOR_CONFIG_5 robotName2:=bravo robotConfig2:=X3_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X3_SENSOR_CONFIG_5 robotName5:=echo robotConfig5:=X4_SENSOR_CONFIG_6`\n\nCrashes:  \nNone", "markup": "markdown", "html": "<p>On <code>urban_spawner</code>:<br />\nFunctional:<br />\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X4 robotConfig2:=X4_SENSOR_CONFIG_6 robotName3:=X5 robotConfig3:=X3_SENSOR_CONFIG_5</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X1_SENSOR_CONFIG_4 robotName2:=X3 robotConfig2:=X3_SENSOR_CONFIG_5 robotName3:=X4 robotConfig3:=X4_SENSOR_CONFIG_6 robotName4:=X5 robotConfig4:=X3_SENSOR_CONFIG_5</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6 robotName5:=echo robotConfig5:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1 robotName6:=foxtrot robotConfig6:=X3_SENSOR_CONFIG_5</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X4 robotConfig2:=X4_SENSOR_CONFIG_6</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X5 robotConfig2:=X3_SENSOR_CONFIG_5 robotName3:=X4 robotConfig3:=X4_SENSOR_CONFIG_6</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X1_SENSOR_CONFIG_4 robotName2:=bravo robotConfig2:=X2_SENSOR_CONFIG_6 robotName3:=charlie robotConfig3:=X1_SENSOR_CONFIG_4</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X4 robotConfig1:=X4_SENSOR_CONFIG_6 robotName2:=X3 robotConfig2:=X3_SENSOR_CONFIG_5</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6 robotName5:=echo robotConfig5:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X4_SENSOR_CONFIG_5 robotName2:=bravo robotConfig2:=X3_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X3_SENSOR_CONFIG_5 robotName5:=echo robotConfig5:=X4_SENSOR_CONFIG_6</code></p>\n<p>Crashes:<br />\nNone</p>", "type": "rendered"}, "created_on": "2020-01-17T20:35:07.354189+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": "2020-01-17T20:37:33.112087+00:00", "type": "pullrequest_comment", "id": 132175404}, {"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132180854.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132180854"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "The underlying cause of the problem here is that `require` caches the paths it sees and won't load a new library if it thinks the library has been loaded before. For example, when launching the  `X3C5 X4C6 X3C5`, the following require calls happen\n```\nrequire /path/to/x3_sensor_config_5/launch/spawner.rb\nrequire /path/to/x4_sensor_config_6/launch/spawner.rb\nrequire /path/to/x3_sensor_config_5/launch/spawner.rb\n```\nHowever, the last one fails because `require` has seen the path before and won't load it. As a result, the launcher will use the `spawn` function in `/path/to/x4_sensor_config_6/launch/spawner.rb` instead of `/path/to/x3_sensor_config_5/launch/spawner.rb`. \n\nNote that this only affects team submitted vehicles (all models in the `submitted_models` directory). \"Built in\" vehicles do not use `spawner.rb`, so they are not affected.\n\nThis fix should not affect existing behavior other than fixing the crashing issue.\n", "markup": "markdown", "html": "<p>The underlying cause of the problem here is that <code>require</code> caches the paths it sees and won't load a new library if it thinks the library has been loaded before. For example, when launching the  <code>X3C5 X4C6 X3C5</code>, the following require calls happen</p>\n<div class=\"codehilite\"><pre><span></span>require /path/to/x3_sensor_config_5/launch/spawner.rb\nrequire /path/to/x4_sensor_config_6/launch/spawner.rb\nrequire /path/to/x3_sensor_config_5/launch/spawner.rb\n</pre></div>\n\n\n<p>However, the last one fails because <code>require</code> has seen the path before and won't load it. As a result, the launcher will use the <code>spawn</code> function in <code>/path/to/x4_sensor_config_6/launch/spawner.rb</code> instead of <code>/path/to/x3_sensor_config_5/launch/spawner.rb</code>. </p>\n<p>Note that this only affects team submitted vehicles (all models in the <code>submitted_models</code> directory). \"Built in\" vehicles do not use <code>spawner.rb</code>, so they are not affected.</p>\n<p>This fix should not affect existing behavior other than fixing the crashing issue.</p>", "type": "rendered"}, "created_on": "2020-01-17T21:39:06.711877+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2020-01-17T21:39:06.719888+00:00", "type": "pullrequest_comment", "id": 132180854}, {"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132181227.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132181227"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "---\n\n# **DO NOT MERGE!**\n\n\u200c", "markup": "markdown", "html": "<hr />\n<h1 id=\"markdown-header-do-not-merge\"><strong>DO NOT MERGE!</strong></h1>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2020-01-17T21:44:22.675637+00:00", "user": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "updated_on": "2020-01-17T21:44:22.683392+00:00", "type": "pullrequest_comment", "id": 132181227}, {"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132349977.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132349977"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "I understand the implications now @{557058:90bc87b0-2886-4377-a17c-3a6629a697ff} .  It sounds like that could be a potential issue.  I don't think the X4 would fly with an X3 `spawner.rb` so I'm confused that I was able to move those vehicles while spawning them that way.\n\nThis could be an issue or it might not be.  Hopefully it will not be but I could see a strong case to merge this if we have to do any further modifications.", "markup": "markdown", "html": "<p>I understand the implications now <span class=\"ap-mention\" data-atlassian-id=\"557058:90bc87b0-2886-4377-a17c-3a6629a697ff\">@Addisu Z. Taddese</span> .  It sounds like that could be a potential issue.  I don't think the X4 would fly with an X3 <code>spawner.rb</code> so I'm confused that I was able to move those vehicles while spawning them that way.</p>\n<p>This could be an issue or it might not be.  Hopefully it will not be but I could see a strong case to merge this if we have to do any further modifications.</p>", "type": "rendered"}, "created_on": "2020-01-20T16:59:56.964369+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": "2020-01-20T16:59:56.975741+00:00", "type": "pullrequest_comment", "id": 132349977}, {"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132511155.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132511155"}}, "parent": {"id": 132349977, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132349977.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132349977"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": ">  I don't think the X4 would fly with an X3 spawner.rb so I'm confused that I was able to move those vehicles while spawning them that way.\n\nYou were able to move the vehicles? For me it crashes before the it finishes loading the vehicles. I'm assuming you mean without this PR.", "markup": "markdown", "html": "<blockquote>\n<p>I don't think the X4 would fly with an X3 spawner.rb so I'm confused that I was able to move those vehicles while spawning them that way.</p>\n</blockquote>\n<p>You were able to move the vehicles? For me it crashes before the it finishes loading the vehicles. I'm assuming you mean without this PR.</p>", "type": "rendered"}, "created_on": "2020-01-21T15:23:29.071558+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2020-01-21T15:23:29.086404+00:00", "type": "pullrequest_comment", "id": 132511155}, {"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132513026.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132513026"}}, "parent": {"id": 132511155, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132511155.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132511155"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "All of these surprisingly worked for me.  Including quadrotors flying.\n\nOn `urban_circuit`:  \nFunctional:  \n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X4 robotConfig2:=X4_SENSOR_CONFIG_6`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X5 robotConfig2:=X3_SENSOR_CONFIG_5 robotName3:=X4 robotConfig3:=X4_SENSOR_CONFIG_6`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X1_SENSOR_CONFIG_4 robotName2:=bravo robotConfig2:=X2_SENSOR_CONFIG_6 robotName3:=charlie robotConfig3:=X1_SENSOR_CONFIG_4`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X4 robotConfig1:=X4_SENSOR_CONFIG_6 robotName2:=X3 robotConfig2:=X3_SENSOR_CONFIG_5`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6`\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6 robotName5:=echo robotConfig5:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1`", "markup": "markdown", "html": "<p>All of these surprisingly worked for me.  Including quadrotors flying.</p>\n<p>On <code>urban_circuit</code>:<br />\nFunctional:<br />\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X4 robotConfig2:=X4_SENSOR_CONFIG_6</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X5 robotConfig2:=X3_SENSOR_CONFIG_5 robotName3:=X4 robotConfig3:=X4_SENSOR_CONFIG_6</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X1_SENSOR_CONFIG_4 robotName2:=bravo robotConfig2:=X2_SENSOR_CONFIG_6 robotName3:=charlie robotConfig3:=X1_SENSOR_CONFIG_4</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X4 robotConfig1:=X4_SENSOR_CONFIG_6 robotName2:=X3 robotConfig2:=X3_SENSOR_CONFIG_5</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6</code>\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=SSCI_X4_SENSOR_CONFIG_2 robotName4:=delta robotConfig4:=X4_SENSOR_CONFIG_6 robotName5:=echo robotConfig5:=SOPHISTICATED_ENGINEERING_X4_SENSOR_CONFIG_1</code></p>", "type": "rendered"}, "created_on": "2020-01-21T15:32:16.910440+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": "2020-01-21T15:32:16.922231+00:00", "type": "pullrequest_comment", "id": 132513026}, {"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132519873.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132519873"}}, "parent": {"id": 132513026, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132513026.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132513026"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "Yeah, I expect all of those to work fine. The problem occurs only when you want to spawn a vehicle of the same type more than once. The vehicles are spawned one at a time and in the order of their `robotConfig#` number. When iterating through the list of vehicles, the launcher tries to load the `spawner.rb` associated with the vehicle. The problem comes in when the launcher wants to load a `spawner.rb` more than once. So in the earlier example, `X3C5 X4C6 X3C5`, it fails when spawning the second X3C5 because it has previously seen the path to it's `spawner.rb` script. By fail I mean that it refuses to load a new `spawner.rb` and continues to use the `spawner.rb` that was already loaded, which happens to be the X4C6's `spawner.rb`. If all the configs are different, all the paths to their corresponding `spawner.rb` scripts will be different so there won't be a problem. In the ones you tried, only the following have repeated configs:\n\n* `ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X5 robotConfig2:=X3_SENSOR_CONFIG_5 robotName3:=X4 robotConfig3:=X4_SENSOR_CONFIG_6`\n    * This works because the repeated configs are right after each other. Even though `require` fails to load the `spawner.rb` for the second X3C5, it will do the right thing because the current `spawn` function is for a X3C5 from the first robot\n* `ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X1_SENSOR_CONFIG_4 robotName2:=bravo robotConfig2:=X2_SENSOR_CONFIG_6 robotName3:=charlie robotConfig3:=X1_SENSOR_CONFIG_4`\n    * X1C4 is repeated here, but since it's a \"built-in\" vehicle, it works fine.", "markup": "markdown", "html": "<p>Yeah, I expect all of those to work fine. The problem occurs only when you want to spawn a vehicle of the same type more than once. The vehicles are spawned one at a time and in the order of their <code>robotConfig#</code> number. When iterating through the list of vehicles, the launcher tries to load the <code>spawner.rb</code> associated with the vehicle. The problem comes in when the launcher wants to load a <code>spawner.rb</code> more than once. So in the earlier example, <code>X3C5 X4C6 X3C5</code>, it fails when spawning the second X3C5 because it has previously seen the path to it's <code>spawner.rb</code> script. By fail I mean that it refuses to load a new <code>spawner.rb</code> and continues to use the <code>spawner.rb</code> that was already loaded, which happens to be the X4C6's <code>spawner.rb</code>. If all the configs are different, all the paths to their corresponding <code>spawner.rb</code> scripts will be different so there won't be a problem. In the ones you tried, only the following have repeated configs:</p>\n<ul>\n<li><code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=X3 robotConfig1:=X3_SENSOR_CONFIG_5 robotName2:=X5 robotConfig2:=X3_SENSOR_CONFIG_5 robotName3:=X4 robotConfig3:=X4_SENSOR_CONFIG_6</code><ul>\n<li>This works because the repeated configs are right after each other. Even though <code>require</code> fails to load the <code>spawner.rb</code> for the second X3C5, it will do the right thing because the current <code>spawn</code> function is for a X3C5 from the first robot</li>\n</ul>\n</li>\n<li><code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X1_SENSOR_CONFIG_4 robotName2:=bravo robotConfig2:=X2_SENSOR_CONFIG_6 robotName3:=charlie robotConfig3:=X1_SENSOR_CONFIG_4</code><ul>\n<li>X1C4 is repeated here, but since it's a \"built-in\" vehicle, it works fine.</li>\n</ul>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2020-01-21T16:02:07.327994+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2020-01-21T16:02:07.338828+00:00", "type": "pullrequest_comment", "id": 132519873}, {"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132564997.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132564997"}}, "parent": {"id": 132519873, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132519873.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132519873"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "I ran the following command with the Robotika custom vehicle submission that uses a `spawner.rb` and I did not run into issues.  Both vehicles are separate and ROS topic/sensor mapping is correct.\n\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=ROBOTIKA_X2_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=ROBOTIKA_X2_SENSOR_CONFIG_1`\n\nI think I understand the implications but then the above launch shouldn't work so I'm having trouble reproducing this in cases that I know will occur during competitor submissions.", "markup": "markdown", "html": "<p>I ran the following command with the Robotika custom vehicle submission that uses a <code>spawner.rb</code> and I did not run into issues.  Both vehicles are separate and ROS topic/sensor mapping is correct.</p>\n<p><code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=ROBOTIKA_X2_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=ROBOTIKA_X2_SENSOR_CONFIG_1</code></p>\n<p>I think I understand the implications but then the above launch shouldn't work so I'm having trouble reproducing this in cases that I know will occur during competitor submissions.</p>", "type": "rendered"}, "created_on": "2020-01-21T21:16:28.688046+00:00", "user": {"display_name": "Arthur Schang", "uuid": "{1403972a-9b64-442b-a69c-d7e9557e1d87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D"}, "html": {"href": "https://bitbucket.org/%7B1403972a-9b64-442b-a69c-d7e9557e1d87%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/AS-0.png"}}, "nickname": "Arthur Schang", "type": "user", "account_id": "557058:14b7fd50-d65a-47a8-825c-fa89681d07bd"}, "updated_on": "2020-01-21T21:17:45.537949+00:00", "type": "pullrequest_comment", "id": 132564997}, {"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132584889.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132584889"}}, "parent": {"id": 132564997, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132564997.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132564997"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "That would also work fine because even though `require` won't load the `spawner.rb` of `robotConfig2`, since the previously loaded `spawner.rb` is for the same type (`ROBOTIKA_X2_SENSOR_CONFIG_1`), it will spawn the right configuration. This, however, fails (crashes)\n\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=ROBOTIKA_X2_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=ROBOTIKA_X2_SENSOR_CONFIG_1` \n\nA more subtle failure is shown with this example:\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=ROBOTIKA_X2_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=SSCI_X2_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=ROBOTIKA_X2_SENSOR_CONFIG_1`\nwhere since all the vehicles are X2, the system won't crash, but `charlie` will be a `SSCI_X2_SENSOR_CONFIG_1`.", "markup": "markdown", "html": "<p>That would also work fine because even though <code>require</code> won't load the <code>spawner.rb</code> of <code>robotConfig2</code>, since the previously loaded <code>spawner.rb</code> is for the same type (<code>ROBOTIKA_X2_SENSOR_CONFIG_1</code>), it will spawn the right configuration. This, however, fails (crashes)</p>\n<p><code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=ROBOTIKA_X2_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=ROBOTIKA_X2_SENSOR_CONFIG_1</code> </p>\n<p>A more subtle failure is shown with this example:\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=ROBOTIKA_X2_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=SSCI_X2_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=ROBOTIKA_X2_SENSOR_CONFIG_1</code>\nwhere since all the vehicles are X2, the system won't crash, but <code>charlie</code> will be a <code>SSCI_X2_SENSOR_CONFIG_1</code>.</p>", "type": "rendered"}, "created_on": "2020-01-22T01:07:35.923864+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2020-01-22T01:07:35.932431+00:00", "type": "pullrequest_comment", "id": 132584889}, {"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132586266.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132586266"}}, "parent": {"id": 132584889, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132584889.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132584889"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "similarly, this does not crash but `charlie` will be spawned using the wrong spawner:  \n\n```\nign launch -v 4 urban_circuit.ign worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X4_SENSOR_CONFIG_6 robotName2:=bravo robotConfig2:=X3_SENSOR_CONFIG_5 robotName3:=charlie robotConfig3:=X4_SENSOR_CONFIG_6\n```\n\n\u200c", "markup": "markdown", "html": "<p>similarly, this does not crash but <code>charlie</code> will be spawned using the wrong spawner:  </p>\n<div class=\"codehilite\"><pre><span></span>ign launch -v 4 urban_circuit.ign worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=X4_SENSOR_CONFIG_6 robotName2:=bravo robotConfig2:=X3_SENSOR_CONFIG_5 robotName3:=charlie robotConfig3:=X4_SENSOR_CONFIG_6\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2020-01-22T01:35:44.932454+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2020-01-22T01:35:44.939007+00:00", "type": "pullrequest_comment", "id": 132586266}, {"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/140709759.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-140709759"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "@{557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5} , is this ready to merge now that Urban is over?", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5\">@Ian Chen</span> , is this ready to merge now that Urban is over?</p>", "type": "rendered"}, "created_on": "2020-03-18T12:55:23.493643+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2020-03-18T12:55:23.509467+00:00", "type": "pullrequest_comment", "id": 140709759}, {"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/140780801.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-140780801"}}, "parent": {"id": 140709759, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/140709759.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-140709759"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "yes I think it\u2019s safe to merge this. We\u2019ll need these changes for cave", "markup": "markdown", "html": "<p>yes I think it\u2019s safe to merge this. We\u2019ll need these changes for cave</p>", "type": "rendered"}, "created_on": "2020-03-18T17:24:40.687489+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2020-03-18T17:24:40.697056+00:00", "type": "pullrequest_comment", "id": 140780801}], "page": 1, "size": 15}