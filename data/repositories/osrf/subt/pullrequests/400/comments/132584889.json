{"links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132584889.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132584889"}}, "parent": {"id": 132564997, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400/comments/132564997.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400/_/diff#comment-132564997"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 400, "links": {"self": {"href": "data/repositories/osrf/subt/pullrequests/400.json"}, "html": {"href": "#!/osrf/subt/pull-requests/400"}}, "title": "[DON'T MERGE] Update launch files to call the correct spawner method"}, "content": {"raw": "That would also work fine because even though `require` won't load the `spawner.rb` of `robotConfig2`, since the previously loaded `spawner.rb` is for the same type (`ROBOTIKA_X2_SENSOR_CONFIG_1`), it will spawn the right configuration. This, however, fails (crashes)\n\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=ROBOTIKA_X2_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=ROBOTIKA_X2_SENSOR_CONFIG_1` \n\nA more subtle failure is shown with this example:\n`ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=ROBOTIKA_X2_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=SSCI_X2_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=ROBOTIKA_X2_SENSOR_CONFIG_1`\nwhere since all the vehicles are X2, the system won't crash, but `charlie` will be a `SSCI_X2_SENSOR_CONFIG_1`.", "markup": "markdown", "html": "<p>That would also work fine because even though <code>require</code> won't load the <code>spawner.rb</code> of <code>robotConfig2</code>, since the previously loaded <code>spawner.rb</code> is for the same type (<code>ROBOTIKA_X2_SENSOR_CONFIG_1</code>), it will spawn the right configuration. This, however, fails (crashes)</p>\n<p><code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=ROBOTIKA_X2_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=SSCI_X4_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=ROBOTIKA_X2_SENSOR_CONFIG_1</code> </p>\n<p>A more subtle failure is shown with this example:\n<code>ign launch -v 4 urban_circuit.ign circuit:=urban worldName:=simple_urban_02 robotName1:=alpha robotConfig1:=ROBOTIKA_X2_SENSOR_CONFIG_1 robotName2:=bravo robotConfig2:=SSCI_X2_SENSOR_CONFIG_1 robotName3:=charlie robotConfig3:=ROBOTIKA_X2_SENSOR_CONFIG_1</code>\nwhere since all the vehicles are X2, the system won't crash, but <code>charlie</code> will be a <code>SSCI_X2_SENSOR_CONFIG_1</code>.</p>", "type": "rendered"}, "created_on": "2020-01-22T01:07:35.923864+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2020-01-22T01:07:35.932431+00:00", "type": "pullrequest_comment", "id": 132584889}